AltDescription type
  {
    description: String
    source: String
  }

ClassDefinition type
  {
    definingSlots: [SlotDefinition]
    slots: [SlotDefinition]
    slotUsage: [SlotDefinition]
    applyTo: ClassDefinition
    entity: String
    isA: ClassDefinition
    mixins: [ClassDefinition]
    unionOf: [ClassDefinition]
  }

Definition interface
  {
    isA: Definition
    mixin: String
    mixins: [Definition]
    abstract: String
    localNames: [String]
    unionOf: [Definition]
    subclassOf: String
    valuesFrom: [String]
    symmetric: String
  }

Element interface
  {
    name: String!
    singularName: String
    description: String
    note: String
    comment: String
    examples: [Example]
    seeAlso: String
    flags: [String]
    aliases: [String]
    mappings: [String]
    idPrefixes: [String]
    inSubset: [String]
    fromSchema: String
    altDescriptions: [AltDescription]
    exactMatches: [String]
    broaderMatches: [String]
    narrowerMatches: [String]
    closeMatches: [String]
  }

Example type
  {
    value: String
    description: String
  }

Prefix type
  {
    localName: String!
    prefixUri: String
  }

SchemaDefinition type
  {
    id: String!
    version: String
    imports: [String]
    license: String
    prefixes: [Prefix]
    defaultPrefix: String
    defaultType: TypeDefinition
    defaultCuriMaps: [String]
    types: [TypeDefinition]
    slots: [SlotDefinition]
    classes: [ClassDefinition]
    metamodelVersion: String
    sourceFile: String
    sourceFileSize: String
    sourceFileDate: String
    generationDate: String
  }

SlotDefinition type
  {
    multivalued: String
    domain: ClassDefinition
    range: String
    required: String
    objectProperty: String
    inlined: String
    primaryKey: String
    identifier: String
    definitional: String
    alias: String
    path: String
    subpropertyOf: SlotDefinition
    inverse: SlotDefinition
    isClassField: String
    role: String
    inherited: String
    isA: SlotDefinition
    mixins: [SlotDefinition]
    unionOf: [SlotDefinition]
  }

TypeDefinition type
  {
    typeof: String
  }


