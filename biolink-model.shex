BASE <https://w3id.org/biolink/vocab/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX UO: <http://purl.obolibrary.org/obo/UO_>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX metatype: <https://w3id.org/biolink/biolinkml/meta/types/>


<ChemicalFormulaValue> xsd:string

<CategoryType> IRI

<IriType> IRI

<LabelType> xsd:string

<PredicateType> IRI

<NarrativeText> xsd:string

<SymbolType> xsd:string

<Frequency> UO:0000105

<PercentageFrequencyValue> UO:0000187

<Quotient> UO:0010006

<Unit> UO:0000000

<TimeType> xsd:dateTime

<BiologicalSequence> xsd:string

metatype:String xsd:string

metatype:Integer xsd:integer

metatype:Boolean xsd:boolean

metatype:Float xsd:float

metatype:Double xsd:double

metatype:Time xsd:dateTime

metatype:Date xsd:date

metatype:Datetime xsd:dateTime

metatype:Uriorcurie IRI

metatype:Uri IRI

metatype:Ncname xsd:string

metatype:Objectidentifier IRI

metatype:Nodeidentifier NONLITERAL

<ActivityAndBehavior> {
    (  $<ActivityAndBehavior_tes> (  &<Occurrent_tes> ;
          rdf:type [ <Occurrent> ] ?
       ) ;
       rdf:type [ <ActivityAndBehavior> ] ?
    )
}

<AdministrativeEntity>  (
    {
       (  $<AdministrativeEntity_tes> (  &<NamedThing_tes> ;
             rdf:type [ <NamedThing> ] ?
          ) ;
          rdf:type [ <AdministrativeEntity> ]
       )
    } OR @<Agent>
)

<Agent> CLOSED {
    (  $<Agent_tes> (  &<AdministrativeEntity_tes> ;
          rdf:type [ <AdministrativeEntity> ] ? ;
          <affiliation> @metatype:Uriorcurie * ;
          <address> @metatype:String ? ;
          <name> @<LabelType> ?
       ) ;
       rdf:type [ <Agent> ]
    )
}

<AnatomicalEntity>  (
    CLOSED {
       (  $<AnatomicalEntity_tes> (  &<OrganismalEntity_tes> ;
             rdf:type [ <OrganismalEntity> ] ? ;
             &<ThingWithTaxon_tes> ;
             rdf:type [ <ThingWithTaxon> ] ? ;
             &<PhysicalEssence_tes> ;
             rdf:type [ <PhysicalEssence> ] ? ;
             <in_taxon> @<OrganismTaxon> *
          ) ;
          rdf:type [ <AnatomicalEntity> ]
       )
    } OR @<Cell> OR @<CellularComponent> OR @<GrossAnatomicalStructure>
)

<AnatomicalEntityToAnatomicalEntityAssociation>  (
    CLOSED {
       (  $<AnatomicalEntityToAnatomicalEntityAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ? ;
             <subject> @<AnatomicalEntity> ;
             <object> @<AnatomicalEntity>
          ) ;
          rdf:type [ <AnatomicalEntityToAnatomicalEntityAssociation> ]
       )
    } OR @<AnatomicalEntityToAnatomicalEntityOntogenicAssociation> OR @<AnatomicalEntityToAnatomicalEntityPartOfAssociation>
)

<AnatomicalEntityToAnatomicalEntityOntogenicAssociation> CLOSED {
    (  $<AnatomicalEntityToAnatomicalEntityOntogenicAssociation_tes> (  &<AnatomicalEntityToAnatomicalEntityAssociation_tes> ;
          rdf:type [ <AnatomicalEntityToAnatomicalEntityAssociation> ] ? ;
          <subject> @<AnatomicalEntity> ;
          <object> @<AnatomicalEntity> ;
          <predicate> @<PredicateType>
       ) ;
       rdf:type [ <AnatomicalEntityToAnatomicalEntityOntogenicAssociation> ]
    )
}

<AnatomicalEntityToAnatomicalEntityPartOfAssociation> CLOSED {
    (  $<AnatomicalEntityToAnatomicalEntityPartOfAssociation_tes> (  &<AnatomicalEntityToAnatomicalEntityAssociation_tes> ;
          rdf:type [ <AnatomicalEntityToAnatomicalEntityAssociation> ] ? ;
          <subject> @<AnatomicalEntity> ;
          <object> @<AnatomicalEntity> ;
          <predicate> @<PredicateType>
       ) ;
       rdf:type [ <AnatomicalEntityToAnatomicalEntityPartOfAssociation> ]
    )
}

<Annotation>  (
    @<Attribute> OR @<QuantityValue>
)

<Annotation_struct> {
    (  $<Annotation_tes> rdf:type . * ;
       rdf:type [ <Annotation> ] ?
    )
}

<Article> CLOSED {
    (  $<Article_tes> (  &<Publication_tes> ;
          rdf:type [ <Publication> ] ? ;
          <published_in> @metatype:Uriorcurie ;
          <iso_abbreviation> @metatype:String ? ;
          <volume> @metatype:String ? ;
          <issue> @metatype:String ?
       ) ;
       rdf:type [ <Article> ]
    )
}

<Association>  (
    CLOSED {
       (  $<Association_tes> (  &<Entity_tes> ;
             rdf:type [ <Entity> ] ? ;
             rdf:subject @<NamedThing> ;
             rdf:predicate @<PredicateType> ;
             rdf:object @<NamedThing> ;
             <relation> @metatype:Uriorcurie ;
             <negated> @metatype:Boolean ? ;
             <qualifiers> @<OntologyClass> * ;
             <publications> @<Publication> * ;
             <type> @metatype:String ? ;
             <category> @<Association> +
          ) ;
          rdf:type [ <Association> ]
       )
    } OR @<AnatomicalEntityToAnatomicalEntityAssociation> OR @<CaseToPhenotypicFeatureAssociation> OR
    @<CellLineToDiseaseOrPhenotypicFeatureAssociation> OR @<ChemicalToChemicalAssociation> OR
    @<ChemicalToDiseaseOrPhenotypicFeatureAssociation> OR @<ChemicalToGeneAssociation> OR @<ChemicalToPathwayAssociation> OR
    @<ContributorAssociation> OR @<DiseaseOrPhenotypicFeatureAssociationToLocationAssociation> OR
    @<DiseaseOrPhenotypicFeatureToLocationAssociation> OR @<DiseaseToExposureAssociation> OR
    @<DiseaseToPhenotypicFeatureAssociation> OR @<ExposureEventToPhenotypicFeatureAssociation> OR @<FunctionalAssociation> OR
    @<GeneRegulatoryRelationship> OR @<GeneToDiseaseAssociation> OR @<GeneToExpressionSiteAssociation> OR @<GeneToGeneAssociation>
    OR @<GeneToPhenotypicFeatureAssociation> OR @<GenotypeToDiseaseAssociation> OR @<GenotypeToGeneAssociation> OR
    @<GenotypeToGenotypePartAssociation> OR @<GenotypeToPhenotypicFeatureAssociation> OR @<GenotypeToVariantAssociation> OR
    @<MaterialSampleDerivationAssociation> OR @<MaterialSampleToDiseaseOrPhenotypicFeatureAssociation> OR
    @<OrganismalEntityAsAModelOfDiseaseAssociation> OR @<PopulationToPopulationAssociation> OR @<SequenceAssociation> OR
    @<SequenceFeatureRelationship> OR @<SequenceVariantModulatesTreatmentAssociation> OR @<VariantToDiseaseAssociation> OR
    @<VariantToGeneAssociation> OR @<VariantToPhenotypicFeatureAssociation> OR @<VariantToPopulationAssociation>
)

<Attribute>  (
    CLOSED {
       (  $<Attribute_tes> (  &<Annotation_tes> ;
             rdf:type [ <Annotation> ] ? ;
             <name> @<LabelType> ? ;
             <has_attribute_type> @<OntologyClass> ;
             <has_quantitative_value> @<QuantityValue> * ;
             <has_qualitative_value> @<NamedThing> ? ;
             <iri> @<IriType> ? ;
             <source> @<LabelType> ?
          ) ;
          rdf:type [ <Attribute> ] ?
       )
    } OR @<BiologicalSex> OR @<ClinicalAttribute> OR @<FrequencyValue> OR @<OrganismAttribute> OR @<SeverityValue> OR @<Zygosity>
)

<Behavior> CLOSED {
    (  $<Behavior_tes> (  &<BiologicalProcess_tes> ;
          rdf:type [ <BiologicalProcess> ] ?
       ) ;
       rdf:type [ <Behavior> ]
    )
}

<BiologicalEntity>  (
    @<BiologicalProcessOrActivity> OR @<DiseaseOrPhenotypicFeature> OR @<ExposureEvent> OR @<MolecularEntity> OR
    @<OrganismalEntity>
)

<BiologicalEntity_struct> {
    (  $<BiologicalEntity_tes> (  &<NamedThing_tes> ;
          rdf:type [ <NamedThing> ] ?
       ) ;
       rdf:type [ <BiologicalEntity> ]
    )
}

<BiologicalProcess>  (
    CLOSED {
       (  $<BiologicalProcess_tes> (  &<BiologicalProcessOrActivity_tes> ;
             rdf:type [ <BiologicalProcessOrActivity> ] ? ;
             &<Occurrent_tes> ;
             rdf:type [ <Occurrent> ] ?
          ) ;
          rdf:type [ <BiologicalProcess> ]
       )
    } OR @<Behavior> OR @<PathologicalProcess> OR @<Pathway> OR @<PhysiologicalProcess>
)

<BiologicalProcessOrActivity>  (
    CLOSED {
       (  $<BiologicalProcessOrActivity_tes> (  &<BiologicalEntity_tes> ;
             rdf:type [ <BiologicalEntity> ] ? ;
             &<Occurrent_tes> ;
             rdf:type [ <Occurrent> ] ? ;
             <has_input> @<NamedThing> * ;
             <has_output> @<NamedThing> * ;
             <enabled_by> @<PhysicalEntity> *
          ) ;
          rdf:type [ <BiologicalProcessOrActivity> ]
       )
    } OR @<BiologicalProcess> OR @<MolecularActivity>
)

<BiologicalSex>  (
    CLOSED {
       (  $<BiologicalSex_tes> (  &<Attribute_tes> ;
             rdf:type [ <Attribute> ] ?
          ) ;
          rdf:type [ <BiologicalSex> ] ?
       )
    } OR @<GenotypicSex> OR @<PhenotypicSex>
)

<Book> CLOSED {
    (  $<Book_tes> (  &<Publication_tes> ;
          rdf:type [ <Publication> ] ? ;
          <type> @metatype:String
       ) ;
       rdf:type [ <Book> ]
    )
}

<BookChapter> CLOSED {
    (  $<BookChapter_tes> (  &<Publication_tes> ;
          rdf:type [ <Publication> ] ? ;
          <published_in> @metatype:Uriorcurie ;
          <volume> @metatype:String ? ;
          <chapter> @metatype:String ?
       ) ;
       rdf:type [ <BookChapter> ]
    )
}

<Carbohydrate> CLOSED {
    (  $<Carbohydrate_tes> (  &<ChemicalSubstance_tes> ;
          rdf:type [ <ChemicalSubstance> ] ?
       ) ;
       rdf:type [ <Carbohydrate> ]
    )
}

<Case> CLOSED {
    (  $<Case_tes> (  &<IndividualOrganism_tes> ;
          rdf:type [ <IndividualOrganism> ] ?
       ) ;
       rdf:type [ <Case> ]
    )
}

<CaseToEntityAssociationMixin> {
    (  $<CaseToEntityAssociationMixin_tes> <subject> @<Case> ;
       rdf:type [ <CaseToEntityAssociationMixin> ] ?
    )
}

<CaseToPhenotypicFeatureAssociation> CLOSED {
    (  $<CaseToPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<EntityToPhenotypicFeatureAssociationMixin_tes> ;
          rdf:type [ <EntityToPhenotypicFeatureAssociationMixin> ] ? ;
          &<CaseToEntityAssociationMixin_tes> ;
          rdf:type [ <CaseToEntityAssociationMixin> ] ? ;
          <frequency_qualifier> @<FrequencyValue> ? ;
          <severity_qualifier> @<SeverityValue> ? ;
          <onset_qualifier> @<Onset> ? ;
          <sex_qualifier> @<BiologicalSex> ?
       ) ;
       rdf:type [ <CaseToPhenotypicFeatureAssociation> ]
    )
}

<Cell> CLOSED {
    (  $<Cell_tes> (  &<AnatomicalEntity_tes> ;
          rdf:type [ <AnatomicalEntity> ] ?
       ) ;
       rdf:type [ <Cell> ]
    )
}

<CellLine> CLOSED {
    (  $<CellLine_tes> (  &<OrganismalEntity_tes> ;
          rdf:type [ <OrganismalEntity> ] ?
       ) ;
       rdf:type [ <CellLine> ]
    )
}

<CellLineAsAModelOfDiseaseAssociation> CLOSED {
    (  $<CellLineAsAModelOfDiseaseAssociation_tes> (  &<CellLineToDiseaseOrPhenotypicFeatureAssociation_tes> ;
          rdf:type [ <CellLineToDiseaseOrPhenotypicFeatureAssociation> ] ? ;
          &<ModelToDiseaseAssociationMixin_tes> ;
          rdf:type [ <ModelToDiseaseAssociationMixin> ] ? ;
          &<EntityToDiseaseAssociationMixin_tes> ;
          rdf:type [ <EntityToDiseaseAssociationMixin> ] ? ;
          <subject> @<CellLine> ;
          <frequency_qualifier> @<FrequencyValue> ? ;
          <severity_qualifier> @<SeverityValue> ? ;
          <onset_qualifier> @<Onset> ?
       ) ;
       rdf:type [ <CellLineAsAModelOfDiseaseAssociation> ]
    )
}

<CellLineToDiseaseOrPhenotypicFeatureAssociation>  (
    CLOSED {
       (  $<CellLineToDiseaseOrPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ? ;
             &<CellLineToEntityAssociationMixin_tes> ;
             rdf:type [ <CellLineToEntityAssociationMixin> ] ? ;
             &<EntityToDiseaseOrPhenotypicFeatureAssociationMixin_tes> ;
             rdf:type [ <EntityToDiseaseOrPhenotypicFeatureAssociationMixin> ] ? ;
             <subject> @<DiseaseOrPhenotypicFeature>
          ) ;
          rdf:type [ <CellLineToDiseaseOrPhenotypicFeatureAssociation> ]
       )
    } OR @<CellLineAsAModelOfDiseaseAssociation>
)

<CellLineToEntityAssociationMixin> {
    (  $<CellLineToEntityAssociationMixin_tes> <subject> @<CellLine> ;
       rdf:type [ <CellLineToEntityAssociationMixin> ] ?
    )
}

<CellularComponent> CLOSED {
    (  $<CellularComponent_tes> (  &<AnatomicalEntity_tes> ;
          rdf:type [ <AnatomicalEntity> ] ?
       ) ;
       rdf:type [ <CellularComponent> ]
    )
}

<ChemicalExposure>  (
    CLOSED {
       (  $<ChemicalExposure_tes> (  &<ExposureEvent_tes> ;
             rdf:type [ <ExposureEvent> ] ?
          ) ;
          rdf:type [ <ChemicalExposure> ]
       )
    } OR @<DrugExposure>
)

<ChemicalSubstance>  (
    CLOSED {
       (  $<ChemicalSubstance_tes> (  &<MolecularEntity_tes> ;
             rdf:type [ <MolecularEntity> ] ?
          ) ;
          rdf:type [ <ChemicalSubstance> ]
       )
    } OR @<Carbohydrate> OR @<Metabolite> OR @<ProcessedMaterial>
)

<ChemicalToChemicalAssociation>  (
    CLOSED {
       (  $<ChemicalToChemicalAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ? ;
             &<ChemicalToEntityAssociationMixin_tes> ;
             rdf:type [ <ChemicalToEntityAssociationMixin> ] ? ;
             <object> @<ChemicalSubstance>
          ) ;
          rdf:type [ <ChemicalToChemicalAssociation> ]
       )
    } OR @<ChemicalToChemicalDerivationAssociation>
)

<ChemicalToChemicalDerivationAssociation> CLOSED {
    (  $<ChemicalToChemicalDerivationAssociation_tes> (  &<ChemicalToChemicalAssociation_tes> ;
          rdf:type [ <ChemicalToChemicalAssociation> ] ? ;
          <catalyst_qualifier> @<MacromolecularMachine> * ;
          <subject> @<ChemicalSubstance> ;
          <object> @<ChemicalSubstance> ;
          <predicate> @<PredicateType>
       ) ;
       rdf:type [ <ChemicalToChemicalDerivationAssociation> ]
    )
}

<ChemicalToDiseaseOrPhenotypicFeatureAssociation> CLOSED {
    (  $<ChemicalToDiseaseOrPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<ChemicalToEntityAssociationMixin_tes> ;
          rdf:type [ <ChemicalToEntityAssociationMixin> ] ? ;
          &<EntityToDiseaseOrPhenotypicFeatureAssociationMixin_tes> ;
          rdf:type [ <EntityToDiseaseOrPhenotypicFeatureAssociationMixin> ] ? ;
          <object> @<DiseaseOrPhenotypicFeature>
       ) ;
       rdf:type [ <ChemicalToDiseaseOrPhenotypicFeatureAssociation> ]
    )
}

<ChemicalToEntityAssociationMixin> {
    (  $<ChemicalToEntityAssociationMixin_tes> <subject> @<ChemicalSubstance> ;
       rdf:type [ <ChemicalToEntityAssociationMixin> ] ?
    )
}

<ChemicalToGeneAssociation> CLOSED {
    (  $<ChemicalToGeneAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<ChemicalToEntityAssociationMixin_tes> ;
          rdf:type [ <ChemicalToEntityAssociationMixin> ] ? ;
          <object> @<GeneOrGeneProduct>
       ) ;
       rdf:type [ <ChemicalToGeneAssociation> ]
    )
}

<ChemicalToPathwayAssociation> CLOSED {
    (  $<ChemicalToPathwayAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<ChemicalToEntityAssociationMixin_tes> ;
          rdf:type [ <ChemicalToEntityAssociationMixin> ] ? ;
          <object> @<Pathway>
       ) ;
       rdf:type [ <ChemicalToPathwayAssociation> ]
    )
}

<ClinicalAttribute>  (
    CLOSED {
       (  $<ClinicalAttribute_tes> (  &<Attribute_tes> ;
             rdf:type [ <Attribute> ] ?
          ) ;
          rdf:type [ <ClinicalAttribute> ] ?
       )
    } OR @<ClinicalCourse> OR @<ClinicalModifier>
)

<ClinicalCourse>  (
    CLOSED {
       (  $<ClinicalCourse_tes> (  &<ClinicalAttribute_tes> ;
             rdf:type [ <ClinicalAttribute> ] ?
          ) ;
          rdf:type [ <ClinicalCourse> ] ?
       )
    } OR @<Onset>
)

<ClinicalEntity>  (
    CLOSED {
       (  $<ClinicalEntity_tes> (  &<NamedThing_tes> ;
             rdf:type [ <NamedThing> ] ?
          ) ;
          rdf:type [ <ClinicalEntity> ]
       )
    } OR @<ClinicalIntervention> OR @<ClinicalTrial>
)

<ClinicalIntervention> CLOSED {
    (  $<ClinicalIntervention_tes> (  &<ClinicalEntity_tes> ;
          rdf:type [ <ClinicalEntity> ] ?
       ) ;
       rdf:type [ <ClinicalIntervention> ]
    )
}

<ClinicalModifier> CLOSED {
    (  $<ClinicalModifier_tes> (  &<ClinicalAttribute_tes> ;
          rdf:type [ <ClinicalAttribute> ] ?
       ) ;
       rdf:type [ <ClinicalModifier> ] ?
    )
}

<ClinicalTrial> CLOSED {
    (  $<ClinicalTrial_tes> (  &<ClinicalEntity_tes> ;
          rdf:type [ <ClinicalEntity> ] ?
       ) ;
       rdf:type [ <ClinicalTrial> ]
    )
}

<CodingSequence> CLOSED {
    (  $<CodingSequence_tes> (  &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ?
       ) ;
       rdf:type [ <CodingSequence> ]
    )
}

<ConfidenceLevel> CLOSED {
    (  $<ConfidenceLevel_tes> (  &<InformationContentEntity_tes> ;
          rdf:type [ <InformationContentEntity> ] ?
       ) ;
       rdf:type [ <ConfidenceLevel> ]
    )
}

<ContributorAssociation> CLOSED {
    (  $<ContributorAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <subject> @<InformationContentEntity> ;
          <predicate> @<PredicateType> ;
          <object> @<Agent> ;
          <qualifiers> @<OntologyClass> *
       ) ;
       rdf:type [ <ContributorAssociation> ]
    )
}

<DataFile>  (
    CLOSED {
       (  $<DataFile_tes> (  &<InformationContentEntity_tes> ;
             rdf:type [ <InformationContentEntity> ] ?
          ) ;
          rdf:type [ <DataFile> ]
       )
    } OR @<SourceFile>
)

<DataSet>  (
    CLOSED {
       (  $<DataSet_tes> (  &<InformationContentEntity_tes> ;
             rdf:type [ <InformationContentEntity> ] ?
          ) ;
          rdf:type [ <DataSet> ]
       )
    } OR @<DataSetVersion>
)

<DataSetSummary> {
    (  $<DataSetSummary_tes> (  &<DataSetVersion_tes> ;
          rdf:type [ <DataSetVersion> ] ? ;
          <source_web_page> @metatype:String ?
       ) ;
       rdf:type [ <DataSetSummary> ]
    )
}

<DataSetVersion>  (
    CLOSED {
       (  $<DataSetVersion_tes> (  &<DataSet_tes> ;
             rdf:type [ <DataSet> ] ? ;
             <source_data_file> @<DataFile> ? ;
             <version_of> @<DataSet> ? ;
             <distribution> @<DistributionLevel> ?
          ) ;
          rdf:type [ <DataSetVersion> ]
       )
    } OR @<DataSetSummary> OR @<DistributionLevel>
)

<Device> CLOSED {
    (  $<Device_tes> (  &<NamedThing_tes> ;
          rdf:type [ <NamedThing> ] ?
       ) ;
       rdf:type [ <Device> ]
    )
}

<Disease> CLOSED {
    (  $<Disease_tes> (  &<DiseaseOrPhenotypicFeature_tes> ;
          rdf:type [ <DiseaseOrPhenotypicFeature> ] ?
       ) ;
       rdf:type [ <Disease> ]
    )
}

<DiseaseOrPhenotypicFeature>  (
    CLOSED {
       (  $<DiseaseOrPhenotypicFeature_tes> (  &<BiologicalEntity_tes> ;
             rdf:type [ <BiologicalEntity> ] ? ;
             &<ThingWithTaxon_tes> ;
             rdf:type [ <ThingWithTaxon> ] ? ;
             <in_taxon> @<OrganismTaxon> *
          ) ;
          rdf:type [ <DiseaseOrPhenotypicFeature> ]
       )
    } OR @<Disease> OR @<PhenotypicFeature>
)

<DiseaseOrPhenotypicFeatureAssociationToLocationAssociation> CLOSED {
    (  $<DiseaseOrPhenotypicFeatureAssociationToLocationAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<DiseaseOrPhenotypicFeatureToEntityAssociationMixin_tes> ;
          rdf:type [ <DiseaseOrPhenotypicFeatureToEntityAssociationMixin> ] ? ;
          <object> @<AnatomicalEntity>
       ) ;
       rdf:type [ <DiseaseOrPhenotypicFeatureAssociationToLocationAssociation> ]
    )
}

<DiseaseOrPhenotypicFeatureToEntityAssociationMixin> {
    (  $<DiseaseOrPhenotypicFeatureToEntityAssociationMixin_tes> <subject> @<DiseaseOrPhenotypicFeature> ;
       rdf:type [ <DiseaseOrPhenotypicFeatureToEntityAssociationMixin> ] ?
    )
}

<DiseaseOrPhenotypicFeatureToLocationAssociation> CLOSED {
    (  $<DiseaseOrPhenotypicFeatureToLocationAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<DiseaseOrPhenotypicFeatureToEntityAssociationMixin_tes> ;
          rdf:type [ <DiseaseOrPhenotypicFeatureToEntityAssociationMixin> ] ? ;
          <object> @<AnatomicalEntity>
       ) ;
       rdf:type [ <DiseaseOrPhenotypicFeatureToLocationAssociation> ]
    )
}

<DiseaseToEntityAssociationMixin> {
    (  $<DiseaseToEntityAssociationMixin_tes> <subject> @<Disease> ;
       rdf:type [ <DiseaseToEntityAssociationMixin> ] ?
    )
}

<DiseaseToExposureAssociation> CLOSED {
    (  $<DiseaseToExposureAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<DiseaseToEntityAssociationMixin_tes> ;
          rdf:type [ <DiseaseToEntityAssociationMixin> ] ? ;
          <subject> @<Disease> ;
          <object> @<ExposureEvent>
       ) ;
       rdf:type [ <DiseaseToExposureAssociation> ]
    )
}

<DiseaseToPhenotypicFeatureAssociation> CLOSED {
    (  $<DiseaseToPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<EntityToPhenotypicFeatureAssociationMixin_tes> ;
          rdf:type [ <EntityToPhenotypicFeatureAssociationMixin> ] ? ;
          &<DiseaseToEntityAssociationMixin_tes> ;
          rdf:type [ <DiseaseToEntityAssociationMixin> ] ? ;
          <frequency_qualifier> @<FrequencyValue> ? ;
          <severity_qualifier> @<SeverityValue> ? ;
          <onset_qualifier> @<Onset> ? ;
          <sex_qualifier> @<BiologicalSex> ?
       ) ;
       rdf:type [ <DiseaseToPhenotypicFeatureAssociation> ]
    )
}

<DistributionLevel> {
    (  $<DistributionLevel_tes> (  &<DataSetVersion_tes> ;
          rdf:type [ <DataSetVersion> ] ? ;
          <download_url> @metatype:String ?
       ) ;
       rdf:type [ <DistributionLevel> ]
    )
}

<Drug> CLOSED {
    (  $<Drug_tes> (  &<MolecularEntity_tes> ;
          rdf:type [ <MolecularEntity> ] ? ;
          &<Mixture_tes> ;
          rdf:type [ <Mixture> ] ? ;
          <has_active_ingredient> @<ChemicalSubstance> * ;
          <has_excipient> @<ChemicalSubstance> * ;
          <has_constituent> @<ChemicalSubstance> *
       ) ;
       rdf:type [ <Drug> ]
    )
}

<DrugExposure> CLOSED {
    (  $<DrugExposure_tes> (  &<ChemicalExposure_tes> ;
          rdf:type [ <ChemicalExposure> ] ? ;
          <has_drug> @<ChemicalSubstance> +
       ) ;
       rdf:type [ <DrugExposure> ]
    )
}

<Entity>  (
    @<Association> OR @<NamedThing>
)

<Entity_struct> {
    (  $<Entity_tes> (  <iri> @<IriType> ? ;
          <category> @<CategoryType> + ;
          rdf:type @metatype:String ? ;
          rdfs:label @<LabelType> ? ;
          dcterms:description @<NarrativeText> ? ;
          <source> @<LabelType> ? ;
          <provided_by> @<Agent> * ;
          <has_attribute> @<Attribute> *
       ) ;
       rdf:type [ <Entity> ]
    )
}

<EntityToDiseaseAssociationMixin> {
    (  $<EntityToDiseaseAssociationMixin_tes> (  &<EntityToFeatureOrDiseaseQualifiersMixin_tes> ;
          rdf:type [ <EntityToFeatureOrDiseaseQualifiersMixin> ] ? ;
          <object> @<Disease>
       ) ;
       rdf:type [ <EntityToDiseaseAssociationMixin> ] ?
    )
}

<EntityToDiseaseOrPhenotypicFeatureAssociationMixin> {
    (  $<EntityToDiseaseOrPhenotypicFeatureAssociationMixin_tes> <object> @<DiseaseOrPhenotypicFeature> ;
       rdf:type [ <EntityToDiseaseOrPhenotypicFeatureAssociationMixin> ] ?
    )
}

<EntityToFeatureOrDiseaseQualifiersMixin>  (
    @<EntityToDiseaseAssociationMixin> OR @<EntityToPhenotypicFeatureAssociationMixin>
)

<EntityToFeatureOrDiseaseQualifiersMixin_struct> {
    (  $<EntityToFeatureOrDiseaseQualifiersMixin_tes> (  &<FrequencyQualifierMixin_tes> ;
          rdf:type [ <FrequencyQualifierMixin> ] ? ;
          <severity_qualifier> @<SeverityValue> ? ;
          <onset_qualifier> @<Onset> ?
       ) ;
       rdf:type [ <EntityToFeatureOrDiseaseQualifiersMixin> ] ?
    )
}

<EntityToPhenotypicFeatureAssociationMixin> {
    (  $<EntityToPhenotypicFeatureAssociationMixin_tes> (  &<EntityToFeatureOrDiseaseQualifiersMixin_tes> ;
          rdf:type [ <EntityToFeatureOrDiseaseQualifiersMixin> ] ? ;
          <sex_qualifier> @<BiologicalSex> ? ;
          <description> @<NarrativeText> ? ;
          <object> @<PhenotypicFeature>
       ) ;
       rdf:type [ <EntityToPhenotypicFeatureAssociationMixin> ] ?
    )
}

<EnvironmentalFeature> CLOSED {
    (  $<EnvironmentalFeature_tes> (  &<PlanetaryEntity_tes> ;
          rdf:type [ <PlanetaryEntity> ] ?
       ) ;
       rdf:type [ <EnvironmentalFeature> ]
    )
}

<EnvironmentalProcess> CLOSED {
    (  $<EnvironmentalProcess_tes> (  &<PlanetaryEntity_tes> ;
          rdf:type [ <PlanetaryEntity> ] ? ;
          &<Occurrent_tes> ;
          rdf:type [ <Occurrent> ] ?
       ) ;
       rdf:type [ <EnvironmentalProcess> ]
    )
}

<EvidenceType> CLOSED {
    (  $<EvidenceType_tes> (  &<InformationContentEntity_tes> ;
          rdf:type [ <InformationContentEntity> ] ?
       ) ;
       rdf:type [ <EvidenceType> ]
    )
}

<Exon> CLOSED {
    (  $<Exon_tes> (  &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ?
       ) ;
       rdf:type [ <Exon> ]
    )
}

<ExonToTranscriptRelationship> CLOSED {
    (  $<ExonToTranscriptRelationship_tes> (  &<SequenceFeatureRelationship_tes> ;
          rdf:type [ <SequenceFeatureRelationship> ] ? ;
          <subject> @<Exon> ;
          <object> @<Transcript>
       ) ;
       rdf:type [ <ExonToTranscriptRelationship> ]
    )
}

<ExposureEvent>  (
    CLOSED {
       (  $<ExposureEvent_tes> (  &<BiologicalEntity_tes> ;
             rdf:type [ <BiologicalEntity> ] ?
          ) ;
          rdf:type [ <ExposureEvent> ]
       )
    } OR @<ChemicalExposure> OR @<Treatment>
)

<ExposureEventToPhenotypicFeatureAssociation> CLOSED {
    (  $<ExposureEventToPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<EntityToPhenotypicFeatureAssociationMixin_tes> ;
          rdf:type [ <EntityToPhenotypicFeatureAssociationMixin> ] ? ;
          <subject> @<ExposureEvent> ;
          <frequency_qualifier> @<FrequencyValue> ? ;
          <severity_qualifier> @<SeverityValue> ? ;
          <onset_qualifier> @<Onset> ? ;
          <sex_qualifier> @<BiologicalSex> ?
       ) ;
       rdf:type [ <ExposureEventToPhenotypicFeatureAssociation> ]
    )
}

<Food> CLOSED {
    (  $<Food_tes> (  &<MolecularEntity_tes> ;
          rdf:type [ <MolecularEntity> ] ? ;
          &<Mixture_tes> ;
          rdf:type [ <Mixture> ] ? ;
          <has_nutrient> @<ChemicalSubstance> * ;
          <has_constituent> @<ChemicalSubstance> *
       ) ;
       rdf:type [ <Food> ]
    )
}

<FrequencyQualifierMixin>  (
    {
       (  $<FrequencyQualifierMixin_tes> <frequency_qualifier> @<FrequencyValue> ? ;
          rdf:type [ <FrequencyQualifierMixin> ] ?
       )
    } OR @<EntityToFeatureOrDiseaseQualifiersMixin>
)

<FrequencyQuantifier> {
    (  $<FrequencyQuantifier_tes> (  &<RelationshipQuantifier_tes> ;
          rdf:type [ <RelationshipQuantifier> ] ? ;
          <has_count> @metatype:Integer ? ;
          <has_total> @metatype:Integer ? ;
          <has_quotient> @metatype:Double ? ;
          <has_percentage> @metatype:Double ?
       ) ;
       rdf:type [ <FrequencyQuantifier> ] ?
    )
}

<FrequencyValue> CLOSED {
    (  $<FrequencyValue_tes> (  &<Attribute_tes> ;
          rdf:type [ <Attribute> ] ?
       ) ;
       rdf:type [ <FrequencyValue> ] ?
    )
}

<FunctionalAssociation>  (
    CLOSED {
       (  $<FunctionalAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ? ;
             <subject> @<MacromolecularMachine> ;
             <object> @<GeneOntologyClass>
          ) ;
          rdf:type [ <FunctionalAssociation> ]
       )
    } OR @<GeneToGoTermAssociation> OR @<MacromolecularMachineToBiologicalProcessAssociation> OR
    @<MacromolecularMachineToCellularComponentAssociation> OR @<MacromolecularMachineToMolecularActivityAssociation>
)

<Gene> CLOSED {
    (  $<Gene_tes> (  &<GeneOrGeneProduct_tes> ;
          rdf:type [ <GeneOrGeneProduct> ] ? ;
          <symbol> @metatype:String ? ;
          <synonym> @<LabelType> * ;
          <xref> @<IriType> *
       ) ;
       rdf:type [ <Gene> ]
    )
}

<GeneAsAModelOfDiseaseAssociation> CLOSED {
    (  $<GeneAsAModelOfDiseaseAssociation_tes> (  &<GeneToDiseaseAssociation_tes> ;
          rdf:type [ <GeneToDiseaseAssociation> ] ? ;
          &<ModelToDiseaseAssociationMixin_tes> ;
          rdf:type [ <ModelToDiseaseAssociationMixin> ] ? ;
          &<EntityToDiseaseAssociationMixin_tes> ;
          rdf:type [ <EntityToDiseaseAssociationMixin> ] ? ;
          <subject> @<GeneOrGeneProduct>
       ) ;
       rdf:type [ <GeneAsAModelOfDiseaseAssociation> ]
    )
}

<GeneExpressionMixin> CLOSED {
    (  $<GeneExpressionMixin_tes> (  <quantifier_qualifier> @<OntologyClass> ? ;
          <expression_site> @<AnatomicalEntity> ? ;
          <stage_qualifier> @<LifeStage> ? ;
          <phenotypic_state> @<DiseaseOrPhenotypicFeature> ?
       ) ;
       rdf:type [ <GeneExpressionMixin> ] ?
    )
}

<GeneFamily> CLOSED {
    (  $<GeneFamily_tes> (  &<MolecularEntity_tes> ;
          rdf:type [ <MolecularEntity> ] ? ;
          &<GeneGrouping_tes> ;
          rdf:type [ <GeneGrouping> ] ?
       ) ;
       rdf:type [ <GeneFamily> ]
    )
}

<GeneGrouping> {
    (  $<GeneGrouping_tes> rdf:type . * ;
       rdf:type [ <GeneGrouping> ] ?
    )
}

<GeneHasVariantThatContributesToDiseaseAssociation> CLOSED {
    (  $<GeneHasVariantThatContributesToDiseaseAssociation_tes> (  &<GeneToDiseaseAssociation_tes> ;
          rdf:type [ <GeneToDiseaseAssociation> ] ? ;
          <sequence_variant_qualifier> @<SequenceVariant> ? ;
          <subject> @<GeneOrGeneProduct>
       ) ;
       rdf:type [ <GeneHasVariantThatContributesToDiseaseAssociation> ]
    )
}

<GeneOntologyClass> CLOSED {
    (  $<GeneOntologyClass_tes> (  &<OntologyClass_tes> ;
          rdf:type [ <OntologyClass> ] ?
       ) ;
       rdf:type [ <GeneOntologyClass> ]
    )
}

<GeneOrGeneProduct>  (
    CLOSED {
       (  $<GeneOrGeneProduct_tes> (  &<MacromolecularMachine_tes> ;
             rdf:type [ <MacromolecularMachine> ] ?
          ) ;
          rdf:type [ <GeneOrGeneProduct> ]
       )
    } OR @<Gene> OR @<GeneProduct>
)

<GeneProduct>  (
    CLOSED {
       (  $<GeneProduct_tes> (  &<GeneOrGeneProduct_tes> ;
             rdf:type [ <GeneOrGeneProduct> ] ? ;
             <synonym> @<LabelType> * ;
             <xref> @<IriType> *
          ) ;
          rdf:type [ <GeneProduct> ]
       )
    } OR @<RNAProduct> OR @<Protein> OR @<Transcript>
)

<GeneProductIsoform> {
    (  $<GeneProductIsoform_tes> rdf:type . * ;
       rdf:type [ <GeneProductIsoform> ] ?
    )
}

<GeneRegulatoryRelationship> CLOSED {
    (  $<GeneRegulatoryRelationship_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <predicate> @<PredicateType> ;
          <subject> @<GeneOrGeneProduct> ;
          <object> @<GeneOrGeneProduct>
       ) ;
       rdf:type [ <GeneRegulatoryRelationship> ]
    )
}

<GeneToDiseaseAssociation>  (
    CLOSED {
       (  $<GeneToDiseaseAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ? ;
             &<EntityToDiseaseAssociationMixin_tes> ;
             rdf:type [ <EntityToDiseaseAssociationMixin> ] ? ;
             &<GeneToEntityAssociationMixin_tes> ;
             rdf:type [ <GeneToEntityAssociationMixin> ] ? ;
             <subject> @<GeneOrGeneProduct> ;
             <frequency_qualifier> @<FrequencyValue> ? ;
             <severity_qualifier> @<SeverityValue> ? ;
             <onset_qualifier> @<Onset> ?
          ) ;
          rdf:type [ <GeneToDiseaseAssociation> ]
       )
    } OR @<GeneAsAModelOfDiseaseAssociation> OR @<GeneHasVariantThatContributesToDiseaseAssociation>
)

<GeneToEntityAssociationMixin> {
    (  $<GeneToEntityAssociationMixin_tes> <subject> @<GeneOrGeneProduct> ;
       rdf:type [ <GeneToEntityAssociationMixin> ] ?
    )
}

<GeneToExpressionSiteAssociation> CLOSED {
    (  $<GeneToExpressionSiteAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <stage_qualifier> @<LifeStage> ? ;
          <quantifier_qualifier> @<OntologyClass> ? ;
          <subject> @<GeneOrGeneProduct> ;
          <object> @<AnatomicalEntity> ;
          <predicate> @<PredicateType>
       ) ;
       rdf:type [ <GeneToExpressionSiteAssociation> ]
    )
}

<GeneToGeneAssociation>  (
    @<GeneToGeneCoexpressionAssociation> OR @<GeneToGeneHomologyAssociation> OR @<PairwiseGeneToGeneInteraction>
)

<GeneToGeneAssociation_struct> {
    (  $<GeneToGeneAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <subject> @<GeneOrGeneProduct> ;
          <object> @<GeneOrGeneProduct>
       ) ;
       rdf:type [ <GeneToGeneAssociation> ]
    )
}

<GeneToGeneCoexpressionAssociation> CLOSED {
    (  $<GeneToGeneCoexpressionAssociation_tes> (  &<GeneToGeneAssociation_tes> ;
          rdf:type [ <GeneToGeneAssociation> ] ? ;
          &<GeneExpressionMixin_tes> ;
          rdf:type [ <GeneExpressionMixin> ] ? ;
          <predicate> @<PredicateType> ;
          <quantifier_qualifier> @<OntologyClass> ? ;
          <expression_site> @<AnatomicalEntity> ? ;
          <stage_qualifier> @<LifeStage> ? ;
          <phenotypic_state> @<DiseaseOrPhenotypicFeature> ?
       ) ;
       rdf:type [ <GeneToGeneCoexpressionAssociation> ]
    )
}

<GeneToGeneHomologyAssociation> CLOSED {
    (  $<GeneToGeneHomologyAssociation_tes> (  &<GeneToGeneAssociation_tes> ;
          rdf:type [ <GeneToGeneAssociation> ] ? ;
          <predicate> @<PredicateType>
       ) ;
       rdf:type [ <GeneToGeneHomologyAssociation> ]
    )
}

<GeneToGeneProductRelationship> CLOSED {
    (  $<GeneToGeneProductRelationship_tes> (  &<SequenceFeatureRelationship_tes> ;
          rdf:type [ <SequenceFeatureRelationship> ] ? ;
          <subject> @<Gene> ;
          <object> @<GeneProduct> ;
          <predicate> @<PredicateType>
       ) ;
       rdf:type [ <GeneToGeneProductRelationship> ]
    )
}

<GeneToGoTermAssociation> CLOSED {
    (  $<GeneToGoTermAssociation_tes> (  &<FunctionalAssociation_tes> ;
          rdf:type [ <FunctionalAssociation> ] ? ;
          <subject> @<MolecularEntity> ;
          <object> @<GeneOntologyClass>
       ) ;
       rdf:type [ <GeneToGoTermAssociation> ]
    )
}

<GeneToPhenotypicFeatureAssociation> CLOSED {
    (  $<GeneToPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<EntityToPhenotypicFeatureAssociationMixin_tes> ;
          rdf:type [ <EntityToPhenotypicFeatureAssociationMixin> ] ? ;
          &<GeneToEntityAssociationMixin_tes> ;
          rdf:type [ <GeneToEntityAssociationMixin> ] ? ;
          <subject> @<GeneOrGeneProduct> ;
          <frequency_qualifier> @<FrequencyValue> ? ;
          <severity_qualifier> @<SeverityValue> ? ;
          <onset_qualifier> @<Onset> ? ;
          <sex_qualifier> @<BiologicalSex> ?
       ) ;
       rdf:type [ <GeneToPhenotypicFeatureAssociation> ]
    )
}

<Genome> CLOSED {
    (  $<Genome_tes> (  &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ?
       ) ;
       rdf:type [ <Genome> ]
    )
}

<GenomicEntity>  (
    CLOSED {
       (  $<GenomicEntity_tes> (  &<MolecularEntity_tes> ;
             rdf:type [ <MolecularEntity> ] ? ;
             <has_biological_sequence> @<BiologicalSequence> ?
          ) ;
          rdf:type [ <GenomicEntity> ]
       )
    } OR @<CodingSequence> OR @<Exon> OR @<Genome> OR @<Genotype> OR @<Haplotype> OR @<MacromolecularMachine> OR
    @<ReagentTargetedGene> OR @<SequenceVariant>
)

<GenomicSequenceLocalization> CLOSED {
    (  $<GenomicSequenceLocalization_tes> (  &<SequenceAssociation_tes> ;
          rdf:type [ <SequenceAssociation> ] ? ;
          <start_interbase_coordinate> @metatype:Integer ? ;
          <end_interbase_coordinate> @metatype:Integer ? ;
          <genome_build> @metatype:String ? ;
          <strand> @metatype:String ? ;
          <phase> @metatype:String ? ;
          <subject> @<GenomicEntity> ;
          <object> @<GenomicEntity> ;
          <predicate> @<PredicateType>
       ) ;
       rdf:type [ <GenomicSequenceLocalization> ]
    )
}

<Genotype> CLOSED {
    (  $<Genotype_tes> (  &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ? ;
          <has_zygosity> @<Zygosity> ?
       ) ;
       rdf:type [ <Genotype> ]
    )
}

<GenotypeAsAModelOfDiseaseAssociation> CLOSED {
    (  $<GenotypeAsAModelOfDiseaseAssociation_tes> (  &<GenotypeToDiseaseAssociation_tes> ;
          rdf:type [ <GenotypeToDiseaseAssociation> ] ? ;
          &<ModelToDiseaseAssociationMixin_tes> ;
          rdf:type [ <ModelToDiseaseAssociationMixin> ] ? ;
          &<EntityToDiseaseAssociationMixin_tes> ;
          rdf:type [ <EntityToDiseaseAssociationMixin> ] ? ;
          <subject> @<Genotype>
       ) ;
       rdf:type [ <GenotypeAsAModelOfDiseaseAssociation> ]
    )
}

<GenotypeToDiseaseAssociation>  (
    CLOSED {
       (  $<GenotypeToDiseaseAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ? ;
             &<GenotypeToEntityAssociationMixin_tes> ;
             rdf:type [ <GenotypeToEntityAssociationMixin> ] ? ;
             &<EntityToDiseaseAssociationMixin_tes> ;
             rdf:type [ <EntityToDiseaseAssociationMixin> ] ? ;
             <subject> @<NamedThing> ;
             <predicate> @<PredicateType> ;
             <object> @<NamedThing> ;
             <frequency_qualifier> @<FrequencyValue> ? ;
             <severity_qualifier> @<SeverityValue> ? ;
             <onset_qualifier> @<Onset> ?
          ) ;
          rdf:type [ <GenotypeToDiseaseAssociation> ]
       )
    } OR @<GenotypeAsAModelOfDiseaseAssociation>
)

<GenotypeToEntityAssociationMixin> {
    (  $<GenotypeToEntityAssociationMixin_tes> <subject> @<Genotype> ;
       rdf:type [ <GenotypeToEntityAssociationMixin> ] ?
    )
}

<GenotypeToGeneAssociation> CLOSED {
    (  $<GenotypeToGeneAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <predicate> @<PredicateType> ;
          <subject> @<Genotype> ;
          <object> @<Gene>
       ) ;
       rdf:type [ <GenotypeToGeneAssociation> ]
    )
}

<GenotypeToGenotypePartAssociation> CLOSED {
    (  $<GenotypeToGenotypePartAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <predicate> @<PredicateType> ;
          <subject> @<Genotype> ;
          <object> @<Genotype>
       ) ;
       rdf:type [ <GenotypeToGenotypePartAssociation> ]
    )
}

<GenotypeToPhenotypicFeatureAssociation> CLOSED {
    (  $<GenotypeToPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<EntityToPhenotypicFeatureAssociationMixin_tes> ;
          rdf:type [ <EntityToPhenotypicFeatureAssociationMixin> ] ? ;
          &<GenotypeToEntityAssociationMixin_tes> ;
          rdf:type [ <GenotypeToEntityAssociationMixin> ] ? ;
          <predicate> @<PredicateType> ;
          <subject> @<Genotype> ;
          <frequency_qualifier> @<FrequencyValue> ? ;
          <severity_qualifier> @<SeverityValue> ? ;
          <onset_qualifier> @<Onset> ? ;
          <sex_qualifier> @<BiologicalSex> ?
       ) ;
       rdf:type [ <GenotypeToPhenotypicFeatureAssociation> ]
    )
}

<GenotypeToVariantAssociation> CLOSED {
    (  $<GenotypeToVariantAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <predicate> @<PredicateType> ;
          <subject> @<Genotype> ;
          <object> @<SequenceVariant>
       ) ;
       rdf:type [ <GenotypeToVariantAssociation> ]
    )
}

<GenotypicSex> CLOSED {
    (  $<GenotypicSex_tes> (  &<BiologicalSex_tes> ;
          rdf:type [ <BiologicalSex> ] ?
       ) ;
       rdf:type [ <GenotypicSex> ] ?
    )
}

<GeographicLocation>  (
    CLOSED {
       (  $<GeographicLocation_tes> (  &<PlanetaryEntity_tes> ;
             rdf:type [ <PlanetaryEntity> ] ? ;
             <latitude> @metatype:Float ? ;
             <longitude> @metatype:Float ?
          ) ;
          rdf:type [ <GeographicLocation> ]
       )
    } OR @<GeographicLocationAtTime>
)

<GeographicLocationAtTime> CLOSED {
    (  $<GeographicLocationAtTime_tes> (  &<GeographicLocation_tes> ;
          rdf:type [ <GeographicLocation> ] ? ;
          <timepoint> @<TimeType> ?
       ) ;
       rdf:type [ <GeographicLocationAtTime> ]
    )
}

<GrossAnatomicalStructure> CLOSED {
    (  $<GrossAnatomicalStructure_tes> (  &<AnatomicalEntity_tes> ;
          rdf:type [ <AnatomicalEntity> ] ?
       ) ;
       rdf:type [ <GrossAnatomicalStructure> ]
    )
}

<Haplotype> CLOSED {
    (  $<Haplotype_tes> (  &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ?
       ) ;
       rdf:type [ <Haplotype> ]
    )
}

<IndividualOrganism>  (
    CLOSED {
       (  $<IndividualOrganism_tes> (  &<OrganismalEntity_tes> ;
             rdf:type [ <OrganismalEntity> ] ? ;
             &<ThingWithTaxon_tes> ;
             rdf:type [ <ThingWithTaxon> ] ? ;
             <in_taxon> @<OrganismTaxon> *
          ) ;
          rdf:type [ <IndividualOrganism> ]
       )
    } OR @<Case>
)

<InformationContentEntity>  (
    @<ConfidenceLevel> OR @<DataFile> OR @<DataSet> OR @<EvidenceType> OR @<Publication>
)

<InformationContentEntity_struct> {
    (  $<InformationContentEntity_tes> (  &<NamedThing_tes> ;
          rdf:type [ <NamedThing> ] ? ;
          <license> @metatype:String ? ;
          <rights> @metatype:String ? ;
          <format> @metatype:String ? ;
          <creation_date> @metatype:Date ?
       ) ;
       rdf:type [ <InformationContentEntity> ]
    )
}

<Inheritance> CLOSED {
    (  $<Inheritance_tes> (  &<OrganismAttribute_tes> ;
          rdf:type [ <OrganismAttribute> ] ?
       ) ;
       rdf:type [ <Inheritance> ] ?
    )
}

<LifeStage> CLOSED {
    (  $<LifeStage_tes> (  &<OrganismalEntity_tes> ;
          rdf:type [ <OrganismalEntity> ] ? ;
          &<ThingWithTaxon_tes> ;
          rdf:type [ <ThingWithTaxon> ] ? ;
          <in_taxon> @<OrganismTaxon> *
       ) ;
       rdf:type [ <LifeStage> ]
    )
}

<MacromolecularComplex> CLOSED {
    (  $<MacromolecularComplex_tes> (  &<MacromolecularMachine_tes> ;
          rdf:type [ <MacromolecularMachine> ] ?
       ) ;
       rdf:type [ <MacromolecularComplex> ]
    )
}

<MacromolecularMachine>  (
    CLOSED {
       (  $<MacromolecularMachine_tes> (  &<GenomicEntity_tes> ;
             rdf:type [ <GenomicEntity> ] ? ;
             <name> @<SymbolType> ?
          ) ;
          rdf:type [ <MacromolecularMachine> ]
       )
    } OR @<GeneOrGeneProduct> OR @<MacromolecularComplex>
)

<MacromolecularMachineToBiologicalProcessAssociation> CLOSED {
    (  $<MacromolecularMachineToBiologicalProcessAssociation_tes> (  &<FunctionalAssociation_tes> ;
          rdf:type [ <FunctionalAssociation> ] ? ;
          <object> @<BiologicalProcess>
       ) ;
       rdf:type [ <MacromolecularMachineToBiologicalProcessAssociation> ]
    )
}

<MacromolecularMachineToCellularComponentAssociation> CLOSED {
    (  $<MacromolecularMachineToCellularComponentAssociation_tes> (  &<FunctionalAssociation_tes> ;
          rdf:type [ <FunctionalAssociation> ] ? ;
          <object> @<CellularComponent>
       ) ;
       rdf:type [ <MacromolecularMachineToCellularComponentAssociation> ]
    )
}

<MacromolecularMachineToMolecularActivityAssociation> CLOSED {
    (  $<MacromolecularMachineToMolecularActivityAssociation_tes> (  &<FunctionalAssociation_tes> ;
          rdf:type [ <FunctionalAssociation> ] ? ;
          <object> @<MolecularActivity>
       ) ;
       rdf:type [ <MacromolecularMachineToMolecularActivityAssociation> ]
    )
}

<MaterialSample> CLOSED {
    (  $<MaterialSample_tes> (  &<PhysicalEntity_tes> ;
          rdf:type [ <PhysicalEntity> ] ? ;
          &<SubjectOfInvestigation_tes> ;
          rdf:type [ <SubjectOfInvestigation> ] ?
       ) ;
       rdf:type [ <MaterialSample> ]
    )
}

<MaterialSampleDerivationAssociation> CLOSED {
    (  $<MaterialSampleDerivationAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <subject> @<MaterialSample> ;
          <object> @<NamedThing> ;
          <predicate> @<PredicateType>
       ) ;
       rdf:type [ <MaterialSampleDerivationAssociation> ]
    )
}

<MaterialSampleToDiseaseOrPhenotypicFeatureAssociation> CLOSED {
    (  $<MaterialSampleToDiseaseOrPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<MaterialSampleToEntityAssociationMixin_tes> ;
          rdf:type [ <MaterialSampleToEntityAssociationMixin> ] ? ;
          &<EntityToDiseaseOrPhenotypicFeatureAssociationMixin_tes> ;
          rdf:type [ <EntityToDiseaseOrPhenotypicFeatureAssociationMixin> ] ?
       ) ;
       rdf:type [ <MaterialSampleToDiseaseOrPhenotypicFeatureAssociation> ]
    )
}

<MaterialSampleToEntityAssociationMixin> {
    (  $<MaterialSampleToEntityAssociationMixin_tes> <subject> @<MaterialSample> ;
       rdf:type [ <MaterialSampleToEntityAssociationMixin> ] ?
    )
}

<Metabolite> CLOSED {
    (  $<Metabolite_tes> (  &<ChemicalSubstance_tes> ;
          rdf:type [ <ChemicalSubstance> ] ?
       ) ;
       rdf:type [ <Metabolite> ]
    )
}

<MicroRNA> CLOSED {
    (  $<MicroRNA_tes> (  &<NoncodingRNAProduct_tes> ;
          rdf:type [ <NoncodingRNAProduct> ] ?
       ) ;
       rdf:type [ <MicroRNA> ]
    )
}

<Mixture> {
    (  $<Mixture_tes> <has_constituent> @<ChemicalSubstance> * ;
       rdf:type [ <Mixture> ] ?
    )
}

<ModelToDiseaseAssociationMixin> {
    (  $<ModelToDiseaseAssociationMixin_tes> (  <subject> @<NamedThing> ;
          <predicate> @<PredicateType>
       ) ;
       rdf:type [ <ModelToDiseaseAssociationMixin> ] ?
    )
}

<MolecularActivity> CLOSED {
    (  $<MolecularActivity_tes> (  &<BiologicalProcessOrActivity_tes> ;
          rdf:type [ <BiologicalProcessOrActivity> ] ? ;
          &<Occurrent_tes> ;
          rdf:type [ <Occurrent> ] ? ;
          <has_input> @<ChemicalSubstance> * ;
          <has_output> @<ChemicalSubstance> * ;
          <enabled_by> @<MacromolecularMachine> *
       ) ;
       rdf:type [ <MolecularActivity> ]
    )
}

<MolecularEntity>  (
    CLOSED {
       (  $<MolecularEntity_tes> (  &<BiologicalEntity_tes> ;
             rdf:type [ <BiologicalEntity> ] ? ;
             &<ThingWithTaxon_tes> ;
             rdf:type [ <ThingWithTaxon> ] ? ;
             &<PhysicalEssence_tes> ;
             rdf:type [ <PhysicalEssence> ] ? ;
             <in_taxon> @<OrganismTaxon> *
          ) ;
          rdf:type [ <MolecularEntity> ]
       )
    } OR @<ChemicalSubstance> OR @<Drug> OR @<Food> OR @<GeneFamily> OR @<GenomicEntity>
)

<NamedThing>  (
    CLOSED {
       (  $<NamedThing_tes> (  &<Entity_tes> ;
             rdf:type [ <Entity> ] ? ;
             <category> @<NamedThing> +
          ) ;
          rdf:type [ <NamedThing> ]
       )
    } OR @<AdministrativeEntity> OR @<BiologicalEntity> OR @<ClinicalEntity> OR @<Device> OR @<InformationContentEntity> OR
    @<OntologyClass> OR @<Phenomenon> OR @<PhysicalEntity> OR @<PlanetaryEntity> OR @<Procedure>
)

<NoncodingRNAProduct>  (
    CLOSED {
       (  $<NoncodingRNAProduct_tes> (  &<RNAProduct_tes> ;
             rdf:type [ <RNAProduct> ] ?
          ) ;
          rdf:type [ <NoncodingRNAProduct> ]
       )
    } OR @<MicroRNA> OR @<SiRNA>
)

<Occurrent>  (
    {
       (  $<Occurrent_tes> rdf:type . * ;
          rdf:type [ <Occurrent> ] ?
       )
    } OR @<ActivityAndBehavior>
)

<Onset> CLOSED {
    (  $<Onset_tes> (  &<ClinicalCourse_tes> ;
          rdf:type [ <ClinicalCourse> ] ?
       ) ;
       rdf:type [ <Onset> ] ?
    )
}

<OntologyClass>  (
    CLOSED {
       (  $<OntologyClass_tes> (  &<NamedThing_tes> ;
             rdf:type [ <NamedThing> ] ?
          ) ;
          rdf:type [ <OntologyClass> ]
       )
    } OR @<GeneOntologyClass> OR @<OrganismTaxon> OR @<RelationshipType> OR @<TaxonomicRank>
)

<OrganismAttribute>  (
    CLOSED {
       (  $<OrganismAttribute_tes> (  &<Attribute_tes> ;
             rdf:type [ <Attribute> ] ?
          ) ;
          rdf:type [ <OrganismAttribute> ] ?
       )
    } OR @<Inheritance>
)

<OrganismTaxon> CLOSED {
    (  $<OrganismTaxon_tes> (  &<OntologyClass_tes> ;
          rdf:type [ <OntologyClass> ] ? ;
          <has_taxonomic_rank> @<TaxonomicRank> ? ;
          <subclass_of> @<OrganismTaxon> *
       ) ;
       rdf:type [ <OrganismTaxon> ]
    )
}

<OrganismalEntity>  (
    @<AnatomicalEntity> OR @<CellLine> OR @<IndividualOrganism> OR @<LifeStage> OR @<PopulationOfIndividualOrganisms>
)

<OrganismalEntity_struct> {
    (  $<OrganismalEntity_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ? ;
          <has_attribute> @<Attribute> *
       ) ;
       rdf:type [ <OrganismalEntity> ]
    )
}

<OrganismalEntityAsAModelOfDiseaseAssociation> CLOSED {
    (  $<OrganismalEntityAsAModelOfDiseaseAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<ModelToDiseaseAssociationMixin_tes> ;
          rdf:type [ <ModelToDiseaseAssociationMixin> ] ? ;
          &<EntityToDiseaseAssociationMixin_tes> ;
          rdf:type [ <EntityToDiseaseAssociationMixin> ] ? ;
          <subject> @<OrganismalEntity> ;
          <frequency_qualifier> @<FrequencyValue> ? ;
          <severity_qualifier> @<SeverityValue> ? ;
          <onset_qualifier> @<Onset> ?
       ) ;
       rdf:type [ <OrganismalEntityAsAModelOfDiseaseAssociation> ]
    )
}

<PairwiseGeneToGeneInteraction>  (
    CLOSED {
       (  $<PairwiseGeneToGeneInteraction_tes> (  &<GeneToGeneAssociation_tes> ;
             rdf:type [ <GeneToGeneAssociation> ] ? ;
             <predicate> @<PredicateType> ;
             <relation> @metatype:Uriorcurie
          ) ;
          rdf:type [ <PairwiseGeneToGeneInteraction> ]
       )
    } OR @<PairwiseMolecularInteraction>
)

<PairwiseMolecularInteraction> CLOSED {
    (  $<PairwiseMolecularInteraction_tes> (  &<PairwiseGeneToGeneInteraction_tes> ;
          rdf:type [ <PairwiseGeneToGeneInteraction> ] ? ;
          <interacting_molecules_category> @<OntologyClass> ? ;
          <subject> @<MolecularEntity> ;
          <predicate> @<PredicateType> ;
          <relation> @metatype:Uriorcurie ;
          <object> @<MolecularEntity>
       ) ;
       rdf:type [ <PairwiseMolecularInteraction> ]
    )
}

<PathognomonicityQuantifier> {
    (  $<PathognomonicityQuantifier_tes> (  &<SpecificityQuantifier_tes> ;
          rdf:type [ <SpecificityQuantifier> ] ?
       ) ;
       rdf:type [ <PathognomonicityQuantifier> ] ?
    )
}

<PathologicalProcess> CLOSED {
    (  $<PathologicalProcess_tes> (  &<BiologicalProcess_tes> ;
          rdf:type [ <BiologicalProcess> ] ?
       ) ;
       rdf:type [ <PathologicalProcess> ]
    )
}

<Pathway> CLOSED {
    (  $<Pathway_tes> (  &<BiologicalProcess_tes> ;
          rdf:type [ <BiologicalProcess> ] ?
       ) ;
       rdf:type [ <Pathway> ]
    )
}

<Phenomenon> CLOSED {
    (  $<Phenomenon_tes> (  &<NamedThing_tes> ;
          rdf:type [ <NamedThing> ] ? ;
          &<Occurrent_tes> ;
          rdf:type [ <Occurrent> ] ?
       ) ;
       rdf:type [ <Phenomenon> ]
    )
}

<PhenotypicFeature> CLOSED {
    (  $<PhenotypicFeature_tes> (  &<DiseaseOrPhenotypicFeature_tes> ;
          rdf:type [ <DiseaseOrPhenotypicFeature> ] ?
       ) ;
       rdf:type [ <PhenotypicFeature> ]
    )
}

<PhenotypicSex> CLOSED {
    (  $<PhenotypicSex_tes> (  &<BiologicalSex_tes> ;
          rdf:type [ <BiologicalSex> ] ?
       ) ;
       rdf:type [ <PhenotypicSex> ] ?
    )
}

<PhysicalEntity>  (
    CLOSED {
       (  $<PhysicalEntity_tes> (  &<NamedThing_tes> ;
             rdf:type [ <NamedThing> ] ? ;
             &<PhysicalEssence_tes> ;
             rdf:type [ <PhysicalEssence> ] ?
          ) ;
          rdf:type [ <PhysicalEntity> ]
       )
    } OR @<MaterialSample>
)

<PhysicalEssence> {
    (  $<PhysicalEssence_tes> rdf:type . * ;
       rdf:type [ <PhysicalEssence> ] ?
    )
}

<PhysiologicalProcess> CLOSED {
    (  $<PhysiologicalProcess_tes> (  &<BiologicalProcess_tes> ;
          rdf:type [ <BiologicalProcess> ] ?
       ) ;
       rdf:type [ <PhysiologicalProcess> ]
    )
}

<PlanetaryEntity>  (
    CLOSED {
       (  $<PlanetaryEntity_tes> (  &<NamedThing_tes> ;
             rdf:type [ <NamedThing> ] ?
          ) ;
          rdf:type [ <PlanetaryEntity> ]
       )
    } OR @<EnvironmentalFeature> OR @<EnvironmentalProcess> OR @<GeographicLocation>
)

<PopulationOfIndividualOrganisms> CLOSED {
    (  $<PopulationOfIndividualOrganisms_tes> (  &<OrganismalEntity_tes> ;
          rdf:type [ <OrganismalEntity> ] ? ;
          &<ThingWithTaxon_tes> ;
          rdf:type [ <ThingWithTaxon> ] ? ;
          <in_taxon> @<OrganismTaxon> *
       ) ;
       rdf:type [ <PopulationOfIndividualOrganisms> ]
    )
}

<PopulationToPopulationAssociation> CLOSED {
    (  $<PopulationToPopulationAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <subject> @<PopulationOfIndividualOrganisms> ;
          <object> @<PopulationOfIndividualOrganisms> ;
          <predicate> @<PredicateType>
       ) ;
       rdf:type [ <PopulationToPopulationAssociation> ]
    )
}

<Procedure> CLOSED {
    (  $<Procedure_tes> (  &<NamedThing_tes> ;
          rdf:type [ <NamedThing> ] ? ;
          &<ActivityAndBehavior_tes> ;
          rdf:type [ <ActivityAndBehavior> ] ?
       ) ;
       rdf:type [ <Procedure> ]
    )
}

<ProcessedMaterial> CLOSED {
    (  $<ProcessedMaterial_tes> (  &<ChemicalSubstance_tes> ;
          rdf:type [ <ChemicalSubstance> ] ? ;
          &<Mixture_tes> ;
          rdf:type [ <Mixture> ] ? ;
          <has_constituent> @<ChemicalSubstance> *
       ) ;
       rdf:type [ <ProcessedMaterial> ]
    )
}

<Protein>  (
    CLOSED {
       (  $<Protein_tes> (  &<GeneProduct_tes> ;
             rdf:type [ <GeneProduct> ] ?
          ) ;
          rdf:type [ <Protein> ]
       )
    } OR @<ProteinIsoform>
)

<ProteinIsoform> CLOSED {
    (  $<ProteinIsoform_tes> (  &<Protein_tes> ;
          rdf:type [ <Protein> ] ? ;
          &<GeneProductIsoform_tes> ;
          rdf:type [ <GeneProductIsoform> ] ?
       ) ;
       rdf:type [ <ProteinIsoform> ]
    )
}

<Publication>  (
    CLOSED {
       (  $<Publication_tes> (  &<InformationContentEntity_tes> ;
             rdf:type [ <InformationContentEntity> ] ? ;
             <authors> @metatype:String * ;
             <pages> @metatype:String * ;
             <summary> @metatype:String ? ;
             <keywords> @metatype:String * ;
             <mesh_terms> @metatype:Uriorcurie * ;
             <xref> @<IriType> * ;
             <name> @<LabelType> ? ;
             dcterms:type @metatype:String
          ) ;
          rdf:type [ <Publication> ]
       )
    } OR @<Article> OR @<Book> OR @<BookChapter> OR @<Serial>
)

<QuantityValue> CLOSED {
    (  $<QuantityValue_tes> (  &<Annotation_tes> ;
          rdf:type [ <Annotation> ] ? ;
          <has_unit> @<Unit> ? ;
          <has_numeric_value> @metatype:Double ?
       ) ;
       rdf:type [ <QuantityValue> ] ?
    )
}

<ReagentTargetedGene> CLOSED {
    (  $<ReagentTargetedGene_tes> (  &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ?
       ) ;
       rdf:type [ <ReagentTargetedGene> ]
    )
}

<RelationshipQuantifier>  (
    @<FrequencyQuantifier> OR @<SensitivityQuantifier> OR @<SpecificityQuantifier>
)

<RelationshipQuantifier_struct> {
    (  $<RelationshipQuantifier_tes> rdf:type . * ;
       rdf:type [ <RelationshipQuantifier> ] ?
    )
}

<RelationshipType> CLOSED {
    (  $<RelationshipType_tes> (  &<OntologyClass_tes> ;
          rdf:type [ <OntologyClass> ] ?
       ) ;
       rdf:type [ <RelationshipType> ]
    )
}

<RNAProduct>  (
    CLOSED {
       (  $<RNAProduct_tes> (  &<GeneProduct_tes> ;
             rdf:type [ <GeneProduct> ] ?
          ) ;
          rdf:type [ <RNAProduct> ]
       )
    } OR @<RNAProductIsoform> OR @<NoncodingRNAProduct>
)

<RNAProductIsoform> CLOSED {
    (  $<RNAProductIsoform_tes> (  &<RNAProduct_tes> ;
          rdf:type [ <RNAProduct> ] ? ;
          &<GeneProductIsoform_tes> ;
          rdf:type [ <GeneProductIsoform> ] ?
       ) ;
       rdf:type [ <RNAProductIsoform> ]
    )
}

<SensitivityQuantifier> {
    (  $<SensitivityQuantifier_tes> (  &<RelationshipQuantifier_tes> ;
          rdf:type [ <RelationshipQuantifier> ] ?
       ) ;
       rdf:type [ <SensitivityQuantifier> ] ?
    )
}

<SequenceAssociation>  (
    CLOSED {
       (  $<SequenceAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ?
          ) ;
          rdf:type [ <SequenceAssociation> ]
       )
    } OR @<GenomicSequenceLocalization>
)

<SequenceFeatureRelationship>  (
    CLOSED {
       (  $<SequenceFeatureRelationship_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ? ;
             <subject> @<GenomicEntity> ;
             <object> @<GenomicEntity>
          ) ;
          rdf:type [ <SequenceFeatureRelationship> ]
       )
    } OR @<ExonToTranscriptRelationship> OR @<GeneToGeneProductRelationship> OR @<TranscriptToGeneRelationship>
)

<SequenceVariant>  (
    CLOSED {
       (  $<SequenceVariant_tes> (  &<GenomicEntity_tes> ;
             rdf:type [ <GenomicEntity> ] ? ;
             <has_gene> @<Gene> * ;
             <has_biological_sequence> @<BiologicalSequence> ?
          ) ;
          rdf:type [ <SequenceVariant> ]
       )
    } OR @<Snv>
)

<SequenceVariantModulatesTreatmentAssociation> {
    (  $<SequenceVariantModulatesTreatmentAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <subject> @<SequenceVariant> ;
          <object> @<Treatment>
       ) ;
       rdf:type [ <SequenceVariantModulatesTreatmentAssociation> ]
    )
}

<Serial> CLOSED {
    (  $<Serial_tes> (  &<Publication_tes> ;
          rdf:type [ <Publication> ] ? ;
          <iso_abbreviation> @metatype:String ? ;
          <volume> @metatype:String ? ;
          <issue> @metatype:String ? ;
          <type> @metatype:String
       ) ;
       rdf:type [ <Serial> ]
    )
}

<SeverityValue> CLOSED {
    (  $<SeverityValue_tes> (  &<Attribute_tes> ;
          rdf:type [ <Attribute> ] ?
       ) ;
       rdf:type [ <SeverityValue> ] ?
    )
}

<SiRNA> CLOSED {
    (  $<SiRNA_tes> (  &<NoncodingRNAProduct_tes> ;
          rdf:type [ <NoncodingRNAProduct> ] ?
       ) ;
       rdf:type [ <SiRNA> ]
    )
}

<Snv> CLOSED {
    (  $<Snv_tes> (  &<SequenceVariant_tes> ;
          rdf:type [ <SequenceVariant> ] ?
       ) ;
       rdf:type [ <Snv> ]
    )
}

<SourceFile> CLOSED {
    (  $<SourceFile_tes> (  &<DataFile_tes> ;
          rdf:type [ <DataFile> ] ? ;
          <source_version> @metatype:String ? ;
          <retrieved_on> @metatype:Date ?
       ) ;
       rdf:type [ <SourceFile> ]
    )
}

<SpecificityQuantifier>  (
    {
       (  $<SpecificityQuantifier_tes> (  &<RelationshipQuantifier_tes> ;
             rdf:type [ <RelationshipQuantifier> ] ?
          ) ;
          rdf:type [ <SpecificityQuantifier> ] ?
       )
    } OR @<PathognomonicityQuantifier>
)

<SubjectOfInvestigation> {
    (  $<SubjectOfInvestigation_tes> rdf:type . * ;
       rdf:type [ <SubjectOfInvestigation> ] ?
    )
}

<TaxonomicRank> CLOSED {
    (  $<TaxonomicRank_tes> (  &<OntologyClass_tes> ;
          rdf:type [ <OntologyClass> ] ?
       ) ;
       rdf:type [ <TaxonomicRank> ]
    )
}

<ThingWithTaxon> {
    (  $<ThingWithTaxon_tes> <in_taxon> @<OrganismTaxon> * ;
       rdf:type [ <ThingWithTaxon> ] ?
    )
}

<Transcript> CLOSED {
    (  $<Transcript_tes> (  &<GeneProduct_tes> ;
          rdf:type [ <GeneProduct> ] ?
       ) ;
       rdf:type [ <Transcript> ]
    )
}

<TranscriptToGeneRelationship> CLOSED {
    (  $<TranscriptToGeneRelationship_tes> (  &<SequenceFeatureRelationship_tes> ;
          rdf:type [ <SequenceFeatureRelationship> ] ? ;
          <subject> @<Transcript> ;
          <object> @<Gene>
       ) ;
       rdf:type [ <TranscriptToGeneRelationship> ]
    )
}

<Treatment> CLOSED {
    (  $<Treatment_tes> (  &<ExposureEvent_tes> ;
          rdf:type [ <ExposureEvent> ] ? ;
          <has_part> @<DrugExposure> +
       ) ;
       rdf:type [ <Treatment> ]
    )
}

<VariantAsAModelOfDiseaseAssociation> CLOSED {
    (  $<VariantAsAModelOfDiseaseAssociation_tes> (  &<VariantToDiseaseAssociation_tes> ;
          rdf:type [ <VariantToDiseaseAssociation> ] ? ;
          &<ModelToDiseaseAssociationMixin_tes> ;
          rdf:type [ <ModelToDiseaseAssociationMixin> ] ? ;
          &<EntityToDiseaseAssociationMixin_tes> ;
          rdf:type [ <EntityToDiseaseAssociationMixin> ] ? ;
          <subject> @<SequenceVariant>
       ) ;
       rdf:type [ <VariantAsAModelOfDiseaseAssociation> ]
    )
}

<VariantToDiseaseAssociation>  (
    CLOSED {
       (  $<VariantToDiseaseAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ? ;
             &<VariantToEntityAssociationMixin_tes> ;
             rdf:type [ <VariantToEntityAssociationMixin> ] ? ;
             &<EntityToDiseaseAssociationMixin_tes> ;
             rdf:type [ <EntityToDiseaseAssociationMixin> ] ? ;
             <subject> @<NamedThing> ;
             <predicate> @<PredicateType> ;
             <object> @<NamedThing> ;
             <frequency_qualifier> @<FrequencyValue> ? ;
             <severity_qualifier> @<SeverityValue> ? ;
             <onset_qualifier> @<Onset> ?
          ) ;
          rdf:type [ <VariantToDiseaseAssociation> ]
       )
    } OR @<VariantAsAModelOfDiseaseAssociation>
)

<VariantToEntityAssociationMixin> {
    (  $<VariantToEntityAssociationMixin_tes> <subject> @<SequenceVariant> ;
       rdf:type [ <VariantToEntityAssociationMixin> ] ?
    )
}

<VariantToGeneAssociation>  (
    CLOSED {
       (  $<VariantToGeneAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ? ;
             &<VariantToEntityAssociationMixin_tes> ;
             rdf:type [ <VariantToEntityAssociationMixin> ] ? ;
             <object> @<Gene> ;
             <predicate> @<PredicateType>
          ) ;
          rdf:type [ <VariantToGeneAssociation> ]
       )
    } OR @<VariantToGeneExpressionAssociation>
)

<VariantToGeneExpressionAssociation> CLOSED {
    (  $<VariantToGeneExpressionAssociation_tes> (  &<VariantToGeneAssociation_tes> ;
          rdf:type [ <VariantToGeneAssociation> ] ? ;
          &<GeneExpressionMixin_tes> ;
          rdf:type [ <GeneExpressionMixin> ] ? ;
          <predicate> @<PredicateType> ;
          <quantifier_qualifier> @<OntologyClass> ? ;
          <expression_site> @<AnatomicalEntity> ? ;
          <stage_qualifier> @<LifeStage> ? ;
          <phenotypic_state> @<DiseaseOrPhenotypicFeature> ?
       ) ;
       rdf:type [ <VariantToGeneExpressionAssociation> ]
    )
}

<VariantToPhenotypicFeatureAssociation> CLOSED {
    (  $<VariantToPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<VariantToEntityAssociationMixin_tes> ;
          rdf:type [ <VariantToEntityAssociationMixin> ] ? ;
          &<EntityToPhenotypicFeatureAssociationMixin_tes> ;
          rdf:type [ <EntityToPhenotypicFeatureAssociationMixin> ] ? ;
          <subject> @<SequenceVariant> ;
          <frequency_qualifier> @<FrequencyValue> ? ;
          <severity_qualifier> @<SeverityValue> ? ;
          <onset_qualifier> @<Onset> ? ;
          <sex_qualifier> @<BiologicalSex> ?
       ) ;
       rdf:type [ <VariantToPhenotypicFeatureAssociation> ]
    )
}

<VariantToPopulationAssociation> CLOSED {
    (  $<VariantToPopulationAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<VariantToEntityAssociationMixin_tes> ;
          rdf:type [ <VariantToEntityAssociationMixin> ] ? ;
          &<FrequencyQuantifier_tes> ;
          rdf:type [ <FrequencyQuantifier> ] ? ;
          &<FrequencyQualifierMixin_tes> ;
          rdf:type [ <FrequencyQualifierMixin> ] ? ;
          <subject> @<SequenceVariant> ;
          <object> @<PopulationOfIndividualOrganisms> ;
          <has_quotient> @metatype:Double ? ;
          <has_count> @metatype:Integer ? ;
          <has_total> @metatype:Integer ? ;
          <has_percentage> @metatype:Double ? ;
          <frequency_qualifier> @<FrequencyValue> ?
       ) ;
       rdf:type [ <VariantToPopulationAssociation> ]
    )
}

<Zygosity> CLOSED {
    (  $<Zygosity_tes> (  &<Attribute_tes> ;
          rdf:type [ <Attribute> ] ?
       ) ;
       rdf:type [ <Zygosity> ] ?
    )
}



