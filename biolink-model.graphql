type AbstractEntity
  {
  }

interface ActivityAndBehavior
  {
  }

interface AdministrativeEntity
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

type Agent
  {
    category: [CategoryType]!
    iri: IriType
    source: LabelType
    hasAttribute: [Attribute]
    affiliation: [Uriorcurie]
    address: String
    id: String!
    name: LabelType
  }

type AnatomicalEntity implements ThingWithTaxon, PhysicalEssence
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
  }

type AnatomicalEntityToAnatomicalEntityAssociation
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: AnatomicalEntity!
    object: AnatomicalEntity!
  }

type AnatomicalEntityToAnatomicalEntityOntogenicAssociation
  {
    id: String!
    associationType: OntologyClass
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: AnatomicalEntity!
    object: AnatomicalEntity!
    predicate: PredicateType!
  }

type AnatomicalEntityToAnatomicalEntityPartOfAssociation
  {
    id: String!
    associationType: OntologyClass
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: AnatomicalEntity!
    object: AnatomicalEntity!
    predicate: PredicateType!
  }

type Article
  {
    category: [CategoryType]!
    iri: IriType
    source: LabelType
    hasAttribute: [Attribute]
    description: NarrativeText
    license: String
    rights: String
    format: String
    creationDate: Date
    type: String!
    authors: [String]
    pages: [String]
    summary: String
    keywords: [String]
    meshTerms: [Uriorcurie]
    xref: [IriType]
    id: String!
    name: LabelType
    publishedIn: Uriorcurie!
    isoAbbreviation: String
    volume: String
    issue: String
  }

type Association implements AttributeMixin
  {
    id: String!
    associationType: OntologyClass
    subject: NamedThing!
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
  }

type Attribute implements ResourceMixin
  {
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    name: LabelType
    iri: IriType
    source: LabelType
  }

interface AttributeMixin
  {
    hasAttribute: [Attribute]
  }

type Behavior
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    hasInput: [NamedThing]
    hasOutput: [NamedThing]
    enabledBy: [PhysicalEntity]
  }

interface BiologicalEntity
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

type BiologicalProcess implements Occurrent
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    hasInput: [NamedThing]
    hasOutput: [NamedThing]
    enabledBy: [PhysicalEntity]
  }

type BiologicalProcessOrActivity implements Occurrent
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    hasInput: [NamedThing]
    hasOutput: [NamedThing]
    enabledBy: [PhysicalEntity]
  }

type BiologicalSex
  {
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    name: LabelType
    iri: IriType
    source: LabelType
  }

type Book
  {
    category: [CategoryType]!
    iri: IriType
    source: LabelType
    hasAttribute: [Attribute]
    description: NarrativeText
    license: String
    rights: String
    format: String
    creationDate: Date
    authors: [String]
    pages: [String]
    summary: String
    keywords: [String]
    meshTerms: [Uriorcurie]
    xref: [IriType]
    name: LabelType
    id: String!
    type: String!
  }

type BookChapter
  {
    category: [CategoryType]!
    iri: IriType
    source: LabelType
    hasAttribute: [Attribute]
    description: NarrativeText
    license: String
    rights: String
    format: String
    creationDate: Date
    type: String!
    authors: [String]
    pages: [String]
    summary: String
    keywords: [String]
    meshTerms: [Uriorcurie]
    xref: [IriType]
    id: String!
    name: LabelType
    publishedIn: Uriorcurie!
    volume: String
    chapter: String
  }

type Carbohydrate
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
  }

type Case
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
  }

type CaseToPhenotypicFeatureAssociation implements ThingToPhenotypicFeatureAssociationMixin, CaseToThingAssociationMixin
  {
    id: String!
    associationType: OntologyClass
    subject: NamedThing!
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    sexQualifier: BiologicalSex
    description: NarrativeText
  }

interface CaseToThingAssociationMixin
  {
    subject: Case!
  }

type Cell
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
  }

type CellLine
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

type CellLineAsAModelOfDiseaseAssociation implements ModelToDiseaseAssociationMixin, ThingToDiseaseAssociationMixin
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: CellLine!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
  }

type CellLineToDiseaseOrPhenotypicFeatureAssociation implements CellLineToThingAssociationMixin, ThingToDiseaseOrPhenotypicFeatureAssociationMixin
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: DiseaseOrPhenotypicFeature!
  }

interface CellLineToThingAssociationMixin
  {
    subject: CellLine!
  }

type CellularComponent
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
  }

type ChemicalExposure
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

type ChemicalSubstance
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
  }

type ChemicalToChemicalAssociation implements ChemicalToThingAssociation
  {
    id: String!
    associationType: OntologyClass
    subject: NamedThing!
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    object: ChemicalSubstance!
  }

type ChemicalToChemicalDerivationAssociation
  {
    id: String!
    associationType: OntologyClass
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    changeIsCatalyzedBy: [MacromolecularMachine]
    subject: ChemicalSubstance!
    object: ChemicalSubstance!
    predicate: PredicateType!
  }

type ChemicalToDiseaseOrPhenotypicFeatureAssociation implements ChemicalToThingAssociation, ThingToDiseaseOrPhenotypicFeatureAssociationMixin
  {
    id: String!
    associationType: OntologyClass
    subject: NamedThing!
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    object: DiseaseOrPhenotypicFeature!
  }

type ChemicalToGeneAssociation implements ChemicalToThingAssociation
  {
    id: String!
    associationType: OntologyClass
    subject: NamedThing!
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    object: GeneOrGeneProduct!
  }

type ChemicalToPathwayAssociation implements ChemicalToThingAssociation
  {
    id: String!
    associationType: OntologyClass
    subject: NamedThing!
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    object: Pathway!
  }

interface ChemicalToThingAssociation
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: ChemicalSubstance!
  }

type ClinicalAttribute
  {
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    name: LabelType
    iri: IriType
    source: LabelType
  }

type ClinicalCourse
  {
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    name: LabelType
    iri: IriType
    source: LabelType
  }

type ClinicalEntity
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

type ClinicalIntervention
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

type ClinicalModifier
  {
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    name: LabelType
    iri: IriType
    source: LabelType
  }

type ClinicalTrial
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

type CodingSequence
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasBiologicalSequence: BiologicalSequence
  }

type ConfidenceLevel
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    description: NarrativeText
    license: String
    rights: String
    format: String
    creationDate: Date
  }

type ContributorAssociation
  {
    id: String!
    associationType: OntologyClass
    relation: Uriorcurie!
    negated: Boolean
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: InformationContentEntity!
    predicate: PredicateType!
    object: Agent!
    qualifiers: [OntologyClass]
  }

type DataFile
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    description: NarrativeText
    license: String
    rights: String
    format: String
    creationDate: Date
  }

type DataSet
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    description: NarrativeText
    license: String
    rights: String
    format: String
    creationDate: Date
  }

interface DataSetSummary
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    description: NarrativeText
    license: String
    rights: String
    format: String
    creationDate: Date
    sourceDataFile: DataFile
    versionOf: DataSet
    type: String
    distribution: DistributionLevel
    sourceWebPage: String
  }

type DataSetVersion
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    description: NarrativeText
    license: String
    rights: String
    format: String
    creationDate: Date
    sourceDataFile: DataFile
    versionOf: DataSet
    type: String
    distribution: DistributionLevel
  }

type Device
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

type Disease
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
  }

type DiseaseOrPhenotypicFeature implements ThingWithTaxon
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
  }

type DiseaseOrPhenotypicFeatureAssociationToLocationAssociation
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: DiseaseOrPhenotypicFeature!
    object: AnatomicalEntity!
  }

interface DiseaseOrPhenotypicFeatureAssociationToThingAssociation
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: DiseaseOrPhenotypicFeature!
  }

type DiseaseToExposureAssociation implements DiseaseToThingAssociationMixin
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: Disease!
    object: ExposureEvent!
  }

type DiseaseToPhenotypicFeatureAssociation implements ThingToPhenotypicFeatureAssociationMixin, DiseaseToThingAssociationMixin
  {
    id: String!
    associationType: OntologyClass
    subject: NamedThing!
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    sexQualifier: BiologicalSex
    description: NarrativeText
  }

interface DiseaseToThingAssociationMixin
  {
    subject: Disease!
  }

interface DistributionLevel
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    description: NarrativeText
    license: String
    rights: String
    format: String
    creationDate: Date
    sourceDataFile: DataFile
    versionOf: DataSet
    type: String
    distribution: DistributionLevel
    downloadUrl: String
  }

type Drug implements Mixture
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasActiveIngredient: [ChemicalSubstance]
    hasExcipient: [ChemicalSubstance]
    hasConstituent: [ChemicalSubstance]
  }

type DrugExposure
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    hasDrug: [ChemicalSubstance]!
  }

interface EntityToFeatureOrDiseaseQualifiersMixin
  {
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
  }

type EnvironmentalFeature
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

type EnvironmentalProcess implements Occurrent
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

type EvidenceType
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    description: NarrativeText
    license: String
    rights: String
    format: String
    creationDate: Date
  }

type Exon
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasBiologicalSequence: BiologicalSequence
  }

type ExonToTranscriptRelationship
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: Exon!
    object: Transcript!
  }

type ExposureEvent
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

type ExposureEventToPhenotypicFeatureAssociation implements ThingToPhenotypicFeatureAssociationMixin
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: ExposureEvent!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    sexQualifier: BiologicalSex
    description: NarrativeText
  }

type Food implements Mixture
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasNutrient: [ChemicalSubstance]
    hasConstituent: [ChemicalSubstance]
  }

interface FrequencyQualifierMixin
  {
    frequencyQualifier: FrequencyValue
  }

interface FrequencyQuantifier
  {
    hasCount: Integer
    hasTotal: Integer
    hasQuotient: Double
    hasPercentage: Double
  }

type FrequencyValue
  {
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    name: LabelType
    iri: IriType
    source: LabelType
  }

type FunctionalAssociation
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: MacromolecularMachine!
    object: GeneOntologyClass!
  }

type Gene
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasBiologicalSequence: BiologicalSequence
    name: SymbolType
    symbol: String
    description: NarrativeText
    synonym: [LabelType]
    xref: [IriType]
  }

type GeneAsAModelOfDiseaseAssociation implements ModelToDiseaseAssociationMixin, ThingToDiseaseAssociationMixin
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    subject: GeneOrGeneProduct!
  }

type GeneFamily implements GeneGrouping
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
  }

interface GeneGrouping
  {
  }

type GeneHasVariantThatContributesToDiseaseAssociation
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    sequenceVariantQualifier: SequenceVariant
    subject: GeneOrGeneProduct!
  }

type GeneOntologyClass
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

type GeneOrGeneProduct
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasBiologicalSequence: BiologicalSequence
    name: SymbolType
  }

type GeneProduct
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasBiologicalSequence: BiologicalSequence
    name: SymbolType
    description: NarrativeText
    synonym: [LabelType]
    xref: [IriType]
  }

interface GeneProductIsoform
  {
  }

type GeneRegulatoryRelationship
  {
    id: String!
    associationType: OntologyClass
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    subject: GeneOrGeneProduct!
    object: GeneOrGeneProduct!
  }

type GeneToDiseaseAssociation implements ThingToDiseaseAssociationMixin, GeneToThingAssociationMixin
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: GeneOrGeneProduct!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
  }

type GeneToExpressionSiteAssociation
  {
    id: String!
    associationType: OntologyClass
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    stageQualifier: LifeStage
    quantifierQualifier: OntologyClass
    subject: GeneOrGeneProduct!
    object: AnatomicalEntity!
    predicate: PredicateType!
  }

interface GeneToGeneAssociation
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: GeneOrGeneProduct!
    object: GeneOrGeneProduct!
  }

type GeneToGeneHomologyAssociation
  {
    id: String!
    associationType: OntologyClass
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: GeneOrGeneProduct!
    object: GeneOrGeneProduct!
    predicate: PredicateType!
  }

type GeneToGeneProductRelationship
  {
    id: String!
    associationType: OntologyClass
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: Gene!
    object: GeneProduct!
    predicate: PredicateType!
  }

type GeneToGoTermAssociation
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: MolecularEntity!
    object: GeneOntologyClass!
  }

type GeneToPhenotypicFeatureAssociation implements ThingToPhenotypicFeatureAssociationMixin, GeneToThingAssociationMixin
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: GeneOrGeneProduct!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    sexQualifier: BiologicalSex
    description: NarrativeText
  }

interface GeneToThingAssociationMixin
  {
    subject: GeneOrGeneProduct!
  }

type Genome
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasBiologicalSequence: BiologicalSequence
  }

type GenomicEntity
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasBiologicalSequence: BiologicalSequence
  }

type GenomicSequenceLocalization
  {
    id: String!
    associationType: OntologyClass
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    startInterbaseCoordinate: Integer
    endInterbaseCoordinate: Integer
    genomeBuild: String
    strand: String
    phase: String
    subject: GenomicEntity!
    object: GenomicEntity!
    predicate: PredicateType!
  }

type Genotype
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasBiologicalSequence: BiologicalSequence
    hasZygosity: Zygosity
  }

type GenotypeAsAModelOfDiseaseAssociation implements ModelToDiseaseAssociationMixin, ThingToDiseaseAssociationMixin
  {
    id: String!
    associationType: OntologyClass
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    object: NamedThing!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    subject: Genotype!
  }

type GenotypeToDiseaseAssociation implements GenotypeToThingAssociationMixin, ThingToDiseaseAssociationMixin
  {
    id: String!
    associationType: OntologyClass
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: NamedThing!
    predicate: PredicateType!
    object: NamedThing!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
  }

type GenotypeToGeneAssociation
  {
    id: String!
    associationType: OntologyClass
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    subject: Genotype!
    object: Gene!
  }

type GenotypeToGenotypePartAssociation
  {
    id: String!
    associationType: OntologyClass
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    subject: Genotype!
    object: Genotype!
  }

type GenotypeToPhenotypicFeatureAssociation implements ThingToPhenotypicFeatureAssociationMixin, GenotypeToThingAssociationMixin
  {
    id: String!
    associationType: OntologyClass
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    subject: Genotype!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    sexQualifier: BiologicalSex
    description: NarrativeText
  }

interface GenotypeToThingAssociationMixin
  {
    subject: Genotype!
  }

type GenotypeToVariantAssociation
  {
    id: String!
    associationType: OntologyClass
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    subject: Genotype!
    object: SequenceVariant!
  }

type GenotypicSex
  {
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    name: LabelType
    iri: IriType
    source: LabelType
  }

type GeographicLocation
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    latitude: Float
    longitude: Float
  }

type GeographicLocationAtTime
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    latitude: Float
    longitude: Float
    timepoint: TimeType
  }

type GrossAnatomicalStructure
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
  }

type Haplotype
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasBiologicalSequence: BiologicalSequence
  }

type IndividualOrganism implements ThingWithTaxon
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
  }

interface InformationContentEntity
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    description: NarrativeText
    license: String
    rights: String
    format: String
    creationDate: Date
  }

type Inheritance
  {
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    name: LabelType
    iri: IriType
    source: LabelType
  }

type LifeStage implements ThingWithTaxon
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
  }

type MacromolecularComplex
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasBiologicalSequence: BiologicalSequence
    name: SymbolType
  }

type MacromolecularMachine
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasBiologicalSequence: BiologicalSequence
    name: SymbolType
  }

type MacromolecularMachineToBiologicalProcessAssociation
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: MacromolecularMachine!
    object: BiologicalProcess!
  }

type MacromolecularMachineToCellularComponentAssociation
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: MacromolecularMachine!
    object: CellularComponent!
  }

type MacromolecularMachineToMolecularActivityAssociation
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: MacromolecularMachine!
    object: MolecularActivity!
  }

type MaterialSample implements SubjectOfInvestigation
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

type MaterialSampleDerivationAssociation
  {
    id: String!
    associationType: OntologyClass
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: MaterialSample!
    object: NamedThing!
    predicate: PredicateType!
  }

type MaterialSampleToDiseaseOrPhenotypicFeatureAssociation implements MaterialSampleToThingAssociation, ThingToDiseaseOrPhenotypicFeatureAssociationMixin
  {
    id: String!
    associationType: OntologyClass
    subject: NamedThing!
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
  }

interface MaterialSampleToThingAssociation
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: MaterialSample!
  }

type Metabolite
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
  }

type MicroRNA
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasBiologicalSequence: BiologicalSequence
    name: SymbolType
    description: NarrativeText
    synonym: [LabelType]
    xref: [IriType]
  }

interface Mixture
  {
    hasConstituent: [ChemicalSubstance]
  }

interface ModelToDiseaseAssociationMixin
  {
    subject: NamedThing!
    predicate: PredicateType!
  }

type MolecularActivity implements Occurrent
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    hasInput: [ChemicalSubstance]
    hasOutput: [ChemicalSubstance]
    enabledBy: [MacromolecularMachine]
  }

type MolecularEntity implements ThingWithTaxon, PhysicalEssence
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
  }

type NamedThing implements ResourceMixin, AttributeMixin
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

type NoncodingRNAProduct
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasBiologicalSequence: BiologicalSequence
    name: SymbolType
    description: NarrativeText
    synonym: [LabelType]
    xref: [IriType]
  }

interface Occurrent
  {
  }

type Onset
  {
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    name: LabelType
    iri: IriType
    source: LabelType
  }

type OntologyClass
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

type OrganismAttribute
  {
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    name: LabelType
    iri: IriType
    source: LabelType
  }

type OrganismTaxon
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

interface OrganismalEntity
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

type OrganismalEntityAsAModelOfDiseaseAssociation implements ModelToDiseaseAssociationMixin, ThingToDiseaseAssociationMixin
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: OrganismalEntity!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
  }

type PairwiseGeneToGeneInteraction
  {
    id: String!
    associationType: OntologyClass
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: GeneOrGeneProduct!
    object: GeneOrGeneProduct!
    predicate: PredicateType!
    relation: Uriorcurie!
  }

type PairwiseMolecularInteraction
  {
    associationType: OntologyClass
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    interactingMoleculesCategory: OntologyClass
    subject: MolecularEntity!
    id: String!
    predicate: PredicateType!
    relation: Uriorcurie!
    object: MolecularEntity!
  }

interface PathognomonicityQuantifier
  {
  }

type Pathway
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    hasInput: [NamedThing]
    hasOutput: [NamedThing]
    enabledBy: [PhysicalEntity]
  }

type Phenomenon implements Occurrent
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

type PhenotypicFeature
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
  }

type PhenotypicSex
  {
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    name: LabelType
    iri: IriType
    source: LabelType
  }

type PhysicalEntity implements PhysicalEssence
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

interface PhysicalEssence
  {
  }

type PhysiologicalProcess
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    hasInput: [NamedThing]
    hasOutput: [NamedThing]
    enabledBy: [PhysicalEntity]
  }

type PlanetaryEntity
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

type PopulationOfIndividualOrganisms implements ThingWithTaxon
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
  }

type PopulationToPopulationAssociation
  {
    id: String!
    associationType: OntologyClass
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: PopulationOfIndividualOrganisms!
    object: PopulationOfIndividualOrganisms!
    predicate: PredicateType!
  }

type Procedure implements ActivityAndBehavior
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

type ProcessedMaterial implements Mixture
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasConstituent: [ChemicalSubstance]
  }

type Protein
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasBiologicalSequence: BiologicalSequence
    name: SymbolType
    description: NarrativeText
    synonym: [LabelType]
    xref: [IriType]
  }

type ProteinIsoform implements GeneProductIsoform
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasBiologicalSequence: BiologicalSequence
    name: SymbolType
    description: NarrativeText
    synonym: [LabelType]
    xref: [IriType]
  }

type Publication
  {
    category: [CategoryType]!
    iri: IriType
    source: LabelType
    hasAttribute: [Attribute]
    description: NarrativeText
    license: String
    rights: String
    format: String
    creationDate: Date
    type: String!
    authors: [String]
    pages: [String]
    summary: String
    keywords: [String]
    meshTerms: [Uriorcurie]
    xref: [IriType]
    id: String!
    name: LabelType
  }

type QuantityValue
  {
    hasUnit: Unit
    hasNumericValue: Double
  }

type ReagentTargetedGene
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasBiologicalSequence: BiologicalSequence
  }

interface RelationshipQuantifier
  {
  }

type RelationshipType
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
  }

interface ResourceMixin
  {
    iri: IriType
    name: LabelType
    source: LabelType
  }

type RNAProduct
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasBiologicalSequence: BiologicalSequence
    name: SymbolType
    description: NarrativeText
    synonym: [LabelType]
    xref: [IriType]
  }

type RNAProductIsoform implements GeneProductIsoform
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasBiologicalSequence: BiologicalSequence
    name: SymbolType
    description: NarrativeText
    synonym: [LabelType]
    xref: [IriType]
  }

interface SensitivityQuantifier
  {
  }

type SequenceAssociation
  {
    id: String!
    associationType: OntologyClass
    subject: NamedThing!
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
  }

type SequenceFeatureRelationship
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: GenomicEntity!
    object: GenomicEntity!
  }

type SequenceVariant
  {
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasGene: [Gene]
    hasBiologicalSequence: BiologicalSequence
    id: String!
  }

interface SequenceVariantModulatesTreatmentAssociation
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: SequenceVariant!
    object: Treatment!
  }

type Serial
  {
    category: [CategoryType]!
    iri: IriType
    source: LabelType
    hasAttribute: [Attribute]
    description: NarrativeText
    license: String
    rights: String
    format: String
    creationDate: Date
    authors: [String]
    pages: [String]
    summary: String
    keywords: [String]
    meshTerms: [Uriorcurie]
    xref: [IriType]
    name: LabelType
    isoAbbreviation: String
    volume: String
    issue: String
    id: String!
    type: String!
  }

type SeverityValue
  {
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    name: LabelType
    iri: IriType
    source: LabelType
  }

type Snv
  {
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasGene: [Gene]
    hasBiologicalSequence: BiologicalSequence
    id: String!
  }

type SourceFile
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    description: NarrativeText
    license: String
    rights: String
    format: String
    creationDate: Date
    sourceVersion: String
    retrievedOn: Date
  }

interface SpecificityQuantifier
  {
  }

interface SubjectOfInvestigation
  {
  }

interface ThingToDiseaseAssociationMixin
  {
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    object: Disease!
  }

interface ThingToDiseaseOrPhenotypicFeatureAssociationMixin
  {
    object: DiseaseOrPhenotypicFeature!
  }

interface ThingToPhenotypicFeatureAssociationMixin
  {
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    sexQualifier: BiologicalSex
    description: NarrativeText
    object: PhenotypicFeature!
  }

interface ThingWithTaxon
  {
    inTaxon: [OrganismTaxon]
  }

type Transcript
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    source: LabelType
    hasAttribute: [Attribute]
    inTaxon: [OrganismTaxon]
    hasBiologicalSequence: BiologicalSequence
    name: SymbolType
    description: NarrativeText
    synonym: [LabelType]
    xref: [IriType]
  }

type TranscriptToGeneRelationship
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: Transcript!
    object: Gene!
  }

type Treatment
  {
    id: String!
    category: [CategoryType]!
    iri: IriType
    name: LabelType
    source: LabelType
    hasAttribute: [Attribute]
    hasPart: [DrugExposure]!
  }

type VariantAsAModelOfDiseaseAssociation implements ModelToDiseaseAssociationMixin, ThingToDiseaseAssociationMixin
  {
    id: String!
    associationType: OntologyClass
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    predicate: PredicateType!
    object: NamedThing!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    subject: SequenceVariant!
  }

type VariantToDiseaseAssociation implements VariantToThingAssociationMixin, ThingToDiseaseAssociationMixin
  {
    id: String!
    associationType: OntologyClass
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: NamedThing!
    predicate: PredicateType!
    object: NamedThing!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
  }

type VariantToPhenotypicFeatureAssociation implements VariantToThingAssociationMixin, ThingToPhenotypicFeatureAssociationMixin
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    object: NamedThing!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: SequenceVariant!
    frequencyQualifier: FrequencyValue
    severityQualifier: SeverityValue
    onsetQualifier: Onset
    sexQualifier: BiologicalSex
    description: NarrativeText
  }

type VariantToPopulationAssociation implements VariantToThingAssociationMixin, FrequencyQuantifier, FrequencyQualifierMixin
  {
    id: String!
    associationType: OntologyClass
    predicate: PredicateType!
    relation: Uriorcurie!
    negated: Boolean
    qualifiers: [OntologyClass]
    publications: [Publication]
    providedBy: [Agent]
    hasAttribute: [Attribute]
    subject: SequenceVariant!
    object: PopulationOfIndividualOrganisms!
    hasQuotient: Double
    hasCount: Integer
    hasTotal: Integer
    hasPercentage: Double
    frequencyQualifier: FrequencyValue
  }

interface VariantToThingAssociationMixin
  {
    subject: SequenceVariant!
  }

type Zygosity
  {
    hasAttributeType: OntologyClass!
    hasQuantitativeValue: [QuantityValue]
    hasQualitativeValue: NamedThing
    name: LabelType
    iri: IriType
    source: LabelType
  }


