# <strong> Slot: {{ gen.name(element) }} </strong> {% if element.deprecated %} <span style="color: red;"><strong> (DEPRECATED) </strong></span> {% endif %}{% if element.abstract %}<span style="color: purple;"><strong><small> (Abstract) </small></strong></span> {% endif %}{% if element.multivalued %} (multivalued){% endif -%}
{% if element.description or element.aliases or element.required or element.inverse %}
<div class="highlight-box">{% if element.description %}<strong>Description:</strong><i> {{ element.description }}</i><br>{% endif %}
  {% if element.aliases %} <strong>Aliases:</strong> {{ element.aliases | join(', ') }}<br>{% endif -%}
  {% if element.required %} <strong>Required:</strong> {{ element.required }}<br>{% endif %}
  {% if element.inverse %}<strong>Inverse:</strong> {{ element.inverse }}</a></small><br>{% endif %}
<br>
 {% if element.notes %}<strong> Notes:</strong> {{ element.notes|join(' ') }} {% endif %}
</div>
{% endif %}

{% if element.domain %}<strong>Domain:</strong> {{ gen.link(schemaview.get_element(element.domain)) }}<br>{% endif %}
{% if element.range %}<strong>Range:</strong>   {{ gen.link(schemaview.get_element(element.range)) }} <br>{% endif %}

{% if schemaview.slot_parents(element.name) or schemaview.slot_children(element.name, mixins=False) %}

{% if gen.example_object_blobs(element.name) -%}
## Examples:
{% for name, blob in gen.example_object_blobs(element.name) -%}
## Example: {{name}}
```yaml
{{ blob }}
```
{% endfor %}
{% endif %}
## Inheritance

{{ gen.inheritance_tree(element, mixins=True) }}
{% else %}
<!-- no inheritance hierarchy -->
{% endif %}

{% if schemaview.get_classes_by_slot(element, include_induced=False) %}

## Applicable Classes

| Name | Description | Modifies Slot |
| --- | --- | --- |
{% for c in schemaview.get_classes_by_slot(element, include_induced=False) -%}
{{ gen.link(c) }} | {{ schemaview.get_class(c).description }} | {% if c in schemaview.get_classes_modifying_slot(element) %} yes {% else %} no {% endif %} |
{% endfor %}

{% endif %}


{% if schemaview.is_mixin(element.name) %}
## Mixin Usage

| mixed into | description | range | domain |
| --- | --- | --- | --- |
{% for s in schemaview.slot_children(element.name, is_a=False) -%}
| {{ gen.link(s) }} | {{ schemaview.get_slot(s).description }} | {{ schemaview.get_slot(s).range }} | {{ schemaview.get_classes_by_slot(schemaview.get_slot(s))|join(', ') }} |
{% endfor %}
{% endif %}


{% if schemaview.usage_index().get(element.name) %}
## Usages

| used by | used in | type | used |
| ---  | --- | --- | --- |
{% for usage in schemaview.usage_index().get(element.name) -%}
| {{gen.link(usage.used_by)}} | {{gen.link(usage.slot)}} | {{usage.metaslot}} | {{ gen.link(usage.used) }} |
{% endfor %}
{% endif %}

{% include "common_metadata.md.jinja2" %}

## LinkML Source

<details open>
```yaml
{{ gen.yaml(element) }}
```
</details>

{%- if footer -%}
{{footer}}
{%- endif -%}