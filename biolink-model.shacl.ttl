@prefix biolink: <https://w3id.org/biolink/vocab/> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema1: <http://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

biolink:AccessibleDnaRegion a sh:NodeShape ;
    sh:closed true ;
    sh:description "A region (or regions) of a chromatinized genome that has been measured to be more accessible to an enzyme such as DNase-I or Tn5 Transpose" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdf:type ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "connects a genomic feature to its sequence" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:has_biological_sequence ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ] ;
    sh:targetClass biolink:AccessibleDnaRegion .

biolink:Activity a sh:NodeShape ;
    sh:closed true ;
    sh:description "An activity is something that occurs over a period of time and acts upon or with entities; it may include consuming, processing, transforming, modifying, relocating, using, or generating entities." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ] ;
    sh:targetClass biolink:Activity .

biolink:ActivityAndBehavior a sh:NodeShape ;
    sh:closed false ;
    sh:description "Activity or behavior of any independent integral living, organization or mechanical actor in the world" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:ActivityAndBehavior .

biolink:AdministrativeEntity a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( biolink:affiliation rdf:type biolink:address ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:synonym ] ;
    sh:targetClass biolink:AdministrativeEntity .

biolink:AnatomicalEntityToAnatomicalEntityAssociation a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ] ;
    sh:targetClass biolink:AnatomicalEntityToAnatomicalEntityAssociation .

biolink:AnatomicalEntityToAnatomicalEntityOntogenicAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "A relationship between two anatomical entities where the relationship is ontogenic, i.e. the two entities are related by development. A number of different relationship types can be used to specify the precise nature of the relationship." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:description "the structure at an earlier time" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:description "the structure at a later time" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ] ;
    sh:targetClass biolink:AnatomicalEntityToAnatomicalEntityOntogenicAssociation .

biolink:AnatomicalEntityToAnatomicalEntityPartOfAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "A relationship between two anatomical entities where the relationship is mereological, i.e the two entities are related by parthood. This includes relationships between cellular components and cells, between cells and tissues, tissues and whole organisms" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:description "the part" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:description "the whole" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ] ;
    sh:targetClass biolink:AnatomicalEntityToAnatomicalEntityPartOfAssociation .

biolink:Annotation a sh:NodeShape ;
    sh:closed false ;
    sh:description "Biolink Model root class for entity annotations." ;
    sh:ignoredProperties ( biolink:has_unit biolink:has_numeric_value rdf:type ) ;
    sh:targetClass biolink:Annotation .

biolink:Article a sh:NodeShape ;
    sh:closed true ;
    sh:description "a piece of writing on a particular topic presented as a stand-alone section of a larger publication" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 24 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:string ;
            sh:description "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass." ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path dct:type ],
        [ sh:datatype xsd:string ;
            sh:description "Different kinds of publication subtypes will have different preferred identifiers (curies when feasible). Precedence of identifiers for scientific articles is as follows: PMID if available; DOI if not; actual alternate CURIE otherwise. Enclosing publications (i.e. referenced by 'published in' node property) such as books and journals, should have industry-standard identifier such as from ISBN and ISSN." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "volume of a book or music release in a collection/series or a published collection of journal issues in a serial publication" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:volume ],
        [ sh:datatype xsd:anyURI ;
            sh:description "The enclosing parent serial containing the article should have industry-standard identifier from ISSN." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:published_in ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:description "Optional value, if used locally as a convenience, is set to the iso abbreviation of the 'published in' parent." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:iso_abbreviation ],
        [ sh:datatype xsd:string ;
            sh:description "executive  summary of a publication" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:summary ],
        [ sh:datatype xsd:string ;
            sh:description "keywords tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:keywords ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:xref ],
        [ sh:class biolink:Agent ;
            sh:description "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication." ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:authors ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:pages ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:string ;
            sh:description "issue of a newspaper, a scientific journal or magazine for reference purpose" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:issue ],
        [ sh:datatype xsd:anyURI ;
            sh:description "mesh terms tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:mesh_terms ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:deprecated ] ;
    sh:targetClass biolink:Article .

biolink:Association a sh:NodeShape ;
    sh:closed true ;
    sh:description "A typed association between two entities, supported by evidence" ;
    sh:ignoredProperties ( biolink:subject_context_qualifier biolink:anatomical_context_qualifier biolink:expression_site biolink:has_percentage biolink:stage_qualifier biolink:has_quotient biolink:frequency_qualifier biolink:associated_environmental_context biolink:end_interbase_coordinate biolink:object_form_or_variant_qualifier biolink:object_direction_qualifier biolink:object_part_qualifier biolink:object_specialization_qualifier biolink:catalyst_qualifier biolink:sex_qualifier biolink:strand biolink:qualified_predicate biolink:genome_build biolink:clinical_approval_status biolink:phase biolink:max_research_phase biolink:has_total biolink:object_aspect_qualifier biolink:quantifier_qualifier biolink:species_context_qualifier biolink:causal_mechanism_qualifier biolink:subject_aspect_qualifier biolink:reaction_side biolink:population_context_qualifier biolink:stoichiometry biolink:onset_qualifier biolink:temporal_context_qualifier biolink:disease_context_qualifier biolink:phenotypic_state biolink:FDA_adverse_event_level biolink:subject_derivative_qualifier biolink:subject_form_or_variant_qualifier biolink:object_derivative_qualifier biolink:subject_specialization_qualifier biolink:subject_part_qualifier biolink:has_count biolink:start_interbase_coordinate biolink:subject_direction_qualifier biolink:interacting_molecules_category biolink:reaction_direction biolink:object_context_qualifier rdf:type ) ;
    sh:property [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ] ;
    sh:targetClass biolink:Association .

biolink:Bacterium a sh:NodeShape ;
    sh:closed true ;
    sh:description "A member of a group of unicellular microorganisms lacking a nuclear membrane, that reproduce by binary fission and are often motile." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ] ;
    sh:targetClass biolink:Bacterium .

biolink:BehaviorToBehavioralFeatureAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An association between an mixture behavior and a behavioral feature manifested by the individual exhibited or has exhibited the behavior." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 47 ;
            sh:path biolink:has_percentage ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 53 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 48 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:class biolink:BiologicalSex ;
            sh:description "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:sex_qualifier ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 35 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:negated ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 49 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 32 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path biolink:has_quotient ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path dct:description ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 16 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:object_specialization_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 26 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 42 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:integer ;
            sh:description "total number of things in a particular reference set" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:has_total ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:subject_specialization_qualifier ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:knowledge_source ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 17 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path rdf:type ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 11 ;
            sh:path biolink:publications ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:integer ;
            sh:description "number of things with a particular property" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 44 ;
            sh:path biolink:has_count ],
        [ sh:class biolink:BehavioralFeature ;
            sh:description "behavioral feature that is the object of the association" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 50 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 51 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:Behavior ;
            sh:description "behavior that is the subject of the association" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 52 ;
            sh:path biolink:qualified_predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:original_object ] ;
    sh:targetClass biolink:BehaviorToBehavioralFeatureAssociation .

biolink:BehavioralExposure a sh:NodeShape ;
    sh:closed true ;
    sh:description "A behavioral exposure is a factor relating to behavior impacting an individual." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:has_attribute_type ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 3 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ] ;
    sh:targetClass biolink:BehavioralExposure .

biolink:BehavioralOutcome a sh:NodeShape ;
    sh:closed true ;
    sh:description "An outcome resulting from an exposure event which is the manifestation of human behavior." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:BehavioralOutcome .

biolink:BiologicalEntity a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( biolink:enabled_by biolink:has_output biolink:has_zygosity biolink:has_gene_or_gene_product biolink:symbol biolink:has_biological_sequence biolink:has_gene rdf:type biolink:has_input ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ] ;
    sh:targetClass biolink:BiologicalEntity .

biolink:BiologicalProcessOrActivity a sh:NodeShape ;
    sh:closed true ;
    sh:description "Either an individual molecular activity, or a collection of causally connected molecular activities in a biological system." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:NamedThing ;
            sh:description "holds between a process and a continuant, where the continuant is an output of the process" ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_output ],
        [ sh:class biolink:PhysicalEntity ;
            sh:description "holds between a process and a physical entity, where the physical entity executes the process" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:enabled_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path dct:description ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:in_taxon ],
        [ sh:class biolink:NamedThing ;
            sh:description "holds between a process and a continuant, where the continuant is an input into the process" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:has_input ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 15 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:iri ] ;
    sh:targetClass biolink:BiologicalProcessOrActivity .

biolink:BioticExposure a sh:NodeShape ;
    sh:closed true ;
    sh:description "An external biotic exposure is an intake of (sometimes pathological) biological organisms (including viruses)." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:xref ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 3 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ] ;
    sh:targetClass biolink:BioticExposure .

biolink:Book a sh:NodeShape ;
    sh:closed true ;
    sh:description "This class may rarely be instantiated except if use cases of a given knowledge graph support its utility." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "Books should have industry-standard identifier such as from ISBN." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass." ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path dct:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "mesh terms tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:mesh_terms ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "Should generally be set to an ontology class defined term for 'book'." ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:string ;
            sh:description "keywords tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:keywords ],
        [ sh:datatype xsd:string ;
            sh:description "executive  summary of a publication" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:summary ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:string ;
            sh:description "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path dct:description ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 20 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Agent ;
            sh:description "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication." ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:authors ],
        [ sh:datatype xsd:string ;
            sh:description "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:pages ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:category ] ;
    sh:targetClass biolink:Book .

biolink:BookChapter a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "keywords tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:keywords ],
        [ sh:datatype xsd:string ;
            sh:description "chapter of a book" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:chapter ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:anyURI ;
            sh:description "mesh terms tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:mesh_terms ],
        [ sh:datatype xsd:anyURI ;
            sh:description "The enclosing parent book containing the chapter should have industry-standard identifier from ISBN." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:published_in ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:Agent ;
            sh:description "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication." ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:authors ],
        [ sh:datatype xsd:string ;
            sh:description "Different kinds of publication subtypes will have different preferred identifiers (curies when feasible). Precedence of identifiers for scientific articles is as follows: PMID if available; DOI if not; actual alternate CURIE otherwise. Enclosing publications (i.e. referenced by 'published in' node property) such as books and journals, should have industry-standard identifier such as from ISBN and ISSN." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass." ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:type ],
        [ sh:datatype xsd:string ;
            sh:description "executive  summary of a publication" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:summary ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:pages ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path rdf:type ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "volume of a book or music release in a collection/series or a published collection of journal issues in a serial publication" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:volume ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:rights ] ;
    sh:targetClass biolink:BookChapter .

biolink:CaseToEntityAssociationMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "An abstract association for use where the case is the subject" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:Case ;
            sh:description "the case (e.g. patient) that has the property" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ] ;
    sh:targetClass biolink:CaseToEntityAssociationMixin .

biolink:CaseToPhenotypicFeatureAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An association between a case (e.g. individual patient) and a phenotypic feature in which the individual has or has had the phenotype." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:original_subject ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 49 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 47 ;
            sh:path biolink:has_percentage ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 50 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 53 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 48 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 52 ;
            sh:path biolink:qualified_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 32 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path biolink:iri ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 11 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path dct:description ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 51 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:object_specialization_qualifier ],
        [ sh:datatype xsd:integer ;
            sh:description "total number of things in a particular reference set" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:has_total ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:integer ;
            sh:description "number of things with a particular property" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 44 ;
            sh:path biolink:has_count ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:BiologicalSex ;
            sh:description "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:sex_qualifier ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 16 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 35 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:class biolink:Case ;
            sh:description "the case (e.g. patient) that has the property" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:subject_specialization_qualifier ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path biolink:has_quotient ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 42 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 26 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:PhenotypicFeature ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 17 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_evidence ] ;
    sh:targetClass biolink:CaseToPhenotypicFeatureAssociation .

biolink:CausalGeneToDiseaseAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 42 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 19 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 34 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:object_specialization_qualifier ],
        [ sh:datatype xsd:integer ;
            sh:description "total number of things in a particular reference set" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 47 ;
            sh:path biolink:has_total ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 29 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:id ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:publications ],
        [ sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:in ( "activity_or_abundance" "abundance" "activity" "expression" "synthesis" "degradation" "cleavage" "hydrolysis" "metabolic_processing" "mutation_rate" "stability" "folding" "localization" "transport" "absorption" "aggregation" "interaction" "release" "secretion" "uptake" "splicing" "molecular_interaction" "molecular_modification" "acetylation" "acylation" "alkylation" "amination" "carbamoylation" "ethylation" "glutathionylation" "glycation" "glycosylation" "glucuronidation" "n_linked_glycosylation" "o_linked_glycosylation" "hydroxylation" "lipidation" "farnesylation" "geranoylation" "myristoylation" "palmitoylation" "prenylation" "methylation" "nitrosation" "nucleotidylation" "phosphorylation" "ribosylation" "ADP-ribosylation" "sulfation" "sumoylation" "ubiquitination" "oxidation" "reduction" "carboxylation" ) ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 48 ;
            sh:path biolink:has_quotient ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 51 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:class biolink:BiologicalSex ;
            sh:description "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:sex_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 24 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:subject_specialization_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path dct:description ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 44 ;
            sh:path biolink:has_attribute ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 50 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 18 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 49 ;
            sh:path biolink:has_percentage ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 53 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 52 ;
            sh:path biolink:qualified_predicate ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:class biolink:Disease ;
            sh:description "disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 28 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path rdf:type ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "gene in which variation is shown to cause the disease." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:integer ;
            sh:description "number of things with a particular property" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path biolink:has_count ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 25 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:original_object ] ;
    sh:targetClass biolink:CausalGeneToDiseaseAssociation .

biolink:Cell a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ] ;
    sh:targetClass biolink:Cell .

biolink:CellLineAsAModelOfDiseaseAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:class biolink:Disease ;
            sh:description "disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "The relationship to the disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:CellLine ;
            sh:description "A cell line derived from an organismal entity with a disease state that is used as a model of that disease." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 40 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path biolink:qualified_predicate ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 42 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 44 ;
            sh:path biolink:disease_context_qualifier ] ;
    sh:targetClass biolink:CellLineAsAModelOfDiseaseAssociation .

biolink:CellLineToDiseaseOrPhenotypicFeatureAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An relationship between a cell line and a disease or a phenotype, where the cell line is derived from an individual with that disease or phenotype." ;
    sh:ignoredProperties ( biolink:object_aspect_qualifier biolink:subject_aspect_qualifier biolink:subject_direction_qualifier biolink:frequency_qualifier rdf:type biolink:qualified_predicate biolink:object_direction_qualifier biolink:disease_context_qualifier ) ;
    sh:property [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:DiseaseOrPhenotypicFeature ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:DiseaseOrPhenotypicFeature ;
            sh:description "disease or phenotype" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ] ;
    sh:targetClass biolink:CellLineToDiseaseOrPhenotypicFeatureAssociation .

biolink:CellLineToEntityAssociationMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "An relationship between a cell line and another entity" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:CellLine ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ] ;
    sh:targetClass biolink:CellLineToEntityAssociationMixin .

biolink:CellularOrganism a sh:NodeShape ;
    sh:closed true ;
    sh:description "" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ] ;
    sh:targetClass biolink:CellularOrganism .

biolink:ChemicalAffectsGeneAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "Describes an effect that a chemical has on a gene or gene product (e.g. an impact of on its abundance, activity,localization, processing, expression, etc.)" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:original_predicate ],
        [ sh:description "A statement qualifier representing a type of molecular control mechanism through which an effect of a chemical on a gene or gene product is mediated (e.g. 'agonism', 'inhibition', 'allosteric modulation', 'channel blocker')" ;
            sh:in ( "binding" "inhibition" "antibody_inhibition" "antagonism" "molecular_channel_blockage" "inverse_agonism" "negative_allosteric_modulation" "agonism" "molecular_channel_opening" "positive_allosteric_modulation" "potentiation" "activation" "inducer" "transcriptional_regulation" "signaling_mediated_control" "stabilization" "stimulation" "releasing_activity" ) ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path biolink:causal_mechanism_qualifier ],
        [ sh:description "A qualifier that composes with a core subject/object concept to define a specific type, variant, alternative version of this concept. The composed concept remains a subtype or instance of the core concept. For example, the qualifier ‘mutation’ combines with the core concept ‘Gene X’ to express the compose concept ‘a mutation of Gene X’.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:in ( "genetic_variant_form" "modified_form" "loss_of_function_variant_form" "gain_of_function_variant_form" "polymorphic_form" "snp_form" "analog_form" ) ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path biolink:object_form_or_variant_qualifier ],
        [ sh:description "A qualifier that composes with a core subject/object concept to define a specific type, variant, alternative version of this concept. The composed concept remains a subtype or instance of the core concept. For example, the qualifier ‘mutation’ combines with the core concept ‘Gene X’ to express the compose concept ‘a mutation of Gene X’.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:in ( "genetic_variant_form" "modified_form" "loss_of_function_variant_form" "gain_of_function_variant_form" "polymorphic_form" "snp_form" "analog_form" ) ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path biolink:subject_form_or_variant_qualifier ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 32 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 53 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 47 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:ChemicalEntity ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 15 ;
            sh:path rdf:subject ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 51 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 42 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 49 ;
            sh:path rdf:type ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "A statement qualifier representing a taxonomic category of species in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:species_context_qualifier ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:in ( "activity_or_abundance" "abundance" "activity" "expression" "synthesis" "degradation" "cleavage" "hydrolysis" "metabolic_processing" "mutation_rate" "stability" "folding" "localization" "transport" "absorption" "aggregation" "interaction" "release" "secretion" "uptake" "splicing" "molecular_interaction" "molecular_modification" "acetylation" "acylation" "alkylation" "amination" "carbamoylation" "ethylation" "glutathionylation" "glycation" "glycosylation" "glucuronidation" "n_linked_glycosylation" "o_linked_glycosylation" "hydroxylation" "lipidation" "farnesylation" "geranoylation" "myristoylation" "palmitoylation" "prenylation" "methylation" "nitrosation" "nucleotidylation" "phosphorylation" "ribosylation" "ADP-ribosylation" "sulfation" "sumoylation" "ubiquitination" "oxidation" "reduction" "carboxylation" ) ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:description "A qualifier that composes with a core subject/object  concept to describe something that is derived from the core concept.  For example, the qualifier ‘metabolite’ combines with a ‘Chemical X’ core concept to express the composed concept ‘a metabolite of Chemical X’.  This qualifier is for the subject of an association  (or statement)." ;
            sh:in ( "metabolite" ) ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path biolink:subject_derivative_qualifier ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 26 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 52 ;
            sh:path biolink:has_attribute ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 27 ;
            sh:path biolink:agent_type ],
        [ sh:description "defines a specific part/component of the core concept (used in cases there this specific part has no IRI we can use to directly represent it, e.g. 'ESR1 transcript' q: polyA tail).  This qualifier is for the  object of an association (or statement)." ;
            sh:in ( "3_prime_utr" "5_prime_utr" "polya_tail" "promoter" "enhancer" "exon" "intron" ) ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path biolink:object_part_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 48 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:qualified_predicate ],
        [ sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:in ( "activity_or_abundance" "abundance" "activity" "expression" "synthesis" "degradation" "cleavage" "hydrolysis" "metabolic_processing" "mutation_rate" "stability" "folding" "localization" "transport" "absorption" "aggregation" "interaction" "release" "secretion" "uptake" "splicing" "molecular_interaction" "molecular_modification" "acetylation" "acylation" "alkylation" "amination" "carbamoylation" "ethylation" "glutathionylation" "glycation" "glycosylation" "glucuronidation" "n_linked_glycosylation" "o_linked_glycosylation" "hydroxylation" "lipidation" "farnesylation" "geranoylation" "myristoylation" "palmitoylation" "prenylation" "methylation" "nitrosation" "nucleotidylation" "phosphorylation" "ribosylation" "ADP-ribosylation" "sulfation" "sumoylation" "ubiquitination" "oxidation" "reduction" "carboxylation" ) ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 36 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 33 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 45 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 44 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:timepoint ],
        [ sh:description "defines a specific part/component of the core concept (used in cases there this specific part has no IRI we can use to directly represent it, e.g. 'ESR1 transcript' q: polyA tail).  This qualifier is for the  subject of an association (or statement)." ;
            sh:in ( "3_prime_utr" "5_prime_utr" "polya_tail" "promoter" "enhancer" "exon" "intron" ) ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path biolink:subject_part_qualifier ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:subject_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:publications ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 9 ;
            sh:path biolink:object_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 50 ;
            sh:path rdfs:label ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 17 ;
            sh:path rdf:object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 20 ;
            sh:path biolink:qualifiers ] ;
    sh:targetClass biolink:ChemicalAffectsGeneAssociation .

biolink:ChemicalEntityAssessesNamedThingAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:class biolink:ChemicalEntity ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ] ;
    sh:targetClass biolink:ChemicalEntityAssessesNamedThingAssociation .

biolink:ChemicalEntityOrGeneOrGeneProductRegulatesGeneAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "A regulatory relationship between two genes" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:has_evidence ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 13 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "the direction is always from regulator to regulated" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 31 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:id ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 38 ;
            sh:path biolink:has_attribute ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:publications ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:object_category_closure ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 3 ;
            sh:path rdf:object ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 28 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:ChemicalEntityOrGeneOrGeneProduct ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 1 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:qualifier ] ;
    sh:targetClass biolink:ChemicalEntityOrGeneOrGeneProductRegulatesGeneAssociation .

biolink:ChemicalEntityOrProteinOrPolypeptide a sh:NodeShape ;
    sh:closed false ;
    sh:description "A union of chemical entities and children, and protein and polypeptide. This mixin is helpful to use when searching across chemical entities that must include genes and their children as chemical entities." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:ChemicalEntityOrProteinOrPolypeptide .

biolink:ChemicalEntityToEntityAssociationMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "An interaction between a chemical entity and another entity" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:ChemicalEntityOrGeneOrGeneProduct ;
            sh:description "the chemical entity that is an interactor" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ] ;
    sh:targetClass biolink:ChemicalEntityToEntityAssociationMixin .

biolink:ChemicalExposure a sh:NodeShape ;
    sh:closed true ;
    sh:description "A chemical exposure is an intake of a particular chemical entity." ;
    sh:ignoredProperties ( biolink:has_gene_or_gene_product rdf:type ) ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:xref ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path rdfs:label ] ;
    sh:targetClass biolink:ChemicalExposure .

biolink:ChemicalGeneInteractionAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "describes a physical interaction between a chemical entity and a gene or gene product. Any biological or chemical effect resulting from such an interaction are out of scope, and covered by the ChemicalAffectsGeneAssociation type (e.g. impact of a chemical on the abundance, activity, structure, etc, of either participant in the interaction)" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path rdfs:label ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:subject_context_qualifier ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 35 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 45 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:qualifiers ],
        [ sh:description "A qualifier that composes with a core subject/object concept to define a specific type, variant, alternative version of this concept. The composed concept remains a subtype or instance of the core concept. For example, the qualifier ‘mutation’ combines with the core concept ‘Gene X’ to express the compose concept ‘a mutation of Gene X’.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:in ( "genetic_variant_form" "modified_form" "loss_of_function_variant_form" "gain_of_function_variant_form" "polymorphic_form" "snp_form" "analog_form" ) ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path biolink:subject_form_or_variant_qualifier ],
        [ sh:description "A qualifier that composes with a core subject/object  concept to describe something that is derived from the core concept.  For example, the qualifier ‘metabolite’ combines with a ‘Chemical X’ core concept to express the composed concept ‘a metabolite of Chemical X’.  This qualifier is for the subject of an association  (or statement)." ;
            sh:in ( "metabolite" ) ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path biolink:subject_derivative_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:object_context_qualifier ],
        [ sh:class biolink:ChemicalEntity ;
            sh:description "the chemical entity or entity that is an interactor" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path rdf:subject ],
        [ sh:description "defines a specific part/component of the core concept (used in cases there this specific part has no IRI we can use to directly represent it, e.g. 'ESR1 transcript' q: polyA tail).  This qualifier is for the  subject of an association (or statement)." ;
            sh:in ( "3_prime_utr" "5_prime_utr" "polya_tail" "promoter" "enhancer" "exon" "intron" ) ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path biolink:subject_part_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:object_label_closure ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 19 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 42 ;
            sh:path rdf:type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 25 ;
            sh:path biolink:subject_category ],
        [ sh:description "defines a specific part/component of the core concept (used in cases there this specific part has no IRI we can use to directly represent it, e.g. 'ESR1 transcript' q: polyA tail).  This qualifier is for the  object of an association (or statement)." ;
            sh:in ( "3_prime_utr" "5_prime_utr" "polya_tail" "promoter" "enhancer" "exon" "intron" ) ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path biolink:object_part_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 44 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:timepoint ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 20 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 10 ;
            sh:path rdf:object ],
        [ sh:description "A qualifier that composes with a core subject/object concept to define a specific type, variant, alternative version of this concept. The composed concept remains a subtype or instance of the core concept. For example, the qualifier ‘mutation’ combines with the core concept ‘Gene X’ to express the compose concept ‘a mutation of Gene X’.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:in ( "genetic_variant_form" "modified_form" "loss_of_function_variant_form" "gain_of_function_variant_form" "polymorphic_form" "snp_form" "analog_form" ) ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path biolink:object_form_or_variant_qualifier ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path biolink:category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 29 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 15 ;
            sh:path biolink:has_evidence ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 38 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 26 ;
            sh:path biolink:object_category ] ;
    sh:targetClass biolink:ChemicalGeneInteractionAssociation .

biolink:ChemicalMixture a sh:NodeShape ;
    sh:closed true ;
    sh:description "A chemical mixture is a chemical entity composed of two or more molecular entities." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path rdf:type ],
        [ sh:class biolink:ChemicalRole ;
            sh:description "A role is particular behaviour which a chemical entity may exhibit." ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:has_chemical_role ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:xref ],
        [ sh:description "the method or process of administering a pharmaceutical compound to achieve a therapeutic effect in humans or animals." ;
            sh:in ( "inhalation" "oral" "absorption_through_the_skin" "intravenous_injection" ) ;
            sh:order 3 ;
            sh:path biolink:routes_of_delivery ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:boolean ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:is_toxic ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:trade_name ],
        [ sh:description "An agglomeration of drug regulatory status worldwide. Not specific to FDA." ;
            sh:in ( "discovery_and_development_phase" "preclinical_research_phase" "fda_clinical_research_phase" "fda_review_phase_4" "fda_post_market_safety_review" "fda_clinical_research_phase_1" "fda_clinical_research_phase_2" "fda_clinical_research_phase_3" "fda_clinical_research_phase_4" "fda_fast_track" "fda_breakthrough_therapy" "fda_accelerated_approval" "fda_priority_review" "regular_fda_approval" "post_approval_withdrawal" ) ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path biolink:drug_regulatory_status_world_wide ],
        [ sh:datatype xsd:string ;
            sh:description "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:max_tolerated_dose ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:is_supplement ],
        [ sh:description "" ;
            sh:in ( "over_the_counter" "prescription" ) ;
            sh:order 5 ;
            sh:path biolink:available_from ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:provided_by ],
        [ sh:description "Should be the highest level of FDA approval this chemical entity or device has, regardless of which disease, condition or phenotype it is currently being reviewed to treat.  For specific levels of FDA approval for a specific condition, disease, phenotype, etc., see the association slot, 'clinical approval status.'" ;
            sh:in ( "discovery_and_development_phase" "preclinical_research_phase" "fda_clinical_research_phase" "fda_review_phase_4" "fda_post_market_safety_review" "fda_clinical_research_phase_1" "fda_clinical_research_phase_2" "fda_clinical_research_phase_3" "fda_clinical_research_phase_4" "fda_fast_track" "fda_breakthrough_therapy" "fda_accelerated_approval" "fda_priority_review" "regular_fda_approval" "post_approval_withdrawal" ) ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path biolink:highest_FDA_approval_status ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:iri ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:has_attribute ] ;
    sh:targetClass biolink:ChemicalMixture .

biolink:ChemicalOrDrugOrTreatment a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:ChemicalOrDrugOrTreatment .

biolink:ChemicalOrDrugOrTreatmentSideEffectDiseaseOrPhenotypicFeatureAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "This association defines a relationship between a chemical or treatment (or procedure) and a disease or phenotypic feature where the disesae or phenotypic feature is a secondary, typically (but not always) undesirable effect." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 18 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 29 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 34 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path rdf:type ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 19 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:negated ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:publications ],
        [ sh:description "" ;
            sh:in ( "life_threatening_adverse_event" "serious_adverse_event" "suspected_adverse_reaction" "unexpected_adverse_event" ) ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path biolink:FDA_adverse_event_level ],
        [ sh:class biolink:ChemicalEntityOrGeneOrGeneProduct ;
            sh:description "the chemical entity or entity that is an interactor" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path biolink:category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path dct:description ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 25 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 28 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:qualified_predicate ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 24 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 44 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 9 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 42 ;
            sh:path rdfs:label ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:iri ],
        [ sh:class biolink:DiseaseOrPhenotypicFeature ;
            sh:description "disease or phenotype" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ] ;
    sh:targetClass biolink:ChemicalOrDrugOrTreatmentSideEffectDiseaseOrPhenotypicFeatureAssociation .

biolink:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "This association defines a relationship between a chemical or treatment (or procedure) and a disease or phenotypic feature where the disease or phenotypic feature is a secondary undesirable effect." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:subject_closure ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 28 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:knowledge_source ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 19 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 9 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 25 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:qualifiers ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 18 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 29 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:ChemicalEntityOrGeneOrGeneProduct ;
            sh:description "the chemical entity or entity that is an interactor" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 1 ;
            sh:path rdf:subject ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:qualified_predicate ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 42 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 44 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 34 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:description "" ;
            sh:in ( "life_threatening_adverse_event" "serious_adverse_event" "suspected_adverse_reaction" "unexpected_adverse_event" ) ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path biolink:FDA_adverse_event_level ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 24 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:publications ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_evidence ],
        [ sh:class biolink:DiseaseOrPhenotypicFeature ;
            sh:description "disease or phenotype" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path rdf:object ] ;
    sh:targetClass biolink:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation .

biolink:ChemicalToChemicalAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "A relationship between two chemical entities. This can encompass actual interactions as well as temporal causal edges, e.g. one chemical converted to another." ;
    sh:ignoredProperties ( biolink:reaction_side biolink:catalyst_qualifier biolink:stoichiometry biolink:reaction_direction rdf:type ) ;
    sh:property [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:ChemicalEntity ;
            sh:description "the chemical element that is the target of the statement" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:ChemicalEntityOrGeneOrGeneProduct ;
            sh:description "the chemical entity or entity that is an interactor" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ] ;
    sh:targetClass biolink:ChemicalToChemicalAssociation .

biolink:ChemicalToChemicalDerivationAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "A causal relationship between two chemical entities, where the subject represents the upstream entity and the object represents the downstream. For any such association there is an implicit reaction: IF R has-input C1 AND R has-output C2 AND R enabled-by P AND R type Reaction THEN C1 derives-into C2 catalyst qualifier P" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 31 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:negated ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:iri ],
        [ sh:class biolink:ChemicalEntity ;
            sh:description "the upstream chemical entity" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:ChemicalEntity ;
            sh:description "the downstream chemical entity" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path rdf:object ],
        [ sh:class biolink:MacromolecularMachineMixin ;
            sh:description "this connects the derivation edge to the chemical entity that catalyzes the reaction that causes the subject chemical to transform into the object chemical." ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path biolink:catalyst_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 28 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:deprecated ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 13 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 38 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:timepoint ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:knowledge_level ] ;
    sh:targetClass biolink:ChemicalToChemicalDerivationAssociation .

biolink:ChemicalToDiseaseOrPhenotypicFeatureAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An interaction between a chemical entity and a phenotype or disease, where the presence of the chemical gives rise to or exacerbates the phenotype." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:DiseaseOrPhenotypicFeature ;
            sh:description "the disease or phenotype that is affected by the chemical" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:ChemicalEntityOrGeneOrGeneProduct ;
            sh:description "the chemical entity or entity that is an interactor" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ] ;
    sh:targetClass biolink:ChemicalToDiseaseOrPhenotypicFeatureAssociation .

biolink:ChemicalToEntityAssociationMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "An interaction between a chemical entity and another entity" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:ChemicalEntityOrGeneOrGeneProduct ;
            sh:description "the chemical entity or entity that is an interactor" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ] ;
    sh:targetClass biolink:ChemicalToEntityAssociationMixin .

biolink:ChemicalToPathwayAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An interaction between a chemical entity and a biological process or pathway." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:class biolink:Pathway ;
            sh:description "the pathway that is affected by the chemical" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:class biolink:ChemicalEntity ;
            sh:description "the chemical entity that is affecting the pathway" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ] ;
    sh:targetClass biolink:ChemicalToPathwayAssociation .

biolink:ChiSquaredAnalysisResult a sh:NodeShape ;
    sh:closed true ;
    sh:description "A result of a chi squared analysis." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ] ;
    sh:targetClass biolink:ChiSquaredAnalysisResult .

biolink:ClinicalCourse a sh:NodeShape ;
    sh:closed true ;
    sh:description "The course a disease typically takes from its onset, progression in time, and eventual resolution or death of the affected individual" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:id ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:iri ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ] ;
    sh:targetClass biolink:ClinicalCourse .

biolink:ClinicalEntity a sh:NodeShape ;
    sh:closed true ;
    sh:description "Any entity or process that exists in the clinical domain and outside the biological realm. Diseases are placed under biological entities" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdfs:label ] ;
    sh:targetClass biolink:ClinicalEntity .

biolink:ClinicalFinding a sh:NodeShape ;
    sh:closed true ;
    sh:description "this category is currently considered broad enough to tag clinical lab measurements and other biological attributes taken as 'clinical traits' with some statistical score, for example, a p value in genetic associations." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:class biolink:ClinicalAttribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ] ;
    sh:targetClass biolink:ClinicalFinding .

biolink:ClinicalIntervention a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ] ;
    sh:targetClass biolink:ClinicalIntervention .

biolink:ClinicalMeasurement a sh:NodeShape ;
    sh:closed true ;
    sh:description "A clinical measurement is a special kind of attribute which results from a laboratory observation from a subject individual or sample. Measurements can be connected to their subject by the 'has attribute' slot." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:id ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path rdfs:label ] ;
    sh:targetClass biolink:ClinicalMeasurement .

biolink:ClinicalModifier a sh:NodeShape ;
    sh:closed true ;
    sh:description "Used to characterize and specify the phenotypic abnormalities defined in the phenotypic abnormality sub-ontology, with respect to severity, laterality, and other aspects" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path rdfs:label ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:id ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_attribute_type ] ;
    sh:targetClass biolink:ClinicalModifier .

biolink:ClinicalTrial a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:full_name ] ;
    sh:targetClass biolink:ClinicalTrial .

biolink:CodingSequence a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:id ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "connects a genomic feature to its sequence" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:has_biological_sequence ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:xref ] ;
    sh:targetClass biolink:CodingSequence .

biolink:Cohort a sh:NodeShape ;
    sh:closed true ;
    sh:description "A group of people banded together or treated as a group who share common characteristics. A cohort 'study' is a particular form of longitudinal study that samples a cohort, performing a cross-section at intervals through time." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ] ;
    sh:targetClass biolink:Cohort .

biolink:CommonDataElement a sh:NodeShape ;
    sh:closed true ;
    sh:description "A Common Data Element (CDE) is a standardized, precisely defined question, paired with a set of allowable responses, used systematically across different sites, studies, or clinical trials to ensure consistent data collection. Multiple CDEs (from one or more Collections) can be curated into Forms. (https://cde.nlm.nih.gov/home)" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:license ] ;
    sh:targetClass biolink:CommonDataElement .

biolink:ComplexChemicalExposure a sh:NodeShape ;
    sh:closed true ;
    sh:description "A complex chemical exposure is an intake of a chemical mixture (e.g. gasoline), other than a drug." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path rdfs:label ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_attribute_type ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ] ;
    sh:targetClass biolink:ComplexChemicalExposure .

biolink:ComplexMolecularMixture a sh:NodeShape ;
    sh:closed true ;
    sh:description "A complex molecular mixture is a chemical mixture composed of two or more molecular entities with unknown concentration and stoichiometry." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:is_supplement ],
        [ sh:class biolink:ChemicalRole ;
            sh:description "A role is particular behaviour which a chemical entity may exhibit." ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:has_chemical_role ],
        [ sh:datatype xsd:string ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:trade_name ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:max_tolerated_dose ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:has_attribute ],
        [ sh:description "the method or process of administering a pharmaceutical compound to achieve a therapeutic effect in humans or animals." ;
            sh:in ( "inhalation" "oral" "absorption_through_the_skin" "intravenous_injection" ) ;
            sh:order 3 ;
            sh:path biolink:routes_of_delivery ],
        [ sh:description "An agglomeration of drug regulatory status worldwide. Not specific to FDA." ;
            sh:in ( "discovery_and_development_phase" "preclinical_research_phase" "fda_clinical_research_phase" "fda_review_phase_4" "fda_post_market_safety_review" "fda_clinical_research_phase_1" "fda_clinical_research_phase_2" "fda_clinical_research_phase_3" "fda_clinical_research_phase_4" "fda_fast_track" "fda_breakthrough_therapy" "fda_accelerated_approval" "fda_priority_review" "regular_fda_approval" "post_approval_withdrawal" ) ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path biolink:drug_regulatory_status_world_wide ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:deprecated ],
        [ sh:description "" ;
            sh:in ( "over_the_counter" "prescription" ) ;
            sh:order 5 ;
            sh:path biolink:available_from ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:boolean ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:is_toxic ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path rdfs:label ],
        [ sh:description "Should be the highest level of FDA approval this chemical entity or device has, regardless of which disease, condition or phenotype it is currently being reviewed to treat.  For specific levels of FDA approval for a specific condition, disease, phenotype, etc., see the association slot, 'clinical approval status.'" ;
            sh:in ( "discovery_and_development_phase" "preclinical_research_phase" "fda_clinical_research_phase" "fda_review_phase_4" "fda_post_market_safety_review" "fda_clinical_research_phase_1" "fda_clinical_research_phase_2" "fda_clinical_research_phase_3" "fda_clinical_research_phase_4" "fda_fast_track" "fda_breakthrough_therapy" "fda_accelerated_approval" "fda_priority_review" "regular_fda_approval" "post_approval_withdrawal" ) ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path biolink:highest_FDA_approval_status ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path dct:description ] ;
    sh:targetClass biolink:ComplexMolecularMixture .

biolink:ConceptCountAnalysisResult a sh:NodeShape ;
    sh:closed true ;
    sh:description "A result of a concept count analysis." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:creation_date ] ;
    sh:targetClass biolink:ConceptCountAnalysisResult .

biolink:ConfidenceLevel a sh:NodeShape ;
    sh:closed true ;
    sh:description "Level of confidence in a statement" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ] ;
    sh:targetClass biolink:ConfidenceLevel .

biolink:ContributorAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "Any association between an entity (such as a publication) and various agents that contribute to its realisation" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:InformationContentEntity ;
            sh:description "information content entity which an agent has helped realise" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "this field can be used to annotate special characteristics of an agent relationship, such as the fact that a given author agent of a publication is the 'corresponding author'" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "generally one of the predicate values 'provider', 'publisher', 'editor' or 'author'" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:Agent ;
            sh:description "agent helping to realise the given entity (e.g. such as a publication)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ] ;
    sh:targetClass biolink:ContributorAssociation .

biolink:CorrelatedGeneToDiseaseAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 49 ;
            sh:path biolink:has_percentage ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 44 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:object_specialization_qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:subject_specialization_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 19 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:integer ;
            sh:description "number of things with a particular property" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path biolink:has_count ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 42 ;
            sh:path rdfs:label ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "gene in which variation is shown to correlate with the disease." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 25 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 53 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 48 ;
            sh:path biolink:has_quotient ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path biolink:category ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 18 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 29 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:object_closure ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 50 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:BiologicalSex ;
            sh:description "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:sex_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 51 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:Disease ;
            sh:description "disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 34 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:integer ;
            sh:description "total number of things in a particular reference set" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 47 ;
            sh:path biolink:has_total ],
        [ sh:datatype xsd:string ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 24 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:object_namespace ],
        [ sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:in ( "activity_or_abundance" "abundance" "activity" "expression" "synthesis" "degradation" "cleavage" "hydrolysis" "metabolic_processing" "mutation_rate" "stability" "folding" "localization" "transport" "absorption" "aggregation" "interaction" "release" "secretion" "uptake" "splicing" "molecular_interaction" "molecular_modification" "acetylation" "acylation" "alkylation" "amination" "carbamoylation" "ethylation" "glutathionylation" "glycation" "glycosylation" "glucuronidation" "n_linked_glycosylation" "o_linked_glycosylation" "hydroxylation" "lipidation" "farnesylation" "geranoylation" "myristoylation" "palmitoylation" "prenylation" "methylation" "nitrosation" "nucleotidylation" "phosphorylation" "ribosylation" "ADP-ribosylation" "sulfation" "sumoylation" "ubiquitination" "oxidation" "reduction" "carboxylation" ) ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 28 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path rdf:type ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path dct:description ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 52 ;
            sh:path biolink:qualified_predicate ] ;
    sh:targetClass biolink:CorrelatedGeneToDiseaseAssociation .

biolink:DatasetSummary a sh:NodeShape ;
    sh:closed true ;
    sh:description "an item that holds summary level information about a dataset." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path schema1:logo ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 16 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:source_web_page ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:deprecated ] ;
    sh:targetClass biolink:DatasetSummary .

biolink:DatasetVersion a sh:NodeShape ;
    sh:closed true ;
    sh:description "an item that holds version level information about a dataset." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:license ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:DatasetDistribution ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path dct:distribution ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Dataset ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:has_dataset ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:ingest_date ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path rdfs:label ] ;
    sh:targetClass biolink:DatasetVersion .

biolink:DiagnosticAid a sh:NodeShape ;
    sh:closed true ;
    sh:description "A device or substance used to help diagnose disease or injury" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:deprecated ] ;
    sh:targetClass biolink:DiagnosticAid .

biolink:DiseaseOrPhenotypicFeatureExposure a sh:NodeShape ;
    sh:closed true ;
    sh:description "A disease or phenotypic feature state, when viewed as an exposure, represents an precondition, leading to or influencing an outcome, e.g. HIV predisposing an individual to infections; a relative deficiency of skin pigmentation predisposing an individual to skin cancer." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdfs:label ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:has_attribute_type ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 3 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:synonym ] ;
    sh:targetClass biolink:DiseaseOrPhenotypicFeatureExposure .

biolink:DiseaseOrPhenotypicFeatureOutcome a sh:NodeShape ;
    sh:closed true ;
    sh:description "Physiological outcomes resulting from an exposure event which is the manifestation of a disease or other characteristic phenotype." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:DiseaseOrPhenotypicFeatureOutcome .

biolink:DiseaseOrPhenotypicFeatureToEntityAssociationMixin a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:DiseaseOrPhenotypicFeature ;
            sh:description "disease or phenotype" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ] ;
    sh:targetClass biolink:DiseaseOrPhenotypicFeatureToEntityAssociationMixin .

biolink:DiseaseOrPhenotypicFeatureToGeneticInheritanceAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An association between either a disease or a phenotypic feature and its mode of (genetic) inheritance." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:GeneticInheritance ;
            sh:description "genetic inheritance associated with the specified disease or phenotypic feature." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:class biolink:DiseaseOrPhenotypicFeature ;
            sh:description "disease or phenotype" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ] ;
    sh:targetClass biolink:DiseaseOrPhenotypicFeatureToGeneticInheritanceAssociation .

biolink:DiseaseOrPhenotypicFeatureToLocationAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An association between either a disease or a phenotypic feature and an anatomical entity, where the disease/feature manifests in that site." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:description "anatomical entity in which the disease or feature is found." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:DiseaseOrPhenotypicFeature ;
            sh:description "disease or phenotype" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ] ;
    sh:targetClass biolink:DiseaseOrPhenotypicFeatureToLocationAssociation .

biolink:DiseaseToEntityAssociationMixin a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:Disease ;
            sh:description "disease class" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ] ;
    sh:targetClass biolink:DiseaseToEntityAssociationMixin .

biolink:DiseaseToExposureEventAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An association between an exposure event and a disease." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:Disease ;
            sh:description "disease class" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:class biolink:ExposureEvent ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ] ;
    sh:targetClass biolink:DiseaseToExposureEventAssociation .

biolink:DiseaseToPhenotypicFeatureAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An association between a disease and a phenotypic feature in which the phenotypic feature is associated with the disease in some way." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 42 ;
            sh:path biolink:iri ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:BiologicalSex ;
            sh:description "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:sex_qualifier ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 9 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 16 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:object_specialization_qualifier ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 40 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:subject_specialization_qualifier ],
        [ sh:class biolink:Disease ;
            sh:description "disease class" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path rdf:subject ],
        [ sh:class biolink:Onset ;
            sh:description "a qualifier used in a phenotypic association to state when the phenotype appears is in the subject." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:onset_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 48 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 32 ;
            sh:path biolink:object_category_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 54 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 44 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:integer ;
            sh:description "number of things with a particular property" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:has_count ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 53 ;
            sh:path biolink:qualified_predicate ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:p_value ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 50 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:class biolink:PhenotypicFeature ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:has_quotient ],
        [ sh:datatype xsd:integer ;
            sh:description "total number of things in a particular reference set" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:has_total ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 15 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 49 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 31 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 52 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 47 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:has_percentage ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 51 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 28 ;
            sh:path biolink:object_category ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 22 ;
            sh:path biolink:agent_type ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 21 ;
            sh:path biolink:knowledge_level ] ;
    sh:targetClass biolink:DiseaseToPhenotypicFeatureAssociation .

biolink:DrugExposure a sh:NodeShape ;
    sh:closed true ;
    sh:description "A drug exposure is an intake of a particular drug." ;
    sh:ignoredProperties ( biolink:has_gene_or_gene_product rdf:type ) ;
    sh:property [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 1 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:has_attribute_type ] ;
    sh:targetClass biolink:DrugExposure .

biolink:DrugLabel a sh:NodeShape ;
    sh:closed true ;
    sh:description "a document accompanying a drug or its container that provides written, printed or graphic information about the drug, including drug contents, specific instructions or warnings for administration, storage and disposal instructions, etc." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:string ;
            sh:description "executive  summary of a publication" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:summary ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:rights ],
        [ sh:class biolink:Agent ;
            sh:description "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication." ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:authors ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 20 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "mesh terms tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:mesh_terms ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:string ;
            sh:description "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "keywords tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:keywords ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass." ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path dct:type ],
        [ sh:datatype xsd:string ;
            sh:description "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:pages ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "Different kinds of publication subtypes will have different preferred identifiers (curies when feasible). Precedence of identifiers for scientific articles is as follows: PMID if available; DOI if not; actual alternate CURIE otherwise. Enclosing publications (i.e. referenced by 'published in' node property) such as books and journals, should have industry-standard identifier such as from ISBN and ISSN." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:id ] ;
    sh:targetClass biolink:DrugLabel .

biolink:DrugToEntityAssociationMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "An interaction between a drug and another entity" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:Drug ;
            sh:description "the drug that is an interactor" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ] ;
    sh:targetClass biolink:DrugToEntityAssociationMixin .

biolink:DrugToGeneAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An interaction between a drug and a gene or gene product." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:Drug ;
            sh:description "the drug that is an interactor" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "the gene or gene product that is affected by the drug" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ] ;
    sh:targetClass biolink:DrugToGeneAssociation .

biolink:DrugToGeneInteractionExposure a sh:NodeShape ;
    sh:closed true ;
    sh:description "drug to gene interaction exposure is a drug exposure is where the interactions of the drug with specific genes are known to constitute an 'exposure' to the organism, leading to or influencing an outcome." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path dct:description ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 15 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:Gene ;
            sh:description "connects an entity with one or more gene or gene products" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:has_gene_or_gene_product ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:timepoint ] ;
    sh:targetClass biolink:DrugToGeneInteractionExposure .

biolink:DruggableGeneToDiseaseAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:object_specialization_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 51 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path biolink:category ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 18 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:Disease ;
            sh:description "disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:qualifier ],
        [ sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:in ( "activity_or_abundance" "abundance" "activity" "expression" "synthesis" "degradation" "cleavage" "hydrolysis" "metabolic_processing" "mutation_rate" "stability" "folding" "localization" "transport" "absorption" "aggregation" "interaction" "release" "secretion" "uptake" "splicing" "molecular_interaction" "molecular_modification" "acetylation" "acylation" "alkylation" "amination" "carbamoylation" "ethylation" "glutathionylation" "glycation" "glycosylation" "glucuronidation" "n_linked_glycosylation" "o_linked_glycosylation" "hydroxylation" "lipidation" "farnesylation" "geranoylation" "myristoylation" "palmitoylation" "prenylation" "methylation" "nitrosation" "nucleotidylation" "phosphorylation" "ribosylation" "ADP-ribosylation" "sulfation" "sumoylation" "ubiquitination" "oxidation" "reduction" "carboxylation" ) ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:class biolink:BiologicalSex ;
            sh:description "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:sex_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 25 ;
            sh:path biolink:object_category ],
        [ sh:description "connects an association to an instance of supporting evidence" ;
            sh:in ( "tclin" "tbio" "tchem" "tdark" ) ;
            sh:order 14 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 49 ;
            sh:path biolink:has_percentage ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:original_subject ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 44 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 19 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 24 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "gene in which variation is correlated with the disease in a protective manner, or if the product produced by the gene can be targeted by a small molecule and this leads to a protective or improving disease state." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 28 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 29 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 53 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path dct:description ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 34 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:subject_specialization_qualifier ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 52 ;
            sh:path biolink:qualified_predicate ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 48 ;
            sh:path biolink:has_quotient ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 50 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 42 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:publications ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:integer ;
            sh:description "number of things with a particular property" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path biolink:has_count ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:integer ;
            sh:description "total number of things in a particular reference set" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 47 ;
            sh:path biolink:has_total ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:deprecated ] ;
    sh:targetClass biolink:DruggableGeneToDiseaseAssociation .

biolink:Entity a sh:NodeShape ;
    sh:closed false ;
    sh:description "Root Biolink Model class for all things and informational relationships, real or imagined." ;
    sh:ignoredProperties ( biolink:summary biolink:expression_site biolink:has_output biolink:object_category_closure biolink:latitude biolink:has_attribute_type biolink:has_zygosity biolink:end_interbase_coordinate biolink:affiliation biolink:aggregator_knowledge_source biolink:object_part_qualifier rdf:subject biolink:resource_id biolink:sex_qualifier biolink:p_value biolink:strand dct:type biolink:qualified_predicate biolink:genome_build biolink:full_name biolink:trade_name biolink:phase biolink:retrieval_source_ids biolink:has_total biolink:object_category biolink:timepoint biolink:creation_date biolink:volume biolink:temporal_context_qualifier biolink:disease_context_qualifier biolink:has_input biolink:subject_derivative_qualifier biolink:subject_form_or_variant_qualifier biolink:subject_part_qualifier biolink:upstream_resource_ids biolink:has_quantitative_value biolink:reaction_direction biolink:source_web_page biolink:subject_context_qualifier biolink:has_quotient biolink:qualifier biolink:frequency_qualifier biolink:xref biolink:has_gene_or_gene_product biolink:rights biolink:is_toxic biolink:subject_namespace biolink:catalyst_qualifier biolink:object_label_closure biolink:issue biolink:chapter biolink:knowledge_level biolink:onset_qualifier biolink:original_subject biolink:routes_of_delivery biolink:subject_specialization_qualifier biolink:original_object biolink:qualifiers biolink:subject_direction_qualifier biolink:start_interbase_coordinate biolink:object_closure biolink:symbol biolink:interacting_molecules_category biolink:in_taxon biolink:subject_label_closure biolink:object_context_qualifier biolink:mesh_terms biolink:anatomical_context_qualifier biolink:longitude biolink:has_chemical_role biolink:resource_role biolink:has_drug biolink:stage_qualifier biolink:original_predicate biolink:associated_environmental_context biolink:address biolink:object_direction_qualifier biolink:synonym biolink:published_in biolink:has_qualitative_value biolink:object_specialization_qualifier biolink:has_supporting_studies biolink:has_taxonomic_rank rdf:predicate biolink:has_biological_sequence biolink:negated biolink:has_evidence biolink:species_context_qualifier biolink:subject_aspect_qualifier biolink:format schema1:logo biolink:drug_regulatory_status_world_wide biolink:reaction_side biolink:population_context_qualifier biolink:available_from dct:distribution biolink:FDA_adverse_event_level biolink:object_derivative_qualifier biolink:provided_by biolink:has_dataset biolink:has_count biolink:object_namespace biolink:max_tolerated_dose biolink:knowledge_source biolink:has_procedure rdf:type biolink:has_percentage biolink:iso_abbreviation biolink:object_form_or_variant_qualifier biolink:ingest_date biolink:keywords biolink:has_device biolink:distribution_download_url biolink:authors biolink:subject_category_closure biolink:clinical_approval_status biolink:subject_closure biolink:publications biolink:in_taxon_label biolink:highest_FDA_approval_status rdf:object biolink:object_aspect_qualifier biolink:quantifier_qualifier biolink:causal_mechanism_qualifier biolink:max_research_phase biolink:adjusted_p_value biolink:is_supplement biolink:stoichiometry biolink:is_metabolite biolink:primary_knowledge_source biolink:license biolink:has_gene biolink:phenotypic_state biolink:subject_category biolink:agent_type biolink:enabled_by biolink:pages ) ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path rdf:type ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:has_attribute ] ;
    sh:targetClass biolink:Entity .

biolink:EntityToDiseaseAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:subject ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 13 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:id ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 24 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 29 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path dct:description ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 32 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path rdf:object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 39 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 9 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 20 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path rdfs:label ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 14 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:publications ],
        [ sh:description "" ;
            sh:in ( "approved_for_condition" "fda_approved_for_condition" "not_approved_for_condition" "post_approval_withdrawal" "off_label_use" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path biolink:clinical_approval_status ],
        [ sh:in ( "pre_clinical_research_phase" "clinical_trial_phase" "clinical_trial_phase_1" "clinical_trial_phase_2" "clinical_trial_phase_3" "clinical_trial_phase_4" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path biolink:max_research_phase ] ;
    sh:targetClass biolink:EntityToDiseaseAssociation .

biolink:EntityToDiseaseAssociationMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "mixin class for any association whose object (target node) is a disease" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdf:predicate ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualified_predicate ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:class biolink:Disease ;
            sh:description "disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 9 ;
            sh:path rdf:object ] ;
    sh:targetClass biolink:EntityToDiseaseAssociationMixin .

biolink:EntityToDiseaseOrPhenotypicFeatureAssociationMixin a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:DiseaseOrPhenotypicFeature ;
            sh:description "disease or phenotype" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ] ;
    sh:targetClass biolink:EntityToDiseaseOrPhenotypicFeatureAssociationMixin .

biolink:EntityToExposureEventAssociationMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "An association between some entity and an exposure event." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:ExposureEvent ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ] ;
    sh:targetClass biolink:EntityToExposureEventAssociationMixin .

biolink:EntityToFeatureOrDiseaseQualifiersMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "Qualifiers for entity to disease or phenotype associations." ;
    sh:ignoredProperties ( biolink:has_total biolink:anatomical_context_qualifier biolink:has_percentage biolink:object_specialization_qualifier biolink:subject_specialization_qualifier biolink:has_quotient biolink:has_count biolink:sex_qualifier rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualified_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 9 ;
            sh:path rdf:object ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path rdf:subject ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:frequency_qualifier ] ;
    sh:targetClass biolink:EntityToFeatureOrDiseaseQualifiersMixin .

biolink:EntityToOutcomeAssociationMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "An association between some entity and an outcome" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:Outcome ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path rdf:object ] ;
    sh:targetClass biolink:EntityToOutcomeAssociationMixin .

biolink:EntityToPhenotypicFeatureAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 13 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 9 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 20 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:qualifiers ],
        [ sh:description "" ;
            sh:in ( "approved_for_condition" "fda_approved_for_condition" "not_approved_for_condition" "post_approval_withdrawal" "off_label_use" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path biolink:clinical_approval_status ],
        [ sh:in ( "pre_clinical_research_phase" "clinical_trial_phase" "clinical_trial_phase_1" "clinical_trial_phase_2" "clinical_trial_phase_3" "clinical_trial_phase_4" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path biolink:max_research_phase ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:publications ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 14 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 39 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 32 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 29 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 24 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:original_object ] ;
    sh:targetClass biolink:EntityToPhenotypicFeatureAssociation .

biolink:EntityToPhenotypicFeatureAssociationMixin a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:qualified_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:integer ;
            sh:description "total number of things in a particular reference set" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:has_total ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:datatype xsd:integer ;
            sh:description "number of things with a particular property" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:has_count ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:has_percentage ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:object_specialization_qualifier ],
        [ sh:class biolink:PhenotypicFeature ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:subject_specialization_qualifier ],
        [ sh:class biolink:BiologicalSex ;
            sh:description "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:sex_qualifier ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 15 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:has_quotient ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 13 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:disease_context_qualifier ] ;
    sh:targetClass biolink:EntityToPhenotypicFeatureAssociationMixin .

biolink:EnvironmentalExposure a sh:NodeShape ;
    sh:closed true ;
    sh:description "A environmental exposure is a factor relating to abiotic processes in the environment including sunlight (UV-B), atmospheric (heat, cold, general pollution) and water-born contaminants." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 3 ;
            sh:path biolink:has_quantitative_value ] ;
    sh:targetClass biolink:EnvironmentalExposure .

biolink:EnvironmentalFeature a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:description ] ;
    sh:targetClass biolink:EnvironmentalFeature .

biolink:EnvironmentalFoodContaminant a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:ChemicalRole ;
            sh:description "A role is particular behaviour which a chemical entity may exhibit." ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:has_chemical_role ],
        [ sh:datatype xsd:string ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:trade_name ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:id ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 15 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:boolean ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:is_toxic ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:description "" ;
            sh:in ( "over_the_counter" "prescription" ) ;
            sh:order 1 ;
            sh:path biolink:available_from ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:max_tolerated_dose ] ;
    sh:targetClass biolink:EnvironmentalFoodContaminant .

biolink:EnvironmentalProcess a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:deprecated ] ;
    sh:targetClass biolink:EnvironmentalProcess .

biolink:EpidemiologicalOutcome a sh:NodeShape ;
    sh:closed true ;
    sh:description "An epidemiological outcome, such as societal disease burden, resulting from an exposure event." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:EpidemiologicalOutcome .

biolink:EpigenomicEntity a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "connects a genomic feature to its sequence" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:has_biological_sequence ] ;
    sh:targetClass biolink:EpigenomicEntity .

biolink:Event a sh:NodeShape ;
    sh:closed true ;
    sh:description "Something that happens at a given place and time." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:description ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:type ] ;
    sh:targetClass biolink:Event .

biolink:ExonToTranscriptRelationship a sh:NodeShape ;
    sh:closed true ;
    sh:description "A transcript is formed from multiple exons" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:class biolink:Transcript ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:Exon ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ] ;
    sh:targetClass biolink:ExonToTranscriptRelationship .

biolink:ExposureEventToOutcomeAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An association between an exposure event and an outcome." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 20 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:PopulationOfIndividualOrganisms ;
            sh:description "a biological population (general, study, cohort, etc.) with a specific set of characteristics to constrain an association." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:population_context_qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:time ;
            sh:description "a constraint of time placed upon the truth value of an association. for time intervales, use temporal interval qualifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:temporal_context_qualifier ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:Outcome ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 4 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:id ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 39 ;
            sh:path biolink:has_attribute ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 13 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path dct:description ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 32 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 9 ;
            sh:path biolink:has_evidence ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 14 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 29 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 24 ;
            sh:path biolink:object_category_closure ] ;
    sh:targetClass biolink:ExposureEventToOutcomeAssociation .

biolink:ExposureEventToPhenotypicFeatureAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "Any association between an environment and a phenotypic feature, where being in the environment influences the phenotype." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path rdf:type ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 16 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path dct:description ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path biolink:has_quotient ],
        [ sh:datatype xsd:integer ;
            sh:description "total number of things in a particular reference set" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:has_total ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 32 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 42 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:object_specialization_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:object_closure ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 53 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 11 ;
            sh:path biolink:publications ],
        [ sh:class biolink:PhenotypicFeature ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:ExposureEvent ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 26 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 47 ;
            sh:path biolink:has_percentage ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 48 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 50 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 51 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:subject_specialization_qualifier ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 52 ;
            sh:path biolink:qualified_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 49 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 35 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:BiologicalSex ;
            sh:description "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:sex_qualifier ],
        [ sh:datatype xsd:integer ;
            sh:description "number of things with a particular property" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 44 ;
            sh:path biolink:has_count ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:id ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 17 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:subject_category ] ;
    sh:targetClass biolink:ExposureEventToPhenotypicFeatureAssociation .

biolink:FeatureOrDiseaseQualifiersToEntityMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "Qualifiers for disease or phenotype to entity associations." ;
    sh:ignoredProperties ( biolink:has_total biolink:has_percentage biolink:has_count biolink:has_quotient biolink:sex_qualifier rdf:type ) ;
    sh:property [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path rdf:subject ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualified_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:predicate ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:frequency_qualifier ] ;
    sh:targetClass biolink:FeatureOrDiseaseQualifiersToEntityMixin .

biolink:Food a sh:NodeShape ;
    sh:closed true ;
    sh:description "A substance consumed by a living organism as a source of nutrition" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:trade_name ],
        [ sh:class biolink:ChemicalRole ;
            sh:description "A role is particular behaviour which a chemical entity may exhibit." ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:has_chemical_role ],
        [ sh:description "" ;
            sh:in ( "over_the_counter" "prescription" ) ;
            sh:order 5 ;
            sh:path biolink:available_from ],
        [ sh:description "the method or process of administering a pharmaceutical compound to achieve a therapeutic effect in humans or animals." ;
            sh:in ( "inhalation" "oral" "absorption_through_the_skin" "intravenous_injection" ) ;
            sh:order 3 ;
            sh:path biolink:routes_of_delivery ],
        [ sh:datatype xsd:string ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:is_supplement ],
        [ sh:datatype xsd:boolean ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:is_toxic ],
        [ sh:datatype xsd:string ;
            sh:description "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:max_tolerated_dose ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:iri ],
        [ sh:description "Should be the highest level of FDA approval this chemical entity or device has, regardless of which disease, condition or phenotype it is currently being reviewed to treat.  For specific levels of FDA approval for a specific condition, disease, phenotype, etc., see the association slot, 'clinical approval status.'" ;
            sh:in ( "discovery_and_development_phase" "preclinical_research_phase" "fda_clinical_research_phase" "fda_review_phase_4" "fda_post_market_safety_review" "fda_clinical_research_phase_1" "fda_clinical_research_phase_2" "fda_clinical_research_phase_3" "fda_clinical_research_phase_4" "fda_fast_track" "fda_breakthrough_therapy" "fda_accelerated_approval" "fda_priority_review" "regular_fda_approval" "post_approval_withdrawal" ) ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path biolink:highest_FDA_approval_status ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:xref ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:synonym ],
        [ sh:description "An agglomeration of drug regulatory status worldwide. Not specific to FDA." ;
            sh:in ( "discovery_and_development_phase" "preclinical_research_phase" "fda_clinical_research_phase" "fda_review_phase_4" "fda_post_market_safety_review" "fda_clinical_research_phase_1" "fda_clinical_research_phase_2" "fda_clinical_research_phase_3" "fda_clinical_research_phase_4" "fda_fast_track" "fda_breakthrough_therapy" "fda_accelerated_approval" "fda_priority_review" "regular_fda_approval" "post_approval_withdrawal" ) ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path biolink:drug_regulatory_status_world_wide ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:provided_by ] ;
    sh:targetClass biolink:Food .

biolink:FoodAdditive a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:trade_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:ChemicalRole ;
            sh:description "A role is particular behaviour which a chemical entity may exhibit." ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:has_chemical_role ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 15 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:max_tolerated_dose ],
        [ sh:description "" ;
            sh:in ( "over_the_counter" "prescription" ) ;
            sh:order 1 ;
            sh:path biolink:available_from ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:boolean ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:is_toxic ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:id ] ;
    sh:targetClass biolink:FoodAdditive .

biolink:FrequencyQualifierMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "Qualifier for frequency type associations" ;
    sh:ignoredProperties ( biolink:object_aspect_qualifier biolink:has_total biolink:anatomical_context_qualifier biolink:has_percentage biolink:object_specialization_qualifier biolink:subject_specialization_qualifier biolink:subject_aspect_qualifier biolink:has_quotient biolink:has_count biolink:subject_direction_qualifier biolink:sex_qualifier rdf:type biolink:qualified_predicate biolink:object_direction_qualifier biolink:disease_context_qualifier ) ;
    sh:property [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path rdf:subject ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path rdf:object ] ;
    sh:targetClass biolink:FrequencyQualifierMixin .

biolink:FrequencyQuantifier a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:has_percentage ],
        [ sh:datatype xsd:integer ;
            sh:description "total number of things in a particular reference set" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:has_total ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:has_quotient ],
        [ sh:datatype xsd:integer ;
            sh:description "number of things with a particular property" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:has_count ] ;
    sh:targetClass biolink:FrequencyQuantifier .

biolink:FunctionalAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An association between a macromolecular machine mixin (gene, gene product or complex of gene products) and either a molecular activity, a biological process or a cellular location in which a function is executed." ;
    sh:ignoredProperties ( biolink:species_context_qualifier rdf:type ) ;
    sh:property [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:class biolink:MacromolecularMachineMixin ;
            sh:description "gene, product or macromolecular complex that has the function associated with the GO term" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:class biolink:OntologyClass ;
            sh:description "class describing the activity, process or localization of the gene product" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ] ;
    sh:targetClass biolink:FunctionalAssociation .

biolink:Fungus a sh:NodeShape ;
    sh:closed true ;
    sh:description "A kingdom of eukaryotic, heterotrophic organisms that live as saprobes or parasites, including mushrooms, yeasts, smuts, molds, etc. They reproduce either sexually or asexually, and have life cycles that range from simple to complex. Filamentous fungi refer to those that grow as multicellular colonies (mushrooms and molds)." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ] ;
    sh:targetClass biolink:Fungus .

biolink:GeneAffectsChemicalAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "Describes an effect that a gene or gene product has on a chemical entity (e.g. an impact of on its abundance, activity, localization, processing, transport, etc.)" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 16 ;
            sh:path rdf:subject ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "A statement qualifier representing a taxonomic category of species in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 15 ;
            sh:path biolink:species_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 51 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 49 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 52 ;
            sh:path dct:description ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 33 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 43 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path rdf:predicate ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 27 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:qualifier ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 47 ;
            sh:path biolink:id ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:qualifiers ],
        [ sh:description "A qualifier that composes with a core subject/object  concept to describe something that is derived from the core concept.  For example, the qualifier ‘metabolite’ combines with a ‘Chemical X’ core concept to express the composed concept ‘a metabolite of Chemical X’.  This qualifier is for the object of an association  (or statement)." ;
            sh:in ( "metabolite" ) ;
            sh:maxCount 1 ;
            sh:order 11 ;
            sh:path biolink:object_derivative_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 42 ;
            sh:path biolink:object_label_closure ],
        [ sh:description "A qualifier that composes with a core subject/object concept to define a specific type, variant, alternative version of this concept. The composed concept remains a subtype or instance of the core concept. For example, the qualifier ‘mutation’ combines with the core concept ‘Gene X’ to express the compose concept ‘a mutation of Gene X’.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:in ( "genetic_variant_form" "modified_form" "loss_of_function_variant_form" "gain_of_function_variant_form" "polymorphic_form" "snp_form" "analog_form" ) ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path biolink:object_form_or_variant_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 44 ;
            sh:path biolink:p_value ],
        [ sh:description "defines a specific part/component of the core concept (used in cases there this specific part has no IRI we can use to directly represent it, e.g. 'ESR1 transcript' q: polyA tail).  This qualifier is for the  subject of an association (or statement)." ;
            sh:in ( "3_prime_utr" "5_prime_utr" "polya_tail" "promoter" "enhancer" "exon" "intron" ) ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path biolink:subject_part_qualifier ],
        [ sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:in ( "activity_or_abundance" "abundance" "activity" "expression" "synthesis" "degradation" "cleavage" "hydrolysis" "metabolic_processing" "mutation_rate" "stability" "folding" "localization" "transport" "absorption" "aggregation" "interaction" "release" "secretion" "uptake" "splicing" "molecular_interaction" "molecular_modification" "acetylation" "acylation" "alkylation" "amination" "carbamoylation" "ethylation" "glutathionylation" "glycation" "glycosylation" "glucuronidation" "n_linked_glycosylation" "o_linked_glycosylation" "hydroxylation" "lipidation" "farnesylation" "geranoylation" "myristoylation" "palmitoylation" "prenylation" "methylation" "nitrosation" "nucleotidylation" "phosphorylation" "ribosylation" "ADP-ribosylation" "sulfation" "sumoylation" "ubiquitination" "oxidation" "reduction" "carboxylation" ) ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 53 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:ChemicalEntity ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 54 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A qualifier that composes with a core subject/object  concept to describe something that is derived from the core concept.  For example, the qualifier ‘metabolite’ combines with a ‘Chemical X’ core concept to express the composed concept ‘a metabolite of Chemical X’.  This qualifier is for the subject of an association  (or statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:subject_derivative_qualifier ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 46 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:publications ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:subject_context_qualifier ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 34 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:qualified_predicate ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 28 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:has_evidence ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 38 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 48 ;
            sh:path biolink:iri ],
        [ sh:description "A qualifier that composes with a core subject/object concept to define a specific type, variant, alternative version of this concept. The composed concept remains a subtype or instance of the core concept. For example, the qualifier ‘mutation’ combines with the core concept ‘Gene X’ to express the compose concept ‘a mutation of Gene X’.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:in ( "genetic_variant_form" "modified_form" "loss_of_function_variant_form" "gain_of_function_variant_form" "polymorphic_form" "snp_form" "analog_form" ) ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path biolink:subject_form_or_variant_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:subject_namespace ],
        [ sh:description "defines a specific part/component of the core concept (used in cases there this specific part has no IRI we can use to directly represent it, e.g. 'ESR1 transcript' q: polyA tail).  This qualifier is for the  object of an association (or statement)." ;
            sh:in ( "3_prime_utr" "5_prime_utr" "polya_tail" "promoter" "enhancer" "exon" "intron" ) ;
            sh:maxCount 1 ;
            sh:order 7 ;
            sh:path biolink:object_part_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:object_closure ],
        [ sh:description "A statement qualifier representing a type of molecular control mechanism through which an effect of a chemical on a gene or gene product is mediated (e.g. 'agonism', 'inhibition', 'allosteric modulation', 'channel blocker')" ;
            sh:in ( "binding" "inhibition" "antibody_inhibition" "antagonism" "molecular_channel_blockage" "inverse_agonism" "negative_allosteric_modulation" "agonism" "molecular_channel_opening" "positive_allosteric_modulation" "potentiation" "activation" "inducer" "transcriptional_regulation" "signaling_mediated_control" "stabilization" "stimulation" "releasing_activity" ) ;
            sh:maxCount 1 ;
            sh:order 12 ;
            sh:path biolink:causal_mechanism_qualifier ],
        [ sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:in ( "activity_or_abundance" "abundance" "activity" "expression" "synthesis" "degradation" "cleavage" "hydrolysis" "metabolic_processing" "mutation_rate" "stability" "folding" "localization" "transport" "absorption" "aggregation" "interaction" "release" "secretion" "uptake" "splicing" "molecular_interaction" "molecular_modification" "acetylation" "acylation" "alkylation" "amination" "carbamoylation" "ethylation" "glutathionylation" "glycation" "glycosylation" "glucuronidation" "n_linked_glycosylation" "o_linked_glycosylation" "hydroxylation" "lipidation" "farnesylation" "geranoylation" "myristoylation" "palmitoylation" "prenylation" "methylation" "nitrosation" "nucleotidylation" "phosphorylation" "ribosylation" "ADP-ribosylation" "sulfation" "sumoylation" "ubiquitination" "oxidation" "reduction" "carboxylation" ) ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 50 ;
            sh:path rdf:type ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 9 ;
            sh:path biolink:object_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:subject_closure ] ;
    sh:targetClass biolink:GeneAffectsChemicalAssociation .

biolink:GeneAsAModelOfDiseaseAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:integer ;
            sh:description "number of things with a particular property" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path biolink:has_count ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 25 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 34 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path biolink:category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 24 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 49 ;
            sh:path biolink:has_percentage ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 42 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:object_specialization_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "The relationship to the disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path rdf:type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 29 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:subject_specialization_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:Disease ;
            sh:description "disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:original_object ],
        [ sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:in ( "activity_or_abundance" "abundance" "activity" "expression" "synthesis" "degradation" "cleavage" "hydrolysis" "metabolic_processing" "mutation_rate" "stability" "folding" "localization" "transport" "absorption" "aggregation" "interaction" "release" "secretion" "uptake" "splicing" "molecular_interaction" "molecular_modification" "acetylation" "acylation" "alkylation" "amination" "carbamoylation" "ethylation" "glutathionylation" "glycation" "glycosylation" "glucuronidation" "n_linked_glycosylation" "o_linked_glycosylation" "hydroxylation" "lipidation" "farnesylation" "geranoylation" "myristoylation" "palmitoylation" "prenylation" "methylation" "nitrosation" "nucleotidylation" "phosphorylation" "ribosylation" "ADP-ribosylation" "sulfation" "sumoylation" "ubiquitination" "oxidation" "reduction" "carboxylation" ) ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 48 ;
            sh:path biolink:has_quotient ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 52 ;
            sh:path biolink:qualified_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 18 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path dct:description ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:publications ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "A gene that has a role in modeling the disease. This may be a model organism ortholog of a known disease gene, or it may be a gene whose mutants recapitulate core features of the disease." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 19 ;
            sh:path biolink:agent_type ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 50 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 28 ;
            sh:path biolink:subject_category_closure ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 53 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:class biolink:BiologicalSex ;
            sh:description "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:sex_qualifier ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_evidence ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 44 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:integer ;
            sh:description "total number of things in a particular reference set" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 47 ;
            sh:path biolink:has_total ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 51 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:subject_closure ] ;
    sh:targetClass biolink:GeneAsAModelOfDiseaseAssociation .

biolink:GeneExpressionMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "Observed gene expression intensity, context (site, stage) and associated phenotypic status within which the expression occurs." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:LifeStage ;
            sh:description "stage during which gene or protein expression of takes place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:stage_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Optional quantitative value indicating degree of expression." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:quantifier_qualifier ],
        [ sh:class biolink:DiseaseOrPhenotypicFeature ;
            sh:description "in experiments (e.g. gene expression) assaying diseased or unhealthy tissue, the phenotypic state can be put here, e.g. MONDO ID. For healthy tissues, use XXX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:phenotypic_state ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:description "location in which gene or protein expression takes place. May be cell, tissue, or organ." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:expression_site ] ;
    sh:targetClass biolink:GeneExpressionMixin .

biolink:GeneGroupingMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "any grouping of multiple genes or gene products" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:Gene ;
            sh:description "connects an entity with one or more gene or gene products" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:has_gene_or_gene_product ] ;
    sh:targetClass biolink:GeneGroupingMixin .

biolink:GeneHasVariantThatContributesToDiseaseAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:object_specialization_qualifier ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 20 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 29 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:original_object ],
        [ sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:in ( "activity_or_abundance" "abundance" "activity" "expression" "synthesis" "degradation" "cleavage" "hydrolysis" "metabolic_processing" "mutation_rate" "stability" "folding" "localization" "transport" "absorption" "aggregation" "interaction" "release" "secretion" "uptake" "splicing" "molecular_interaction" "molecular_modification" "acetylation" "acylation" "alkylation" "amination" "carbamoylation" "ethylation" "glutathionylation" "glycation" "glycosylation" "glucuronidation" "n_linked_glycosylation" "o_linked_glycosylation" "hydroxylation" "lipidation" "farnesylation" "geranoylation" "myristoylation" "palmitoylation" "prenylation" "methylation" "nitrosation" "nucleotidylation" "phosphorylation" "ribosylation" "ADP-ribosylation" "sulfation" "sumoylation" "ubiquitination" "oxidation" "reduction" "carboxylation" ) ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 25 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 45 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path rdfs:label ],
        [ sh:class biolink:BiologicalSex ;
            sh:description "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:sex_qualifier ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 15 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 44 ;
            sh:path dct:description ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 51 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:negated ],
        [ sh:class biolink:Disease ;
            sh:description "disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path rdf:object ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 19 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path biolink:original_subject ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 5 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:integer ;
            sh:description "total number of things in a particular reference set" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 48 ;
            sh:path biolink:has_total ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 53 ;
            sh:path biolink:qualified_predicate ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 26 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "A qualifier that composes with a core subject/object concept to define a specific type, variant, alternative version of this concept. The composed concept remains a subtype or instance of the core concept. For example, the qualifier ‘mutation’ combines with the core concept ‘Gene X’ to express the compose concept ‘a mutation of Gene X’.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:subject_form_or_variant_qualifier ],
        [ sh:datatype xsd:integer ;
            sh:description "number of things with a particular property" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 47 ;
            sh:path biolink:has_count ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:publications ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "A gene that has a role in modeling the disease. This may be a model organism ortholog of a known disease gene, or it may be a gene whose mutants recapitulate core features of the disease." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 1 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 50 ;
            sh:path biolink:has_percentage ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 35 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:qualifier ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 54 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 38 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 52 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 42 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:subject_specialization_qualifier ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 49 ;
            sh:path biolink:has_quotient ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:subject_label_closure ] ;
    sh:targetClass biolink:GeneHasVariantThatContributesToDiseaseAssociation .

biolink:GeneProductIsoformMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "This is an abstract class that can be mixed in with different kinds of gene products to indicate that the gene product is intended to represent a specific isoform rather than a canonical or reference or generic product. The designation of canonical or reference may be arbitrary, or it may represent the superclass of all isoforms." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:synonym ] ;
    sh:targetClass biolink:GeneProductIsoformMixin .

biolink:GeneRegulatesGeneAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "Describes a regulatory relationship between two genes or gene products." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OrganismTaxon ;
            sh:description "A statement qualifier representing a taxonomic category of species in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:species_context_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 11 ;
            sh:path biolink:has_evidence ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 6 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path rdfs:label ],
        [ sh:description "the aspect of the object gene or gene product that is being regulated, must be a descendant of  \"activity_or_abundance\"\"" ;
            sh:in ( "activity_or_abundance" "abundance" "activity" "expression" "synthesis" "degradation" "cleavage" "hydrolysis" "metabolic_processing" "mutation_rate" "stability" "folding" "localization" "transport" "absorption" "aggregation" "interaction" "release" "secretion" "uptake" "splicing" "molecular_interaction" "molecular_modification" "acetylation" "acylation" "alkylation" "amination" "carbamoylation" "ethylation" "glutathionylation" "glycation" "glycosylation" "glucuronidation" "n_linked_glycosylation" "o_linked_glycosylation" "hydroxylation" "lipidation" "farnesylation" "geranoylation" "myristoylation" "palmitoylation" "prenylation" "methylation" "nitrosation" "nucleotidylation" "phosphorylation" "ribosylation" "ADP-ribosylation" "sulfation" "sumoylation" "ubiquitination" "oxidation" "reduction" "carboxylation" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 0 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 42 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 26 ;
            sh:path biolink:object_category_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 25 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:original_object ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 1 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:id ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 34 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 31 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:qualified_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:publications ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 41 ;
            sh:path biolink:has_attribute ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 16 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 4 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:timepoint ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 15 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 9 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:object_label_closure ] ;
    sh:targetClass biolink:GeneRegulatesGeneAssociation .

biolink:GeneToDiseaseAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type biolink:subject_form_or_variant_qualifier ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:integer ;
            sh:description "number of things with a particular property" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path biolink:has_count ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 48 ;
            sh:path biolink:has_quotient ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 50 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:Disease ;
            sh:description "disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 52 ;
            sh:path biolink:qualified_predicate ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:subject_specialization_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 25 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 51 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 18 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:BiologicalSex ;
            sh:description "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:sex_qualifier ],
        [ sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:in ( "activity_or_abundance" "abundance" "activity" "expression" "synthesis" "degradation" "cleavage" "hydrolysis" "metabolic_processing" "mutation_rate" "stability" "folding" "localization" "transport" "absorption" "aggregation" "interaction" "release" "secretion" "uptake" "splicing" "molecular_interaction" "molecular_modification" "acetylation" "acylation" "alkylation" "amination" "carbamoylation" "ethylation" "glutathionylation" "glycation" "glycosylation" "glucuronidation" "n_linked_glycosylation" "o_linked_glycosylation" "hydroxylation" "lipidation" "farnesylation" "geranoylation" "myristoylation" "palmitoylation" "prenylation" "methylation" "nitrosation" "nucleotidylation" "phosphorylation" "ribosylation" "ADP-ribosylation" "sulfation" "sumoylation" "ubiquitination" "oxidation" "reduction" "carboxylation" ) ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 42 ;
            sh:path rdfs:label ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 24 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 49 ;
            sh:path biolink:has_percentage ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path dct:description ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:deprecated ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 53 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 34 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 28 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 29 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:object_specialization_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:integer ;
            sh:description "total number of things in a particular reference set" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 47 ;
            sh:path biolink:has_total ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 44 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:qualifiers ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:object_label_closure ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 19 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path biolink:category ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "gene in which variation is correlated with the disease, may be protective or causative or associative, or as a model" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ] ;
    sh:targetClass biolink:GeneToDiseaseAssociation .

biolink:GeneToDiseaseOrPhenotypicFeatureAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type biolink:subject_form_or_variant_qualifier ) ;
    sh:property [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 50 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "gene in which variation is correlated with the phenotypic feature" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:class biolink:DiseaseOrPhenotypicFeature ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:iri ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 24 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 48 ;
            sh:path biolink:has_quotient ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:qualifier ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 19 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path rdf:type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 28 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 52 ;
            sh:path biolink:qualified_predicate ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 44 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:datatype xsd:integer ;
            sh:description "total number of things in a particular reference set" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 47 ;
            sh:path biolink:has_total ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 42 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 49 ;
            sh:path biolink:has_percentage ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:BiologicalSex ;
            sh:description "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:sex_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:object_closure ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 18 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 51 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path rdf:predicate ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 53 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_evidence ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:in ( "activity_or_abundance" "abundance" "activity" "expression" "synthesis" "degradation" "cleavage" "hydrolysis" "metabolic_processing" "mutation_rate" "stability" "folding" "localization" "transport" "absorption" "aggregation" "interaction" "release" "secretion" "uptake" "splicing" "molecular_interaction" "molecular_modification" "acetylation" "acylation" "alkylation" "amination" "carbamoylation" "ethylation" "glutathionylation" "glycation" "glycosylation" "glucuronidation" "n_linked_glycosylation" "o_linked_glycosylation" "hydroxylation" "lipidation" "farnesylation" "geranoylation" "myristoylation" "palmitoylation" "prenylation" "methylation" "nitrosation" "nucleotidylation" "phosphorylation" "ribosylation" "ADP-ribosylation" "sulfation" "sumoylation" "ubiquitination" "oxidation" "reduction" "carboxylation" ) ;
            sh:maxCount 1 ;
            sh:order 0 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:subject_specialization_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 25 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:integer ;
            sh:description "number of things with a particular property" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path biolink:has_count ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 34 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:object_specialization_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 29 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:id ] ;
    sh:targetClass biolink:GeneToDiseaseOrPhenotypicFeatureAssociation .

biolink:GeneToEntityAssociationMixin a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "gene that is the subject of the association" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ] ;
    sh:targetClass biolink:GeneToEntityAssociationMixin .

biolink:GeneToExpressionSiteAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An association between a gene and a gene expression site, possibly qualified by stage/timing info." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 9 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:category ],
        [ sh:class biolink:LifeStage ;
            sh:description "stage at which the gene is expressed in the site" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:stage_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:publications ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 29 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:qualifiers ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 39 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:subject_closure ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 14 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "can be used to indicate magnitude, or also ranking" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:quantifier_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_subject ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 13 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 32 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "Gene or gene product positively within the specified anatomical entity (or subclass, i.e. cellular component) location." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path rdf:subject ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:description "location in which the gene is expressed" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 24 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "expression relationship" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:negated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 20 ;
            sh:path biolink:object_category ] ;
    sh:targetClass biolink:GeneToExpressionSiteAssociation .

biolink:GeneToGeneAssociation a sh:NodeShape ;
    sh:closed false ;
    sh:description "abstract parent class for different kinds of gene-gene or gene product to gene product relationships. Includes homology and interaction." ;
    sh:ignoredProperties ( biolink:quantifier_qualifier biolink:expression_site biolink:stage_qualifier rdf:type biolink:interacting_molecules_category biolink:phenotypic_state ) ;
    sh:property [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "the subject gene in the association. If the relation is symmetric, subject vs object is arbitrary. We allow a gene product to stand as a proxy for the gene or vice versa." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "the object gene in the association. If the relation is symmetric, subject vs object is arbitrary. We allow a gene product to stand as a proxy for the gene or vice versa." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ] ;
    sh:targetClass biolink:GeneToGeneAssociation .

biolink:GeneToGeneCoexpressionAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "Indicates that two genes are co-expressed, generally under the same conditions." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OntologyClass ;
            sh:description "Optional quantitative value indicating degree of expression." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:quantifier_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path rdf:type ],
        [ sh:class biolink:DiseaseOrPhenotypicFeature ;
            sh:description "in experiments (e.g. gene expression) assaying diseased or unhealthy tissue, the phenotypic state can be put here, e.g. MONDO ID. For healthy tissues, use XXX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:phenotypic_state ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 34 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 9 ;
            sh:path biolink:qualifiers ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "the object gene in the association. If the relation is symmetric, subject vs object is arbitrary. We allow a gene product to stand as a proxy for the gene or vice versa." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 6 ;
            sh:path rdf:object ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 15 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 42 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 41 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:negated ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 16 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:id ],
        [ sh:class biolink:LifeStage ;
            sh:description "stage during which gene or protein expression of takes place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:stage_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 26 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path rdfs:label ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:description "location in which gene or protein expression takes place. May be cell, tissue, or organ." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:expression_site ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 25 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 11 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "the subject gene in the association. If the relation is symmetric, subject vs object is arbitrary. We allow a gene product to stand as a proxy for the gene or vice versa." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 4 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path dct:description ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 31 ;
            sh:path biolink:retrieval_source_ids ] ;
    sh:targetClass biolink:GeneToGeneCoexpressionAssociation .

biolink:GeneToGeneFamilyAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "Set membership of a gene in a family of genes related by common evolutionary ancestry usually inferred by sequence comparisons. The genes in a given family generally share common sequence motifs which generally map onto shared gene product structure-function relationships." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:GeneFamily ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "membership of the gene in the given gene family." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:Gene ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ] ;
    sh:targetClass biolink:GeneToGeneFamilyAssociation .

biolink:GeneToGeneHomologyAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "A homology association between two genes. May be orthology (in which case the species of subject and object should differ) or paralogy (in which case the species may be the same)" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "homology relationship type" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "the subject gene in the association. If the relation is symmetric, subject vs object is arbitrary. We allow a gene product to stand as a proxy for the gene or vice versa." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "the object gene in the association. If the relation is symmetric, subject vs object is arbitrary. We allow a gene product to stand as a proxy for the gene or vice versa." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ] ;
    sh:targetClass biolink:GeneToGeneHomologyAssociation .

biolink:GeneToGeneProductRelationship a sh:NodeShape ;
    sh:closed true ;
    sh:description "A gene is transcribed and potentially translated to a gene product" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:Gene ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:GeneProductMixin ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ] ;
    sh:targetClass biolink:GeneToGeneProductRelationship .

biolink:GeneToGoTermAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:class biolink:Gene ;
            sh:description "gene, product or macromolecular complex that has the function associated with the GO term" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "class describing the activity, process or localization of the gene product" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ] ;
    sh:targetClass biolink:GeneToGoTermAssociation .

biolink:GeneToPathwayAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An interaction between a gene or gene product and a biological process or pathway." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "the gene or gene product entity that participates or influences the pathway" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:Pathway ;
            sh:description "the pathway that includes or is affected by the gene or gene product" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ] ;
    sh:targetClass biolink:GeneToPathwayAssociation .

biolink:GeneToPhenotypicFeatureAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:BiologicalSex ;
            sh:description "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:sex_qualifier ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 48 ;
            sh:path biolink:has_quotient ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:subject_specialization_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 51 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 34 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:object_specialization_qualifier ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 44 ;
            sh:path biolink:has_attribute ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 19 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:class biolink:PhenotypicFeature ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 42 ;
            sh:path rdfs:label ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 24 ;
            sh:path biolink:subject_category ],
        [ sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:in ( "activity_or_abundance" "abundance" "activity" "expression" "synthesis" "degradation" "cleavage" "hydrolysis" "metabolic_processing" "mutation_rate" "stability" "folding" "localization" "transport" "absorption" "aggregation" "interaction" "release" "secretion" "uptake" "splicing" "molecular_interaction" "molecular_modification" "acetylation" "acylation" "alkylation" "amination" "carbamoylation" "ethylation" "glutathionylation" "glycation" "glycosylation" "glucuronidation" "n_linked_glycosylation" "o_linked_glycosylation" "hydroxylation" "lipidation" "farnesylation" "geranoylation" "myristoylation" "palmitoylation" "prenylation" "methylation" "nitrosation" "nucleotidylation" "phosphorylation" "ribosylation" "ADP-ribosylation" "sulfation" "sumoylation" "ubiquitination" "oxidation" "reduction" "carboxylation" ) ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 29 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:negated ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 49 ;
            sh:path biolink:has_percentage ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 53 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:id ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "gene in which variation is correlated with the phenotypic feature" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 9 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:integer ;
            sh:description "number of things with a particular property" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path biolink:has_count ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 52 ;
            sh:path biolink:qualified_predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 25 ;
            sh:path biolink:object_category ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 18 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:integer ;
            sh:description "total number of things in a particular reference set" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 47 ;
            sh:path biolink:has_total ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:qualifiers ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 28 ;
            sh:path biolink:subject_category_closure ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 50 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_supporting_studies ] ;
    sh:targetClass biolink:GeneToPhenotypicFeatureAssociation .

biolink:Genome a sh:NodeShape ;
    sh:closed true ;
    sh:description "A genome is the sum of genetic material within a cell or virion." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:category ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "connects a genomic feature to its sequence" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:has_biological_sequence ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:iri ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:in_taxon_label ] ;
    sh:targetClass biolink:Genome .

biolink:GenomicBackgroundExposure a sh:NodeShape ;
    sh:closed true ;
    sh:description "A genomic background exposure is where an individual's specific genomic background of genes, sequence variants or other pre-existing genomic conditions constitute a kind of 'exposure' to the organism, leading to or influencing an outcome." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:in_taxon ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 9 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:category ],
        [ sh:class biolink:Gene ;
            sh:description "connects an entity with one or more gene or gene products" ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_gene_or_gene_product ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 8 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "connects a genomic feature to its sequence" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:has_biological_sequence ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:full_name ] ;
    sh:targetClass biolink:GenomicBackgroundExposure .

biolink:GenomicEntity a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "connects a genomic feature to its sequence" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:has_biological_sequence ] ;
    sh:targetClass biolink:GenomicEntity .

biolink:GenomicSequenceLocalization a sh:NodeShape ;
    sh:closed true ;
    sh:description "A relationship between a sequence feature and a nucleic acid entity it is localized to. The reference entity may be a chromosome, chromosome region or information entity such as a contig." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 42 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 26 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 32 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path rdfs:label ],
        [ sh:description "The phase for a coding sequence entity. For example, phase of a CDS as represented in a GFF3 with a value of 0, 1 or 2." ;
            sh:in ( "0" "1" "2" ) ;
            sh:maxCount 1 ;
            sh:order 4 ;
            sh:path biolink:phase ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:negated ],
        [ sh:class biolink:NucleicAcidEntity ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path rdf:subject ],
        [ sh:class biolink:NucleicAcidEntity ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_evidence ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 16 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:integer ;
            sh:description "The position at which the subject nucleic acid entity ends on the chromosome or other entity to which it is located on." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:end_interbase_coordinate ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 11 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:category ],
        [ sh:description "The version of the genome on which a feature is located. For example, GRCh38 for Homo sapiens." ;
            sh:in ( "+" "-" "." "?" ) ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path biolink:genome_build ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 35 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:integer ;
            sh:description "The position at which the subject nucleic acid entity starts on the chromosome or other entity to which it is located on. (ie: the start of the sequence being referenced is 0)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:start_interbase_coordinate ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path rdf:type ],
        [ sh:description "The strand on which a feature is located. Has a value of '+' (sense strand or forward strand) or '-' (anti-sense strand or reverse strand)." ;
            sh:in ( "+" "-" "." "?" ) ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path biolink:strand ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 17 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:object_category ] ;
    sh:targetClass biolink:GenomicSequenceLocalization .

biolink:GenotypeAsAModelOfDiseaseAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path biolink:qualified_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "The relationship to the disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:Genotype ;
            sh:description "A genotype that has a role in modeling the disease." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 40 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 44 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 42 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Disease ;
            sh:description "disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ] ;
    sh:targetClass biolink:GenotypeAsAModelOfDiseaseAssociation .

biolink:GenotypeToDiseaseAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "E.g. is pathogenic for" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:class biolink:Genotype ;
            sh:description "a genotype that is associated in some way with a disease state" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 40 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 44 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path biolink:qualified_predicate ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:Disease ;
            sh:description "a disease that is associated with that genotype" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 42 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:frequency_qualifier ] ;
    sh:targetClass biolink:GenotypeToDiseaseAssociation .

biolink:GenotypeToEntityAssociationMixin a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:Genotype ;
            sh:description "genotype that is the subject of the association" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ] ;
    sh:targetClass biolink:GenotypeToEntityAssociationMixin .

biolink:GenotypeToGeneAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "Any association between a genotype and a gene. The genotype have have multiple variants in that gene or a single one. There is no assumption of cardinality" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:Gene ;
            sh:description "gene implicated in genotype" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "the relationship type used to connect genotype to gene" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Genotype ;
            sh:description "parent genotype" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ] ;
    sh:targetClass biolink:GenotypeToGeneAssociation .

biolink:GenotypeToGenotypePartAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "Any association between one genotype and a genotypic entity that is a sub-component of it" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:Genotype ;
            sh:description "child genotype" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:class biolink:Genotype ;
            sh:description "parent genotype" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ] ;
    sh:targetClass biolink:GenotypeToGenotypePartAssociation .

biolink:GenotypeToPhenotypicFeatureAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "Any association between one genotype and a phenotypic feature, where having the genotype confers the phenotype, either in isolation or through environment" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 16 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:BiologicalSex ;
            sh:description "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:sex_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:id ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 49 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 42 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path rdf:type ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 17 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:category ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 32 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:object_specialization_qualifier ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path biolink:has_quotient ],
        [ sh:datatype xsd:string ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:integer ;
            sh:description "total number of things in a particular reference set" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:has_total ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:class biolink:PhenotypicFeature ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 47 ;
            sh:path biolink:has_percentage ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 51 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:integer ;
            sh:description "number of things with a particular property" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 44 ;
            sh:path biolink:has_count ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 50 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 48 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:subject_specialization_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:Genotype ;
            sh:description "genotype that is associated with the phenotypic feature" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path dct:description ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 11 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 52 ;
            sh:path biolink:qualified_predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 26 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 35 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 53 ;
            sh:path biolink:frequency_qualifier ] ;
    sh:targetClass biolink:GenotypeToPhenotypicFeatureAssociation .

biolink:GenotypeToVariantAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "Any association between a genotype and a sequence variant." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:Genotype ;
            sh:description "parent genotype" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:SequenceVariant ;
            sh:description "gene implicated in genotype" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "the relationship type used to connect genotype to gene" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ] ;
    sh:targetClass biolink:GenotypeToVariantAssociation .

biolink:GenotypicSex a sh:NodeShape ;
    sh:closed true ;
    sh:description "An attribute corresponding to the genotypic sex of the individual, based upon genotypic composition of sex chromosomes." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:id ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ] ;
    sh:targetClass biolink:GenotypicSex .

biolink:GeographicExposure a sh:NodeShape ;
    sh:closed true ;
    sh:description "A geographic exposure is a factor relating to geographic proximity to some impactful entity." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 3 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ] ;
    sh:targetClass biolink:GeographicExposure .

biolink:GeographicLocation a sh:NodeShape ;
    sh:closed true ;
    sh:description "a location that can be described in lat/long coordinates" ;
    sh:ignoredProperties ( biolink:timepoint rdf:type ) ;
    sh:property [ sh:datatype xsd:float ;
            sh:description "latitude" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:latitude ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:float ;
            sh:description "longitude" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:longitude ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ] ;
    sh:targetClass biolink:GeographicLocation .

biolink:GeographicLocationAtTime a sh:NodeShape ;
    sh:closed true ;
    sh:description "a location that can be described in lat/long coordinates, for a particular time" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:float ;
            sh:description "latitude" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:latitude ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:float ;
            sh:description "longitude" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:longitude ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:id ] ;
    sh:targetClass biolink:GeographicLocationAtTime .

biolink:GrossAnatomicalStructure a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ] ;
    sh:targetClass biolink:GrossAnatomicalStructure .

biolink:Haplotype a sh:NodeShape ;
    sh:closed true ;
    sh:description "A set of zero or more Alleles on a single instance of a Sequence[VMC]" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:in_taxon_label ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "connects a genomic feature to its sequence" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:has_biological_sequence ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:id ] ;
    sh:targetClass biolink:Haplotype .

biolink:Hospitalization a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:description ] ;
    sh:targetClass biolink:Hospitalization .

biolink:HospitalizationOutcome a sh:NodeShape ;
    sh:closed true ;
    sh:description "An outcome resulting from an exposure event which is the increased manifestation of acute (e.g. emergency room visit) or chronic (inpatient) hospitalization." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:HospitalizationOutcome .

biolink:Human a sh:NodeShape ;
    sh:closed true ;
    sh:description "A member of the the species Homo sapiens." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ] ;
    sh:targetClass biolink:Human .

biolink:InformationContentEntityToNamedThingAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "association between a named thing and a information content entity where the specific context of the relationship between that named thing and the publication is unknown. For example, model organisms databases often capture the knowledge that a gene is found in a journal article, but not specifically the context in which that gene was documented in the article. In these cases, this association with the accompanying predicate 'mentions' could be used. Conversely, for more specific associations (like 'gene to disease association', the publication should be captured as an edge property)." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ] ;
    sh:targetClass biolink:InformationContentEntityToNamedThingAssociation .

biolink:Invertebrate a sh:NodeShape ;
    sh:closed true ;
    sh:description "An animal lacking a vertebral column. This group consists of 98% of all animal species." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ] ;
    sh:targetClass biolink:Invertebrate .

biolink:JournalArticle a sh:NodeShape ;
    sh:closed true ;
    sh:description "an article, typically presenting results of research, that is published in an issue of a scientific journal." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:Agent ;
            sh:description "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication." ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:authors ],
        [ sh:datatype xsd:string ;
            sh:description "volume of a book or music release in a collection/series or a published collection of journal issues in a serial publication" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:volume ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "executive  summary of a publication" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:summary ],
        [ sh:datatype xsd:string ;
            sh:description "issue of a newspaper, a scientific journal or magazine for reference purpose" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:issue ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:string ;
            sh:description "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass." ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path dct:type ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:string ;
            sh:description "Different kinds of publication subtypes will have different preferred identifiers (curies when feasible). Precedence of identifiers for scientific articles is as follows: PMID if available; DOI if not; actual alternate CURIE otherwise. Enclosing publications (i.e. referenced by 'published in' node property) such as books and journals, should have industry-standard identifier such as from ISBN and ISSN." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Optional value, if used locally as a convenience, is set to the iso abbreviation of the 'published in' parent." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:iso_abbreviation ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "The enclosing parent serial containing the article should have industry-standard identifier from ISSN." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:published_in ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "keywords tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:keywords ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 24 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "mesh terms tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:mesh_terms ],
        [ sh:datatype xsd:string ;
            sh:description "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:pages ] ;
    sh:targetClass biolink:JournalArticle .

biolink:LogOddsAnalysisResult a sh:NodeShape ;
    sh:closed true ;
    sh:description "A result of a log odds ratio analysis." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:rights ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ] ;
    sh:targetClass biolink:LogOddsAnalysisResult .

biolink:MacromolecularComplex a sh:NodeShape ;
    sh:closed true ;
    sh:description "A stable assembly of two or more macromolecules, i.e. proteins, nucleic acids, carbohydrates or lipids, in which at least one component is a protein and the constituent parts function together." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdf:type ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path rdfs:label ] ;
    sh:targetClass biolink:MacromolecularComplex .

biolink:MacromolecularMachineToBiologicalProcessAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "A functional association between a macromolecular machine (gene, gene product or complex) and a biological process or pathway (as represented in the GO biological process branch), where the entity carries out some part of the process, regulates it, or acts upstream of it." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:subject_closure ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 13 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:MacromolecularMachineMixin ;
            sh:description "gene, product or macromolecular complex that has the function associated with the GO term" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:iri ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 28 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 31 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:qualifiers ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:object_label_closure ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdf:type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:id ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "A statement qualifier representing a taxonomic category of species in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:species_context_qualifier ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:negated ],
        [ sh:class biolink:BiologicalProcess ;
            sh:description "class describing the activity, process or localization of the gene product" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 38 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:object_category_closure ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:publications ] ;
    sh:targetClass biolink:MacromolecularMachineToBiologicalProcessAssociation .

biolink:MacromolecularMachineToCellularComponentAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "A functional association between a macromolecular machine (gene, gene product or complex) and a cellular component (as represented in the GO cellular component branch), where the entity carries out its function in the cellular component." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path rdfs:label ],
        [ sh:class biolink:MacromolecularMachineMixin ;
            sh:description "gene, product or macromolecular complex that has the function associated with the GO term" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:has_evidence ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 13 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path dct:description ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:negated ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:CellularComponent ;
            sh:description "class describing the activity, process or localization of the gene product" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 31 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:object_category_closure ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "A statement qualifier representing a taxonomic category of species in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:species_context_qualifier ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 28 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:iri ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 38 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:subject_closure ] ;
    sh:targetClass biolink:MacromolecularMachineToCellularComponentAssociation .

biolink:MacromolecularMachineToEntityAssociationMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "an association which has a macromolecular machine mixin as a subject" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "A statement qualifier representing a taxonomic category of species in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:species_context_qualifier ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ] ;
    sh:targetClass biolink:MacromolecularMachineToEntityAssociationMixin .

biolink:MacromolecularMachineToMolecularActivityAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "A functional association between a macromolecular machine (gene, gene product or complex) and a molecular activity (as represented in the GO molecular function branch), where the entity carries out the activity, or contributes to its execution." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 31 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:id ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path dct:description ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 28 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:publications ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 38 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "A statement qualifier representing a taxonomic category of species in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:species_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:has_evidence ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:MacromolecularMachineMixin ;
            sh:description "gene, product or macromolecular complex that has the function associated with the GO term" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:MolecularActivity ;
            sh:description "class describing the activity, process or localization of the gene product" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path rdfs:label ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 13 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:primary_knowledge_source ] ;
    sh:targetClass biolink:MacromolecularMachineToMolecularActivityAssociation .

biolink:Mammal a sh:NodeShape ;
    sh:closed true ;
    sh:description "A member of the class Mammalia, a clade of endothermic amniotes distinguished from reptiles and birds by the possession of hair, three middle ear bones, mammary glands, and a neocortex" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ] ;
    sh:targetClass biolink:Mammal .

biolink:MappingCollection a sh:NodeShape ;
    sh:closed false ;
    sh:description "A collection of deprecated mappings." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:PredicateMapping ;
            sh:description "A collection of relationships that are not used in biolink, but have biolink patterns that can be used to replace them.  This is a temporary slot to help with the transition to the fully qualified predicate model in Biolink3." ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path biolink:predicate_mappings ] ;
    sh:targetClass biolink:MappingCollection .

biolink:MaterialSampleDerivationAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An association between a material sample and the material entity from which it is derived." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:NamedThing ;
            sh:description "the material entity the sample was derived from. This may be another material sample, or any other material entity, including for example an organism, a geographic feature, or some environmental material." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "derivation relationship" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:MaterialSample ;
            sh:description "the material sample being described" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ] ;
    sh:targetClass biolink:MaterialSampleDerivationAssociation .

biolink:MaterialSampleToDiseaseOrPhenotypicFeatureAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An association between a material sample and a disease or phenotype." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:class biolink:DiseaseOrPhenotypicFeature ;
            sh:description "disease or phenotype" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:MaterialSample ;
            sh:description "the material sample being described" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ] ;
    sh:targetClass biolink:MaterialSampleToDiseaseOrPhenotypicFeatureAssociation .

biolink:MaterialSampleToEntityAssociationMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "An association between a material sample and something." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:MaterialSample ;
            sh:description "the material sample being described" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ] ;
    sh:targetClass biolink:MaterialSampleToEntityAssociationMixin .

biolink:MicroRNA a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ] ;
    sh:targetClass biolink:MicroRNA .

biolink:ModelToDiseaseAssociationMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "This mixin is used for any association class for which the subject (source node) plays the role of a 'model', in that it recapitulates some features of the disease in a way that is useful for studying the disease outside a patient carrying the disease" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "The relationship to the disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:NamedThing ;
            sh:description "The entity that serves as the model of the disease. This may be an organism, a strain of organism, a genotype or variant that exhibits similar features, or a gene that when mutated exhibits features of the disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ] ;
    sh:targetClass biolink:ModelToDiseaseAssociationMixin .

biolink:MolecularActivityToChemicalEntityAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "Added in response to capturing relationship between microbiome activities as measured via measurements of blood analytes as collected via blood and stool samples" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:class biolink:ChemicalEntity ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:class biolink:MolecularActivity ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ] ;
    sh:targetClass biolink:MolecularActivityToChemicalEntityAssociation .

biolink:MolecularActivityToMolecularActivityAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "Added in response to capturing relationship between microbiome activities as measured via measurements of blood analytes as collected via blood and stool samples" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:MolecularActivity ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:MolecularActivity ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ] ;
    sh:targetClass biolink:MolecularActivityToMolecularActivityAssociation .

biolink:MolecularActivityToPathwayAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "Association that holds the relationship between a reaction and the pathway it participates in." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:MolecularActivity ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:Pathway ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ] ;
    sh:targetClass biolink:MolecularActivityToPathwayAssociation .

biolink:MolecularMixture a sh:NodeShape ;
    sh:closed true ;
    sh:description "A molecular mixture is a chemical mixture composed of two or more molecular entities with known concentration and stoichiometry." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:xref ],
        [ sh:description "the method or process of administering a pharmaceutical compound to achieve a therapeutic effect in humans or animals." ;
            sh:in ( "inhalation" "oral" "absorption_through_the_skin" "intravenous_injection" ) ;
            sh:order 3 ;
            sh:path biolink:routes_of_delivery ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:is_supplement ],
        [ sh:datatype xsd:string ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:trade_name ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:category ],
        [ sh:description "An agglomeration of drug regulatory status worldwide. Not specific to FDA." ;
            sh:in ( "discovery_and_development_phase" "preclinical_research_phase" "fda_clinical_research_phase" "fda_review_phase_4" "fda_post_market_safety_review" "fda_clinical_research_phase_1" "fda_clinical_research_phase_2" "fda_clinical_research_phase_3" "fda_clinical_research_phase_4" "fda_fast_track" "fda_breakthrough_therapy" "fda_accelerated_approval" "fda_priority_review" "regular_fda_approval" "post_approval_withdrawal" ) ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path biolink:drug_regulatory_status_world_wide ],
        [ sh:datatype xsd:boolean ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:is_toxic ],
        [ sh:class biolink:ChemicalRole ;
            sh:description "A role is particular behaviour which a chemical entity may exhibit." ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:has_chemical_role ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:has_attribute ],
        [ sh:description "Should be the highest level of FDA approval this chemical entity or device has, regardless of which disease, condition or phenotype it is currently being reviewed to treat.  For specific levels of FDA approval for a specific condition, disease, phenotype, etc., see the association slot, 'clinical approval status.'" ;
            sh:in ( "discovery_and_development_phase" "preclinical_research_phase" "fda_clinical_research_phase" "fda_review_phase_4" "fda_post_market_safety_review" "fda_clinical_research_phase_1" "fda_clinical_research_phase_2" "fda_clinical_research_phase_3" "fda_clinical_research_phase_4" "fda_fast_track" "fda_breakthrough_therapy" "fda_accelerated_approval" "fda_priority_review" "regular_fda_approval" "post_approval_withdrawal" ) ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path biolink:highest_FDA_approval_status ],
        [ sh:description "" ;
            sh:in ( "over_the_counter" "prescription" ) ;
            sh:order 5 ;
            sh:path biolink:available_from ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:max_tolerated_dose ] ;
    sh:targetClass biolink:MolecularMixture .

biolink:MortalityOutcome a sh:NodeShape ;
    sh:closed true ;
    sh:description "An outcome of death from resulting from an exposure event." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:MortalityOutcome .

biolink:NamedThingAssociatedWithLikelihoodOfNamedThingAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path rdf:type ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 11 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 42 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path rdfs:label ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 32 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 35 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 26 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:subject_context_qualifier ],
        [ sh:class biolink:PopulationOfIndividualOrganisms ;
            sh:description "a biological population (general, study, cohort, etc.) with a specific set of characteristics to constrain an association." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:population_context_qualifier ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:qualifier ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 17 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:OntologyClass ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:object_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 16 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:object_category ] ;
    sh:targetClass biolink:NamedThingAssociatedWithLikelihoodOfNamedThingAssociation .

biolink:NoncodingRNAProduct a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ] ;
    sh:targetClass biolink:NoncodingRNAProduct .

biolink:NucleicAcidSequenceMotif a sh:NodeShape ;
    sh:closed true ;
    sh:description "A linear nucleotide sequence pattern that is widespread and has, or is conjectured to have, a biological significance. e.g. the TATA box promoter motif, transcription factor binding consensus sequences." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ] ;
    sh:targetClass biolink:NucleicAcidSequenceMotif .

biolink:NucleosomeModification a sh:NodeShape ;
    sh:closed true ;
    sh:description "A chemical modification of a histone protein within a nucleosome octomer or a substitution of a histone with a variant histone isoform. e.g. Histone 4 Lysine 20 methylation (H4K20me), histone variant H2AZ substituting H2A." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:category ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:id ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "connects a genomic feature to its sequence" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:has_biological_sequence ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ] ;
    sh:targetClass biolink:NucleosomeModification .

biolink:ObservedExpectedFrequencyAnalysisResult a sh:NodeShape ;
    sh:closed true ;
    sh:description "A result of a observed expected frequency analysis." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:format ] ;
    sh:targetClass biolink:ObservedExpectedFrequencyAnalysisResult .

biolink:Occurrent a sh:NodeShape ;
    sh:closed false ;
    sh:description "A processual entity." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:Occurrent .

biolink:OrganismAttribute a sh:NodeShape ;
    sh:closed true ;
    sh:description "describes a characteristic of an organismal entity." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:iri ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ] ;
    sh:targetClass biolink:OrganismAttribute .

biolink:OrganismTaxonToEntityAssociation a sh:NodeShape ;
    sh:closed false ;
    sh:description "An association between an organism taxon and another entity" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "organism taxon that is the subject of the association" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ] ;
    sh:targetClass biolink:OrganismTaxonToEntityAssociation .

biolink:OrganismTaxonToEnvironmentAssociation a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "the taxon that is the subject of the association" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:NamedThing ;
            sh:description "the environment in which the organism occurs" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "predicate describing the relationship between the taxon and the environment" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ] ;
    sh:targetClass biolink:OrganismTaxonToEnvironmentAssociation .

biolink:OrganismTaxonToOrganismTaxonAssociation a sh:NodeShape ;
    sh:closed false ;
    sh:description "A relationship between two organism taxon nodes" ;
    sh:ignoredProperties ( biolink:associated_environmental_context rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "organism taxon that is the subject of the association" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ] ;
    sh:targetClass biolink:OrganismTaxonToOrganismTaxonAssociation .

biolink:OrganismTaxonToOrganismTaxonInteraction a sh:NodeShape ;
    sh:closed true ;
    sh:description "An interaction relationship between two taxa. This may be a symbiotic relationship (encompassing mutualism and parasitism), or it may be non-symbiotic. Example: plague transmitted_by flea; cattle domesticated_by Homo sapiens; plague infects Homo sapiens" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 38 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "the taxon that is the subject of the association" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 28 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:object_category ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 13 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "the environment in which the two taxa interact" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:associated_environmental_context ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdf:type ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 31 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path dct:description ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "the taxon that is the subject of the association" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:publications ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:subject_category_closure ] ;
    sh:targetClass biolink:OrganismTaxonToOrganismTaxonInteraction .

biolink:OrganismTaxonToOrganismTaxonSpecialization a sh:NodeShape ;
    sh:closed true ;
    sh:description "A child-parent relationship between two taxa. For example: Homo sapiens subclass_of Homo" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "the more specific taxon" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "the more general taxon" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ] ;
    sh:targetClass biolink:OrganismTaxonToOrganismTaxonSpecialization .

biolink:OrganismToOrganismAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:IndividualOrganism ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:IndividualOrganism ;
            sh:description "An association between two individual organisms." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ] ;
    sh:targetClass biolink:OrganismToOrganismAssociation .

biolink:OrganismalEntityAsAModelOfDiseaseAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 40 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "The relationship to the disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 42 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path biolink:qualified_predicate ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 44 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:OrganismalEntity ;
            sh:description "A organismal entity (strain, breed) with a predisposition to a disease, or bred/created specifically to model a disease." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:Disease ;
            sh:description "disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ] ;
    sh:targetClass biolink:OrganismalEntityAsAModelOfDiseaseAssociation .

biolink:PairwiseGeneToGeneInteraction a sh:NodeShape ;
    sh:closed true ;
    sh:description "An interaction between two genes or two gene products. May be physical (e.g. protein binding) or genetic (between genes). May be symmetric (e.g. protein interaction) or directed (e.g. phosphorylation)" ;
    sh:ignoredProperties ( biolink:interacting_molecules_category rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "the object gene in the association. If the relation is symmetric, subject vs object is arbitrary. We allow a gene product to stand as a proxy for the gene or vice versa." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "the subject gene in the association. If the relation is symmetric, subject vs object is arbitrary. We allow a gene product to stand as a proxy for the gene or vice versa." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "interaction relationship type" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ] ;
    sh:targetClass biolink:PairwiseGeneToGeneInteraction .

biolink:PairwiseMolecularInteraction a sh:NodeShape ;
    sh:closed true ;
    sh:description "An interaction at the molecular level between two physical entities" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:MolecularEntity ;
            sh:description "the subject gene in the association. If the relation is symmetric, subject vs object is arbitrary. We allow a gene product to stand as a proxy for the gene or vice versa." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "interaction relationship type" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:category ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 38 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 13 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:has_evidence ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:MolecularEntity ;
            sh:description "the object gene in the association. If the relation is symmetric, subject vs object is arbitrary. We allow a gene product to stand as a proxy for the gene or vice versa." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path rdf:object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:negated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:OntologyClass ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:interacting_molecules_category ],
        [ sh:datatype xsd:string ;
            sh:description "identifier for the interaction. This may come from an interaction database such as IMEX." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 31 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 28 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path rdfs:label ] ;
    sh:targetClass biolink:PairwiseMolecularInteraction .

biolink:Patent a sh:NodeShape ;
    sh:closed true ;
    sh:description "a legal document granted by a patent issuing authority which confers upon the patenter the sole right to make, use and sell an invention for a set period of time." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Different kinds of publication subtypes will have different preferred identifiers (curies when feasible). Precedence of identifiers for scientific articles is as follows: PMID if available; DOI if not; actual alternate CURIE otherwise. Enclosing publications (i.e. referenced by 'published in' node property) such as books and journals, should have industry-standard identifier such as from ISBN and ISSN." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass." ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path dct:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:class biolink:Agent ;
            sh:description "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication." ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:authors ],
        [ sh:datatype xsd:string ;
            sh:description "executive  summary of a publication" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:summary ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:format ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 20 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:description "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "keywords tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:keywords ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "mesh terms tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:mesh_terms ],
        [ sh:datatype xsd:string ;
            sh:description "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:pages ] ;
    sh:targetClass biolink:Patent .

biolink:PathognomonicityQuantifier a sh:NodeShape ;
    sh:closed false ;
    sh:description "A relationship quantifier between a variant or symptom and a disease, which is high when the presence of the feature implies the existence of the disease" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:PathognomonicityQuantifier .

biolink:PathologicalAnatomicalExposure a sh:NodeShape ;
    sh:closed true ;
    sh:description "An abnormal anatomical structure, when viewed as an exposure, representing an precondition, leading to or influencing an outcome, e.g. thrombosis leading to an ischemic disease outcome." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 3 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:has_attribute_type ] ;
    sh:targetClass biolink:PathologicalAnatomicalExposure .

biolink:PathologicalAnatomicalOutcome a sh:NodeShape ;
    sh:closed true ;
    sh:description "An outcome resulting from an exposure event which is the manifestation of an abnormal anatomical structure." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:PathologicalAnatomicalOutcome .

biolink:PathologicalAnatomicalStructure a sh:NodeShape ;
    sh:closed true ;
    sh:description "An anatomical structure with the potential of have an abnormal or deleterious effect at the subcellular, cellular, multicellular, or organismal level." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ] ;
    sh:targetClass biolink:PathologicalAnatomicalStructure .

biolink:PathologicalEntityMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "A pathological (abnormal) structure or process." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:PathologicalEntityMixin .

biolink:PathologicalProcess a sh:NodeShape ;
    sh:closed true ;
    sh:description "A biologic function or a process having an abnormal or deleterious effect at the subcellular, cellular, multicellular, or organismal level." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:class biolink:NamedThing ;
            sh:description "holds between a process and a continuant, where the continuant is an output of the process" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:has_output ],
        [ sh:class biolink:NamedThing ;
            sh:description "holds between a process and a continuant, where the continuant is an input into the process" ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_input ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 15 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:PhysicalEntity ;
            sh:description "holds between a process and a physical entity, where the physical entity executes the process" ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:enabled_by ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:id ] ;
    sh:targetClass biolink:PathologicalProcess .

biolink:PathologicalProcessExposure a sh:NodeShape ;
    sh:closed true ;
    sh:description "A pathological process, when viewed as an exposure, representing a precondition, leading to or influencing an outcome, e.g. autoimmunity leading to disease." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:xref ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 3 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:synonym ] ;
    sh:targetClass biolink:PathologicalProcessExposure .

biolink:PathologicalProcessOutcome a sh:NodeShape ;
    sh:closed true ;
    sh:description "An outcome resulting from an exposure event which is the manifestation of a pathological process." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:PathologicalProcessOutcome .

biolink:Phenomenon a sh:NodeShape ;
    sh:closed true ;
    sh:description "a fact or situation that is observed to exist or happen, especially one whose cause or explanation is in question" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:description ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:synonym ] ;
    sh:targetClass biolink:Phenomenon .

biolink:PhenotypicFeatureToDiseaseAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 50 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:iri ],
        [ sh:class biolink:PhenotypicFeature ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:integer ;
            sh:description "number of things with a particular property" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path biolink:has_count ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 45 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:qualifiers ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:has_evidence ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 28 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 31 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path dct:description ],
        [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path biolink:has_percentage ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:Disease ;
            sh:description "disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:id ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:publications ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 48 ;
            sh:path biolink:qualified_predicate ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 42 ;
            sh:path biolink:has_quotient ],
        [ sh:class biolink:BiologicalSex ;
            sh:description "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:sex_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 44 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 47 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 49 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 38 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:integer ;
            sh:description "total number of things in a particular reference set" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path biolink:has_total ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 13 ;
            sh:path biolink:agent_type ] ;
    sh:targetClass biolink:PhenotypicFeatureToDiseaseAssociation .

biolink:PhenotypicFeatureToEntityAssociationMixin a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:qualified_predicate ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:has_quotient ],
        [ sh:datatype xsd:integer ;
            sh:description "number of things with a particular property" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:has_count ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 6 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:class biolink:BiologicalSex ;
            sh:description "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:sex_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:datatype xsd:integer ;
            sh:description "total number of things in a particular reference set" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:has_total ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:PhenotypicFeature ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 11 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:has_percentage ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 8 ;
            sh:path biolink:object_direction_qualifier ] ;
    sh:targetClass biolink:PhenotypicFeatureToEntityAssociationMixin .

biolink:PhenotypicFeatureToPhenotypicFeatureAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "Association between two concept nodes of phenotypic character, qualified by the predicate used. This association may typically be used to specify 'similar_to' or 'member_of' relationships." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 53 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 49 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:object_category_closure ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 11 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:datatype xsd:integer ;
            sh:description "total number of things in a particular reference set" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:has_total ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:object_closure ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 17 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 48 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:PhenotypicFeature ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path biolink:has_quotient ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 47 ;
            sh:path biolink:has_percentage ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 16 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path rdf:type ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 32 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:subject_specialization_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 50 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 52 ;
            sh:path biolink:qualified_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:object_specialization_qualifier ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 51 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:class biolink:BiologicalSex ;
            sh:description "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:sex_qualifier ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:PhenotypicFeature ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path rdf:object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path biolink:iri ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 42 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:integer ;
            sh:description "number of things with a particular property" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 44 ;
            sh:path biolink:has_count ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 26 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 35 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path dct:description ] ;
    sh:targetClass biolink:PhenotypicFeatureToPhenotypicFeatureAssociation .

biolink:PhenotypicQuality a sh:NodeShape ;
    sh:closed true ;
    sh:description "A property of a phenotype" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ] ;
    sh:targetClass biolink:PhenotypicQuality .

biolink:PhenotypicSex a sh:NodeShape ;
    sh:closed true ;
    sh:description "An attribute corresponding to the phenotypic sex of the individual, based upon the reproductive organs present." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:iri ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:id ] ;
    sh:targetClass biolink:PhenotypicSex .

biolink:PhysicalEssence a sh:NodeShape ;
    sh:closed false ;
    sh:description "Semantic mixin concept.  Pertains to entities that have physical properties such as mass, volume, or charge." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:PhysicalEssence .

biolink:PhysicalEssenceOrOccurrent a sh:NodeShape ;
    sh:closed false ;
    sh:description "Either a physical or processual entity." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:PhysicalEssenceOrOccurrent .

biolink:PhysiologicalProcess a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:NamedThing ;
            sh:description "holds between a process and a continuant, where the continuant is an input into the process" ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_input ],
        [ sh:class biolink:NamedThing ;
            sh:description "holds between a process and a continuant, where the continuant is an output of the process" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:has_output ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:iri ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:id ],
        [ sh:class biolink:PhysicalEntity ;
            sh:description "holds between a process and a physical entity, where the physical entity executes the process" ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:enabled_by ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 15 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ] ;
    sh:targetClass biolink:PhysiologicalProcess .

biolink:PlanetaryEntity a sh:NodeShape ;
    sh:closed true ;
    sh:description "Any entity or process that exists at the level of the whole planet" ;
    sh:ignoredProperties ( biolink:timepoint rdf:type biolink:latitude biolink:longitude ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:id ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:provided_by ] ;
    sh:targetClass biolink:PlanetaryEntity .

biolink:Plant a sh:NodeShape ;
    sh:closed true ;
    sh:description "" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ] ;
    sh:targetClass biolink:Plant .

biolink:Polypeptide a sh:NodeShape ;
    sh:closed true ;
    sh:description "A polypeptide is a molecular entity characterized by availability in protein databases of amino-acid-based sequence representations of its precise primary structure; for convenience of representation, partial sequences of various kinds are included, even if they do not represent a physical molecule." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ] ;
    sh:targetClass biolink:Polypeptide .

biolink:PopulationToPopulationAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An association between a two populations" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A relationship type that holds between the subject and object populations. Standard mereological relations can be used. E.g. subject part-of object, subject overlaps object. Derivation relationships can also be used" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:PopulationOfIndividualOrganisms ;
            sh:description "the population that form the object of the association" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:PopulationOfIndividualOrganisms ;
            sh:description "the population that form the subject of the association" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ] ;
    sh:targetClass biolink:PopulationToPopulationAssociation .

biolink:PosttranslationalModification a sh:NodeShape ;
    sh:closed true ;
    sh:description "A chemical modification of a polypeptide or protein that occurs after translation. e.g. polypeptide cleavage to form separate proteins, methylation or acetylation of histone tail amino acids, protein ubiquitination." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ] ;
    sh:targetClass biolink:PosttranslationalModification .

biolink:PreprintPublication a sh:NodeShape ;
    sh:closed true ;
    sh:description "a document reresenting an early version of an author's original scholarly work, such as a research paper or a review, prior to formal peer review and publication in a peer-reviewed scholarly or scientific journal." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Different kinds of publication subtypes will have different preferred identifiers (curies when feasible). Precedence of identifiers for scientific articles is as follows: PMID if available; DOI if not; actual alternate CURIE otherwise. Enclosing publications (i.e. referenced by 'published in' node property) such as books and journals, should have industry-standard identifier such as from ISBN and ISSN." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:pages ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 20 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass." ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path dct:type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:string ;
            sh:description "keywords tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:keywords ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "mesh terms tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:mesh_terms ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:creation_date ],
        [ sh:class biolink:Agent ;
            sh:description "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication." ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:authors ],
        [ sh:datatype xsd:string ;
            sh:description "executive  summary of a publication" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:summary ] ;
    sh:targetClass biolink:PreprintPublication .

biolink:ProcessRegulatesProcessAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "Describes a regulatory relationship between two genes or gene products." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:BiologicalProcess ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:BiologicalProcess ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ] ;
    sh:targetClass biolink:ProcessRegulatesProcessAssociation .

biolink:ProcessedMaterial a sh:NodeShape ;
    sh:closed true ;
    sh:description "A chemical entity (often a mixture) processed for consumption for nutritional, medical or technical use. Is a material entity that is created or changed during material processing." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:has_attribute ],
        [ sh:description "" ;
            sh:in ( "over_the_counter" "prescription" ) ;
            sh:order 5 ;
            sh:path biolink:available_from ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path dct:description ],
        [ sh:description "Should be the highest level of FDA approval this chemical entity or device has, regardless of which disease, condition or phenotype it is currently being reviewed to treat.  For specific levels of FDA approval for a specific condition, disease, phenotype, etc., see the association slot, 'clinical approval status.'" ;
            sh:in ( "discovery_and_development_phase" "preclinical_research_phase" "fda_clinical_research_phase" "fda_review_phase_4" "fda_post_market_safety_review" "fda_clinical_research_phase_1" "fda_clinical_research_phase_2" "fda_clinical_research_phase_3" "fda_clinical_research_phase_4" "fda_fast_track" "fda_breakthrough_therapy" "fda_accelerated_approval" "fda_priority_review" "regular_fda_approval" "post_approval_withdrawal" ) ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path biolink:highest_FDA_approval_status ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:category ],
        [ sh:description "An agglomeration of drug regulatory status worldwide. Not specific to FDA." ;
            sh:in ( "discovery_and_development_phase" "preclinical_research_phase" "fda_clinical_research_phase" "fda_review_phase_4" "fda_post_market_safety_review" "fda_clinical_research_phase_1" "fda_clinical_research_phase_2" "fda_clinical_research_phase_3" "fda_clinical_research_phase_4" "fda_fast_track" "fda_breakthrough_therapy" "fda_accelerated_approval" "fda_priority_review" "regular_fda_approval" "post_approval_withdrawal" ) ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path biolink:drug_regulatory_status_world_wide ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:trade_name ],
        [ sh:datatype xsd:string ;
            sh:description "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:max_tolerated_dose ],
        [ sh:description "the method or process of administering a pharmaceutical compound to achieve a therapeutic effect in humans or animals." ;
            sh:in ( "inhalation" "oral" "absorption_through_the_skin" "intravenous_injection" ) ;
            sh:order 3 ;
            sh:path biolink:routes_of_delivery ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:boolean ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:is_toxic ],
        [ sh:datatype xsd:string ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:is_supplement ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:ChemicalRole ;
            sh:description "A role is particular behaviour which a chemical entity may exhibit." ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:has_chemical_role ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path rdfs:label ] ;
    sh:targetClass biolink:ProcessedMaterial .

biolink:Protein a sh:NodeShape ;
    sh:closed true ;
    sh:description "A gene product that is composed of a chain of amino acid sequences and is produced by ribosome-mediated translation of mRNA" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ] ;
    sh:targetClass biolink:Protein .

biolink:ProteinDomain a sh:NodeShape ;
    sh:closed true ;
    sh:description "A conserved part of protein sequence and (tertiary) structure that can evolve, function, and exist independently of the rest of the protein chain. Protein domains maintain their structure and function independently of the proteins in which they are found. e.g. an SH3 domain." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:category ],
        [ sh:class biolink:Gene ;
            sh:description "connects an entity with one or more gene or gene products" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:has_gene_or_gene_product ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:xref ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:provided_by ] ;
    sh:targetClass biolink:ProteinDomain .

biolink:ProteinFamily a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Gene ;
            sh:description "connects an entity with one or more gene or gene products" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:has_gene_or_gene_product ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:in_taxon ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:iri ] ;
    sh:targetClass biolink:ProteinFamily .

biolink:ProteinIsoform a sh:NodeShape ;
    sh:closed true ;
    sh:description "Represents a protein that is a specific isoform of the canonical or reference protein. See https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4114032/" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ] ;
    sh:targetClass biolink:ProteinIsoform .

biolink:RNAProduct a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:in_taxon_label ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:in_taxon ] ;
    sh:targetClass biolink:RNAProduct .

biolink:RNAProductIsoform a sh:NodeShape ;
    sh:closed true ;
    sh:description "Represents a protein that is a specific isoform of the canonical or reference RNA" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ] ;
    sh:targetClass biolink:RNAProductIsoform .

biolink:ReactionToCatalystAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:qualifiers ],
        [ sh:class biolink:MolecularEntity ;
            sh:description "the chemical entity or entity that is an interactor" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 33 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:object_label_closure ],
        [ sh:description "the direction of a reaction as constrained by the direction enum (ie: left_to_right, neutral, etc.)" ;
            sh:in ( "left_to_right" "right_to_left" "bidirectional" "neutral" ) ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path biolink:reaction_direction ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path rdf:type ],
        [ sh:class biolink:GeneOrGeneProduct ;
            sh:description "the chemical element that is the target of the statement" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 5 ;
            sh:path rdf:object ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 9 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:p_value ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 15 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 24 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 20 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:integer ;
            sh:description "the relationship between the relative quantities of substances taking part in a reaction or forming a compound, typically a ratio of whole integers." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:stoichiometry ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:qualifier ],
        [ sh:description "the side of a reaction being modeled (ie: left or right)" ;
            sh:in ( "left" "right" ) ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path biolink:reaction_side ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 40 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:knowledge_source ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 14 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_evidence ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 25 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:category ] ;
    sh:targetClass biolink:ReactionToCatalystAssociation .

biolink:ReactionToParticipantAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "the direction of a reaction as constrained by the direction enum (ie: left_to_right, neutral, etc.)" ;
            sh:in ( "left_to_right" "right_to_left" "bidirectional" "neutral" ) ;
            sh:maxCount 1 ;
            sh:order 1 ;
            sh:path biolink:reaction_direction ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:ChemicalEntity ;
            sh:description "the chemical element that is the target of the statement" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path rdf:object ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 9 ;
            sh:path biolink:publications ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:iri ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 40 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:negated ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 15 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:MolecularEntity ;
            sh:description "the chemical entity or entity that is an interactor" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:integer ;
            sh:description "the relationship between the relative quantities of substances taking part in a reaction or forming a compound, typically a ratio of whole integers." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:stoichiometry ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 20 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 33 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 25 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 8 ;
            sh:path biolink:qualifiers ],
        [ sh:description "the side of a reaction being modeled (ie: left or right)" ;
            sh:in ( "left" "right" ) ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path biolink:reaction_side ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 14 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path dct:description ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 24 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:p_value ] ;
    sh:targetClass biolink:ReactionToParticipantAssociation .

biolink:ReagentTargetedGene a sh:NodeShape ;
    sh:closed true ;
    sh:description "A gene altered in its expression level in the context of some experiment as a result of being targeted by gene-knockdown reagent(s) such as a morpholino or RNAi." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "connects a genomic feature to its sequence" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:has_biological_sequence ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ] ;
    sh:targetClass biolink:ReagentTargetedGene .

biolink:RegulatoryRegion a sh:NodeShape ;
    sh:closed true ;
    sh:description "A region (or regions) of the genome that contains known or putative regulatory elements that act in cis- or trans- to affect the transcription of gene" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "connects a genomic feature to its sequence" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:has_biological_sequence ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdf:type ] ;
    sh:targetClass biolink:RegulatoryRegion .

biolink:RelationshipQuantifier a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( biolink:has_total biolink:has_percentage biolink:has_quotient biolink:has_count rdf:type ) ;
    sh:targetClass biolink:RelationshipQuantifier .

biolink:RelationshipType a sh:NodeShape ;
    sh:closed true ;
    sh:description "An OWL property used as an edge label" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:id ] ;
    sh:targetClass biolink:RelationshipType .

biolink:RelativeFrequencyAnalysisResult a sh:NodeShape ;
    sh:closed true ;
    sh:description "A result of a relative frequency analysis." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:format ] ;
    sh:targetClass biolink:RelativeFrequencyAnalysisResult .

biolink:SensitivityQuantifier a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:SensitivityQuantifier .

biolink:SequenceAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An association between a sequence feature and a nucleic acid entity it is localized to." ;
    sh:ignoredProperties ( biolink:start_interbase_coordinate biolink:strand biolink:end_interbase_coordinate biolink:genome_build rdf:type biolink:phase ) ;
    sh:property [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ] ;
    sh:targetClass biolink:SequenceAssociation .

biolink:SequenceFeatureRelationship a sh:NodeShape ;
    sh:closed true ;
    sh:description "For example, a particular exon is part of a particular transcript or gene" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:NucleicAcidEntity ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:class biolink:NucleicAcidEntity ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ] ;
    sh:targetClass biolink:SequenceFeatureRelationship .

biolink:SequenceVariantModulatesTreatmentAssociation a sh:NodeShape ;
    sh:closed false ;
    sh:description "An association between a sequence variant and a treatment or health intervention. The treatment object itself encompasses both the disease and the drug used." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:Treatment ;
            sh:description "treatment whose efficacy is modulated by the subject variant" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:SequenceVariant ;
            sh:description "variant that modulates the treatment of some disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ] ;
    sh:targetClass biolink:SequenceVariantModulatesTreatmentAssociation .

biolink:Serial a sh:NodeShape ;
    sh:closed true ;
    sh:description "This class may rarely be instantiated except if use cases of a given knowledge graph support its utility." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:Agent ;
            sh:description "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication." ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:authors ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "issue of a newspaper, a scientific journal or magazine for reference purpose" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:issue ],
        [ sh:datatype xsd:string ;
            sh:description "volume of a book or music release in a collection/series or a published collection of journal issues in a serial publication" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:volume ],
        [ sh:datatype xsd:string ;
            sh:description "Should generally be set to an ontology class defined term for 'serial' or 'journal'." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:string ;
            sh:description "Serials (journals) should have industry-standard identifier such as from ISSN." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:pages ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "executive  summary of a publication" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:summary ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "Standard abbreviation for periodicals in the International Organization for Standardization (ISO) 4 system See https://www.issn.org/services/online-services/access-to-the-ltwa/. If the 'published in' property is set, then the iso abbreviation pertains to the broader publication context (the journal) within which the given publication node is embedded, not the publication itself." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:iso_abbreviation ],
        [ sh:datatype xsd:string ;
            sh:description "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass." ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:type ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:anyURI ;
            sh:description "mesh terms tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:mesh_terms ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 22 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "keywords tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:keywords ],
        [ sh:datatype xsd:string ;
            sh:description "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path rdfs:label ] ;
    sh:targetClass biolink:Serial .

biolink:SeverityValue a sh:NodeShape ;
    sh:closed true ;
    sh:description "describes the severity of a phenotypic feature or disease" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:id ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ] ;
    sh:targetClass biolink:SeverityValue .

biolink:SiRNA a sh:NodeShape ;
    sh:closed true ;
    sh:description "A small RNA molecule that is the product of a longer exogenous or endogenous dsRNA, which is either a bimolecular duplex or very long hairpin, processed (via the Dicer pathway) such that numerous siRNAs accumulate from both strands of the dsRNA. SRNAs trigger the cleavage of their target molecules." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:in_taxon_label ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:in_taxon ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ] ;
    sh:targetClass biolink:SiRNA .

biolink:SmallMolecule a sh:NodeShape ;
    sh:closed true ;
    sh:description "A small molecule entity is a molecular entity characterized by availability in small-molecule databases of SMILES, InChI, IUPAC, or other unambiguous representation of its precise chemical structure; for convenience of representation, any valid chemical representation is included, even if it is not strictly molecular (e.g., sodium ion)." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path dct:description ],
        [ sh:datatype xsd:boolean ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:is_toxic ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 16 ;
            sh:path biolink:has_attribute ],
        [ sh:description "" ;
            sh:in ( "over_the_counter" "prescription" ) ;
            sh:order 2 ;
            sh:path biolink:available_from ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:ChemicalRole ;
            sh:description "A role is particular behaviour which a chemical entity may exhibit." ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:has_chemical_role ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:trade_name ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:boolean ;
            sh:description "indicates whether a molecular entity is a metabolite" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:is_metabolite ],
        [ sh:datatype xsd:string ;
            sh:description "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:max_tolerated_dose ] ;
    sh:targetClass biolink:SmallMolecule .

biolink:Snv a sh:NodeShape ;
    sh:closed true ;
    sh:description "SNVs are single nucleotide positions in genomic DNA at which different sequence alternatives exist" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:xref ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:class biolink:Gene ;
            sh:description "Each allele can be associated with any number of genes" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:has_gene ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "The state of the sequence w.r.t a reference sequence" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:has_biological_sequence ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:synonym ] ;
    sh:targetClass biolink:Snv .

biolink:SocioeconomicExposure a sh:NodeShape ;
    sh:closed true ;
    sh:description "A socioeconomic exposure is a factor relating to social and financial status of an affected individual (e.g. poverty)." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:has_attribute_type ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 3 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:SocioeconomicAttribute ;
            sh:description "connects any entity to an attribute" ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ] ;
    sh:targetClass biolink:SocioeconomicExposure .

biolink:SocioeconomicOutcome a sh:NodeShape ;
    sh:closed true ;
    sh:description "An general social or economic outcome, such as healthcare costs, utilization, etc., resulting from an exposure event" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:SocioeconomicOutcome .

biolink:SpecificityQuantifier a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:SpecificityQuantifier .

biolink:StudyPopulation a sh:NodeShape ;
    sh:closed true ;
    sh:description "A group of people banded together or treated as a group as participants in a research study." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ] ;
    sh:targetClass biolink:StudyPopulation .

biolink:StudyResult a sh:NodeShape ;
    sh:closed false ;
    sh:description "A collection of data items from a study that are about a particular study subject or experimental unit (the 'focus' of the Result) - optionally with context/provenance metadata that may be relevant to the interpretation of this data as evidence." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ] ;
    sh:targetClass biolink:StudyResult .

biolink:StudyVariable a sh:NodeShape ;
    sh:closed true ;
    sh:description "a variable that is used as a measure in the investigation of a study" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:iri ] ;
    sh:targetClass biolink:StudyVariable .

biolink:SubjectOfInvestigation a sh:NodeShape ;
    sh:closed false ;
    sh:description "An entity that has the role of being studied in an investigation, study, or experiment" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:SubjectOfInvestigation .

biolink:TaxonToTaxonAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "An association between individuals of different taxa." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ] ;
    sh:targetClass biolink:TaxonToTaxonAssociation .

biolink:TextMiningResult a sh:NodeShape ;
    sh:closed true ;
    sh:description "A result of text mining." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ] ;
    sh:targetClass biolink:TextMiningResult .

biolink:ThingWithTaxon a sh:NodeShape ;
    sh:closed false ;
    sh:description "A mixin that can be used on any entity that can be taxonomically classified. This includes individual organisms; genes, their products and other molecular entities; body parts; biological processes" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ] ;
    sh:targetClass biolink:ThingWithTaxon .

biolink:TranscriptToGeneRelationship a sh:NodeShape ;
    sh:closed true ;
    sh:description "A gene is a collection of transcripts" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:class biolink:Transcript ;
            sh:description "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:class biolink:Gene ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ] ;
    sh:targetClass biolink:TranscriptToGeneRelationship .

biolink:TranscriptionFactorBindingSite a sh:NodeShape ;
    sh:closed true ;
    sh:description "A region (or regions) of the genome that contains a region of DNA known or predicted to bind a protein that modulates gene transcription" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "connects a genomic feature to its sequence" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:has_biological_sequence ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:in_taxon_label ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:in_taxon ] ;
    sh:targetClass biolink:TranscriptionFactorBindingSite .

biolink:VariantAsAModelOfDiseaseAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:class biolink:SequenceVariant ;
            sh:description "A variant that has a role in modeling the disease." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path biolink:qualified_predicate ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 42 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 44 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 40 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:Disease ;
            sh:description "disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The relationship to the disease" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ] ;
    sh:targetClass biolink:VariantAsAModelOfDiseaseAssociation .

biolink:VariantToDiseaseAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 42 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:class biolink:Disease ;
            sh:description "a disease that is associated with that variant" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 44 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "E.g. is pathogenic for" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 40 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:class biolink:SequenceVariant ;
            sh:description "a sequence variant in which the allele state is associated in some way with the disease state" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path biolink:qualified_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ] ;
    sh:targetClass biolink:VariantToDiseaseAssociation .

biolink:VariantToEntityAssociationMixin a sh:NodeShape ;
    sh:closed false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:SequenceVariant ;
            sh:description "a sequence variant in which the allele state is associated with some other entity" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ] ;
    sh:targetClass biolink:VariantToEntityAssociationMixin .

biolink:VariantToGeneAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An association between a variant and a gene, where the variant has a genetic association with the gene (i.e. is in linkage disequilibrium)" ;
    sh:ignoredProperties ( biolink:quantifier_qualifier biolink:expression_site biolink:stage_qualifier rdf:type biolink:phenotypic_state ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path rdfs:label ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 11 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:deprecated ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 12 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:object_category ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path biolink:publications ],
        [ sh:class biolink:Gene ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:iri ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 30 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 37 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 7 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 26 ;
            sh:path biolink:object_label_closure ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:SequenceVariant ;
            sh:description "a sequence variant in which the allele state is associated with some other entity" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:object_closure ] ;
    sh:targetClass biolink:VariantToGeneAssociation .

biolink:VariantToGeneExpressionAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An association between a variant and expression of a gene (i.e. e-QTL)" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 23 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:negated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Optional quantitative value indicating degree of expression." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:quantifier_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 15 ;
            sh:path biolink:knowledge_level ],
        [ sh:class biolink:Gene ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 6 ;
            sh:path rdf:object ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 41 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:original_object ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 11 ;
            sh:path biolink:has_evidence ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 9 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 27 ;
            sh:path biolink:subject_namespace ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 26 ;
            sh:path biolink:object_category_closure ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 16 ;
            sh:path biolink:agent_type ],
        [ sh:class biolink:LifeStage ;
            sh:description "stage during which gene or protein expression of takes place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:stage_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path rdf:predicate ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 34 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:class biolink:DiseaseOrPhenotypicFeature ;
            sh:description "in experiments (e.g. gene expression) assaying diseased or unhealthy tissue, the phenotypic state can be put here, e.g. MONDO ID. For healthy tissues, use XXX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:phenotypic_state ],
        [ sh:class biolink:AnatomicalEntity ;
            sh:description "location in which gene or protein expression takes place. May be cell, tissue, or organ." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:expression_site ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path rdfs:label ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 25 ;
            sh:path biolink:subject_category_closure ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 32 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:SequenceVariant ;
            sh:description "a sequence variant in which the allele state is associated with some other entity" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 31 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 21 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 42 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 35 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:adjusted_p_value ] ;
    sh:targetClass biolink:VariantToGeneExpressionAssociation .

biolink:VariantToPhenotypicFeatureAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 16 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:negated ],
        [ sh:class biolink:Disease ;
            sh:description "A context qualifier representing a disease or condition in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:disease_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path rdf:type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:object_category_closure ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 11 ;
            sh:path biolink:publications ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:subject_specialization_qualifier ],
        [ sh:class biolink:PhenotypicFeature ;
            sh:description "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 26 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:category ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:object_category ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 53 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:qualifiers ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 51 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:object_specialization_qualifier ],
        [ sh:datatype xsd:integer ;
            sh:description "total number of things in a particular reference set" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 45 ;
            sh:path biolink:has_total ],
        [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 52 ;
            sh:path biolink:qualified_predicate ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:double ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 46 ;
            sh:path biolink:has_quotient ],
        [ sh:class biolink:BiologicalSex ;
            sh:description "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:sex_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 49 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:datatype xsd:integer ;
            sh:description "number of things with a particular property" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 44 ;
            sh:path biolink:has_count ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 32 ;
            sh:path biolink:retrieval_source_ids ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:original_predicate ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 50 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 47 ;
            sh:path biolink:has_percentage ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_evidence ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 48 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:object_namespace ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:subject_closure ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 42 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path biolink:deprecated ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 17 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:SequenceVariant ;
            sh:description "a sequence variant in which the allele state is associated in some way with the phenotype state" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:subject_label_closure ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 35 ;
            sh:path biolink:has_supporting_studies ] ;
    sh:targetClass biolink:VariantToPhenotypicFeatureAssociation .

biolink:VariantToPopulationAssociation a sh:NodeShape ;
    sh:closed true ;
    sh:description "An association between a variant and a population, where the variant has particular frequency in the population" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 40 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:integer ;
            sh:description "number in object population that carry a particular allele, aka allele count" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:has_count ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 28 ;
            sh:path biolink:subject_namespace ],
        [ sh:datatype xsd:double ;
            sh:description "equivalent to has quotient multiplied by 100" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:has_percentage ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path biolink:original_subject ],
        [ sh:datatype xsd:string ;
            sh:description "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:primary_knowledge_source ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:nodeKind sh:Literal ;
            sh:order 38 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 43 ;
            sh:path biolink:deprecated ],
        [ sh:description "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information." ;
            sh:in ( "manual_agent" "automated_agent" "data_analysis_pipeline" "computational_model" "text_mining_agent" "image_processing_agent" "manual_validation_of_automated_agent" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 17 ;
            sh:path biolink:agent_type ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 24 ;
            sh:path biolink:subject_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 29 ;
            sh:path biolink:object_namespace ],
        [ sh:class biolink:PopulationOfIndividualOrganisms ;
            sh:description "the population that is observed to have the frequency" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path rdf:object ],
        [ sh:class biolink:Publication ;
            sh:description "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement." ;
            sh:nodeKind sh:IRI ;
            sh:order 11 ;
            sh:path biolink:publications ],
        [ sh:description "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true." ;
            sh:in ( "knowledge_assertion" "logical_entailment" "prediction" "statistical_association" "observation" "not_provided" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 16 ;
            sh:path biolink:knowledge_level ],
        [ sh:datatype xsd:string ;
            sh:description "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:original_object ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 36 ;
            sh:path biolink:id ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 22 ;
            sh:path biolink:subject_category ],
        [ sh:datatype xsd:string ;
            sh:description "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:knowledge_source ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 26 ;
            sh:path biolink:subject_category_closure ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 25 ;
            sh:path biolink:object_closure ],
        [ sh:datatype xsd:float ;
            sh:description "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 33 ;
            sh:path biolink:p_value ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an association to qualifiers that modify or qualify the meaning of that association" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:qualifiers ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 31 ;
            sh:path biolink:object_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 37 ;
            sh:path biolink:iri ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 23 ;
            sh:path biolink:object_category ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 41 ;
            sh:path dct:description ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000105> ;
            sh:description "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:frequency_qualifier ],
        [ sh:class biolink:OntologyClass ;
            sh:description "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:IRI ;
            sh:order 27 ;
            sh:path biolink:object_category_closure ],
        [ sh:datatype xsd:float ;
            sh:description "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 34 ;
            sh:path biolink:adjusted_p_value ],
        [ sh:datatype xsd:boolean ;
            sh:description "if set to true, then the association is negated i.e. is not true" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:negated ],
        [ sh:datatype xsd:string ;
            sh:description "rdf:type of biolink:Association should be fixed at rdf:Statement" ;
            sh:nodeKind sh:Literal ;
            sh:order 39 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:integer ;
            sh:description "number all populations that carry a particular allele, aka allele number" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:has_total ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:timepoint ],
        [ sh:datatype xsd:anyURI ;
            sh:description "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:original_predicate ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 42 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:Study ;
            sh:description "A study that produced information used as evidence to generate the knowledge expressed in an Association." ;
            sh:nodeKind sh:IRI ;
            sh:order 35 ;
            sh:path biolink:has_supporting_studies ],
        [ sh:datatype xsd:double ;
            sh:description "frequency of allele in population, expressed as a number with allele divided by number in reference population, aka allele frequency" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:has_quotient ],
        [ sh:class biolink:EvidenceType ;
            sh:description "connects an association to an instance of supporting evidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_evidence ],
        [ sh:class biolink:SequenceVariant ;
            sh:description "an allele that has a certain frequency in a given population" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path rdf:subject ],
        [ sh:datatype xsd:string ;
            sh:description "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX." ;
            sh:nodeKind sh:Literal ;
            sh:order 30 ;
            sh:path biolink:subject_label_closure ],
        [ sh:datatype xsd:string ;
            sh:description "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form." ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:aggregator_knowledge_source ],
        [ sh:datatype xsd:string ;
            sh:description "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:qualifier ],
        [ sh:class biolink:RetrievalSource ;
            sh:description "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge." ;
            sh:nodeKind sh:IRI ;
            sh:order 32 ;
            sh:path biolink:retrieval_source_ids ] ;
    sh:targetClass biolink:VariantToPopulationAssociation .

biolink:Vertebrate a sh:NodeShape ;
    sh:closed true ;
    sh:description "A sub-phylum of animals consisting of those having a bony or cartilaginous vertebral column." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ] ;
    sh:targetClass biolink:Vertebrate .

biolink:Virus a sh:NodeShape ;
    sh:closed true ;
    sh:description "A virus is a microorganism that replicates itself as a microRNA and infects the host cell." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ] ;
    sh:targetClass biolink:Virus .

biolink:WebPage a sh:NodeShape ;
    sh:closed true ;
    sh:description "a document that is published according to World Wide Web standards, which may incorporate text, graphics, sound, and/or other features." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "executive  summary of a publication" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:summary ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path dct:description ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass." ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path dct:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "Different kinds of publication subtypes will have different preferred identifiers (curies when feasible). Precedence of identifiers for scientific articles is as follows: PMID if available; DOI if not; actual alternate CURIE otherwise. Enclosing publications (i.e. referenced by 'published in' node property) such as books and journals, should have industry-standard identifier such as from ISBN and ISSN." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "mesh terms tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:mesh_terms ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "keywords tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:keywords ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:rights ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 20 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:Agent ;
            sh:description "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication." ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:authors ],
        [ sh:datatype xsd:string ;
            sh:description "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:pages ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:iri ] ;
    sh:targetClass biolink:WebPage .

biolink:Behavior a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:NamedThing ;
            sh:description "holds between a process and a continuant, where the continuant is an output of the process" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:has_output ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 15 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:NamedThing ;
            sh:description "holds between a process and a continuant, where the continuant is an input into the process" ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_input ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:in_taxon_label ],
        [ sh:class biolink:PhysicalEntity ;
            sh:description "holds between a process and a physical entity, where the physical entity executes the process" ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:enabled_by ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path dct:description ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ] ;
    sh:targetClass biolink:Behavior .

biolink:BehavioralFeature a sh:NodeShape ;
    sh:closed true ;
    sh:description "A phenotypic feature which is behavioral in nature." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ] ;
    sh:targetClass biolink:BehavioralFeature .

biolink:CellularComponent a sh:NodeShape ;
    sh:closed true ;
    sh:description "A location in or around a cell" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ] ;
    sh:targetClass biolink:CellularComponent .

biolink:ClinicalAttribute a sh:NodeShape ;
    sh:closed true ;
    sh:description "Attributes relating to a clinical manifestation" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:id ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:iri ] ;
    sh:targetClass biolink:ClinicalAttribute .

biolink:Dataset a sh:NodeShape ;
    sh:closed true ;
    sh:description "an item that refers to a collection of data from a data source." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ] ;
    sh:targetClass biolink:Dataset .

biolink:DatasetDistribution a sh:NodeShape ;
    sh:closed true ;
    sh:description "an item that holds distribution level information about a dataset." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:distribution_download_url ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 15 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ] ;
    sh:targetClass biolink:DatasetDistribution .

biolink:Device a sh:NodeShape ;
    sh:closed true ;
    sh:description "A thing made or adapted for a particular purpose, especially a piece of mechanical or electronic equipment" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:type ] ;
    sh:targetClass biolink:Device .

biolink:Exon a sh:NodeShape ;
    sh:closed true ;
    sh:description "A region of the transcript sequence within a gene which is not removed from the primary RNA transcript by RNA splicing." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ] ;
    sh:targetClass biolink:Exon .

biolink:GeneFamily a sh:NodeShape ;
    sh:closed true ;
    sh:description "any grouping of multiple genes or gene products related by common descent" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Gene ;
            sh:description "connects an entity with one or more gene or gene products" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:has_gene_or_gene_product ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:id ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:category ] ;
    sh:targetClass biolink:GeneFamily .

biolink:GeneProductMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "The functional molecular product of a single gene locus. Gene products are either proteins or functional RNA molecules." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ] ;
    sh:targetClass biolink:GeneProductMixin .

biolink:GeneticInheritance a sh:NodeShape ;
    sh:closed true ;
    sh:description "The pattern or 'mode' in which a particular genetic trait or disorder is passed from one generation to the next, e.g. autosomal dominant, autosomal recessive, etc." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ] ;
    sh:targetClass biolink:GeneticInheritance .

biolink:InformationContentEntity a sh:NodeShape ;
    sh:closed false ;
    sh:description "a piece of information that typically describes some topic of discourse or is used as support." ;
    sh:ignoredProperties ( biolink:summary biolink:resource_role biolink:iso_abbreviation biolink:ingest_date biolink:keywords biolink:published_in biolink:resource_id biolink:distribution_download_url biolink:authors dct:type biolink:issue biolink:chapter schema1:logo biolink:volume dct:distribution biolink:has_dataset biolink:upstream_resource_ids biolink:source_web_page biolink:pages rdf:type biolink:mesh_terms ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:rights ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ] ;
    sh:targetClass biolink:InformationContentEntity .

biolink:Onset a sh:NodeShape ;
    sh:closed true ;
    sh:description "The age group in which (disease) symptom manifestations appear." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path rdfs:label ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:id ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ] ;
    sh:targetClass biolink:Onset .

biolink:OrganismalEntity a sh:NodeShape ;
    sh:closed false ;
    sh:description "A named entity that is either a part of an organism, a whole organism, population or clade of organisms, excluding chemical entities" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ] ;
    sh:targetClass biolink:OrganismalEntity .

biolink:PredicateMapping a sh:NodeShape ;
    sh:closed true ;
    sh:description "A deprecated predicate mapping object contains the deprecated predicate and an example of the rewiring that should be done to use a qualified statement in its place." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a ‘full statement’ reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:qualified_predicate ],
        [ sh:class biolink:NamedThing ;
            sh:description "a list of terms from different schemas or terminology systems that have a broader, more general meaning. Broader terms are typically shown as parents in a hierarchy or tree." ;
            sh:nodeKind sh:IRI ;
            sh:order 20 ;
            sh:path biolink:broad_match ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 10 ;
            sh:path biolink:object_direction_qualifier ],
        [ sh:description "A statement qualifier representing a type of molecular control mechanism through which an effect of a chemical on a gene or gene product is mediated (e.g. 'agonism', 'inhibition', 'allosteric modulation', 'channel blocker')" ;
            sh:in ( "binding" "inhibition" "antibody_inhibition" "antagonism" "molecular_channel_blockage" "inverse_agonism" "negative_allosteric_modulation" "agonism" "molecular_channel_opening" "positive_allosteric_modulation" "potentiation" "activation" "inducer" "transcriptional_regulation" "signaling_mediated_control" "stabilization" "stimulation" "releasing_activity" ) ;
            sh:maxCount 1 ;
            sh:order 15 ;
            sh:path biolink:causal_mechanism_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:object_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "defines a specific part/component of the core concept (used in cases there this specific part has no IRI we can use to directly represent it, e.g. 'ESR1 transcript' q: polyA tail).  This qualifier is for the  subject of an association (or statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:subject_part_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:subject_aspect_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:predicate ],
        [ sh:datatype xsd:string ;
            sh:description "A qualifier that composes with a core subject/object concept to define a specific type, variant, alternative version of this concept. The composed concept remains a subtype or instance of the core concept. For example, the qualifier ‘mutation’ combines with the core concept ‘Gene X’ to express the compose concept ‘a mutation of Gene X’.  This qualifier specifies a change in the object of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:object_form_or_variant_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A qualifier that composes with a core subject/object  concept to describe something that is derived from the core concept.  For example, the qualifier ‘metabolite’ combines with a ‘Chemical X’ core concept to express the composed concept ‘a metabolite of Chemical X’.  This qualifier is for the subject of an association  (or statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:subject_derivative_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "A qualifier that composes with a core subject/object concept to define a specific type, variant, alternative version of this concept. The composed concept remains a subtype or instance of the core concept. For example, the qualifier ‘mutation’ combines with the core concept ‘Gene X’ to express the compose concept ‘a mutation of Gene X’.  This qualifier specifies a change in the subject of an association (aka: statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:subject_form_or_variant_qualifier ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:object_context_qualifier ],
        [ sh:description "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)." ;
            sh:in ( "increased" "upregulated" "decreased" "downregulated" ) ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path biolink:subject_direction_qualifier ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "A statement qualifier representing a taxonomic category of species in which a relationship expressed in an association took place." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:species_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:description "The predicate that is being replaced by the fully qualified representation of predicate + subject and object qualifiers.  Only to be used in test data and mapping data to help with the transition to the fully qualified predicate model. Not to be used in knowledge graphs." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:mapped_predicate ],
        [ sh:datatype xsd:string ;
            sh:description "defines a specific part/component of the core concept (used in cases there this specific part has no IRI we can use to directly represent it, e.g. 'ESR1 transcript' q: polyA tail).  This qualifier is for the  object of an association (or statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:object_part_qualifier ],
        [ sh:class biolink:NamedThing ;
            sh:description "a list of terms from different schemas or terminology systems that have a narrower, more specific meaning. Narrower terms are typically shown as children in a hierarchy or tree." ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:narrow_match ],
        [ sh:datatype xsd:string ;
            sh:description "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:anatomical_context_qualifier ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:subject_context_qualifier ],
        [ sh:class biolink:NamedThing ;
            sh:description "holds between two entities that have strictly equivalent meanings, with a high degree of confidence" ;
            sh:nodeKind sh:IRI ;
            sh:order 18 ;
            sh:path biolink:exact_match ],
        [ sh:datatype xsd:string ;
            sh:description "A qualifier that composes with a core subject/object  concept to describe something that is derived from the core concept.  For example, the qualifier ‘metabolite’ combines with a ‘Chemical X’ core concept to express the composed concept ‘a metabolite of Chemical X’.  This qualifier is for the object of an association  (or statement)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:object_derivative_qualifier ] ;
    sh:targetClass biolink:PredicateMapping .

biolink:Procedure a sh:NodeShape ;
    sh:closed true ;
    sh:description "A series of actions conducted in a certain order or manner" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:category ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:id ] ;
    sh:targetClass biolink:Procedure .

biolink:SocioeconomicAttribute a sh:NodeShape ;
    sh:closed true ;
    sh:description "Attributes relating to a socioeconomic manifestation" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:iri ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path biolink:has_quantitative_value ] ;
    sh:targetClass biolink:SocioeconomicAttribute .

biolink:TaxonomicRank a sh:NodeShape ;
    sh:closed true ;
    sh:description "A descriptor for the rank within a taxonomic classification. Example instance: TAXRANK:0000017 (kingdom)" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:id ] ;
    sh:targetClass biolink:TaxonomicRank .

biolink:Treatment a sh:NodeShape ;
    sh:closed true ;
    sh:description "A treatment is targeted at a disease or phenotype and may involve multiple drug 'exposures', medical devices and/or procedures" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Procedure ;
            sh:description "connects an entity to one or more (medical) procedures" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:has_procedure ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:id ],
        [ sh:class biolink:Device ;
            sh:description "connects an entity to one or more (medical) devices" ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_device ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:timepoint ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:Drug ;
            sh:description "connects an entity to one or more drugs" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:has_drug ] ;
    sh:targetClass biolink:Treatment .

biolink:Zygosity a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:iri ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ] ;
    sh:targetClass biolink:Zygosity .

biolink:Case a sh:NodeShape ;
    sh:closed true ;
    sh:description "An individual (human) organism that has a patient role in some clinical context." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ] ;
    sh:targetClass biolink:Case .

biolink:CellLine a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ] ;
    sh:targetClass biolink:CellLine .

biolink:IndividualOrganism a sh:NodeShape ;
    sh:closed true ;
    sh:description "An instance of an organism. For example, Richard Nixon, Charles Darwin, my pet cat. Example ID: ORCID:0000-0002-5355-2576" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ] ;
    sh:targetClass biolink:IndividualOrganism .

biolink:Outcome a sh:NodeShape ;
    sh:closed false ;
    sh:description "An entity that has the role of being the consequence of an exposure event. This is an abstract mixin grouping of various categories of possible biological or non-biological (e.g. clinical) outcomes." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:Outcome .

biolink:Transcript a sh:NodeShape ;
    sh:closed true ;
    sh:description "An RNA synthesized on a DNA or RNA template by an RNA polymerase." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ] ;
    sh:targetClass biolink:Transcript .

biolink:BiologicalProcess a sh:NodeShape ;
    sh:closed true ;
    sh:description "One or more causally connected executions of molecular functions" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:NamedThing ;
            sh:description "holds between a process and a continuant, where the continuant is an output of the process" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:has_output ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:iri ],
        [ sh:class biolink:PhysicalEntity ;
            sh:description "holds between a process and a physical entity, where the physical entity executes the process" ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:enabled_by ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ],
        [ sh:class biolink:NamedThing ;
            sh:description "holds between a process and a continuant, where the continuant is an input into the process" ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_input ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:id ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 15 ;
            sh:path biolink:has_attribute ] ;
    sh:targetClass biolink:BiologicalProcess .

biolink:Drug a sh:NodeShape ;
    sh:closed true ;
    sh:description "A substance intended for use in the diagnosis, cure, mitigation, treatment, or prevention of disease" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:provided_by ],
        [ sh:description "An agglomeration of drug regulatory status worldwide. Not specific to FDA." ;
            sh:in ( "discovery_and_development_phase" "preclinical_research_phase" "fda_clinical_research_phase" "fda_review_phase_4" "fda_post_market_safety_review" "fda_clinical_research_phase_1" "fda_clinical_research_phase_2" "fda_clinical_research_phase_3" "fda_clinical_research_phase_4" "fda_fast_track" "fda_breakthrough_therapy" "fda_accelerated_approval" "fda_priority_review" "regular_fda_approval" "post_approval_withdrawal" ) ;
            sh:maxCount 1 ;
            sh:order 3 ;
            sh:path biolink:drug_regulatory_status_world_wide ],
        [ sh:datatype xsd:string ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:trade_name ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path rdf:type ],
        [ sh:description "Should be the highest level of FDA approval this chemical entity or device has, regardless of which disease, condition or phenotype it is currently being reviewed to treat.  For specific levels of FDA approval for a specific condition, disease, phenotype, etc., see the association slot, 'clinical approval status.'" ;
            sh:in ( "discovery_and_development_phase" "preclinical_research_phase" "fda_clinical_research_phase" "fda_review_phase_4" "fda_post_market_safety_review" "fda_clinical_research_phase_1" "fda_clinical_research_phase_2" "fda_clinical_research_phase_3" "fda_clinical_research_phase_4" "fda_fast_track" "fda_breakthrough_therapy" "fda_accelerated_approval" "fda_priority_review" "regular_fda_approval" "post_approval_withdrawal" ) ;
            sh:maxCount 1 ;
            sh:order 2 ;
            sh:path biolink:highest_FDA_approval_status ],
        [ sh:class biolink:ChemicalRole ;
            sh:description "A role is particular behaviour which a chemical entity may exhibit." ;
            sh:nodeKind sh:IRI ;
            sh:order 9 ;
            sh:path biolink:has_chemical_role ],
        [ sh:datatype xsd:string ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:is_supplement ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:synonym ],
        [ sh:description "" ;
            sh:in ( "over_the_counter" "prescription" ) ;
            sh:order 6 ;
            sh:path biolink:available_from ],
        [ sh:datatype xsd:boolean ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:is_toxic ],
        [ sh:description "the method or process of administering a pharmaceutical compound to achieve a therapeutic effect in humans or animals." ;
            sh:in ( "inhalation" "oral" "absorption_through_the_skin" "intravenous_injection" ) ;
            sh:order 4 ;
            sh:path biolink:routes_of_delivery ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path dct:description ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:max_tolerated_dose ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path rdfs:label ] ;
    sh:targetClass biolink:Drug .

biolink:ExposureEvent a sh:NodeShape ;
    sh:closed false ;
    sh:description "A (possibly time bounded) incidence of a feature of the environment of an organism that influences one or more phenotypic features of that organism, potentially mediated by genes" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:time ;
            sh:description "a point in time" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:timepoint ] ;
    sh:targetClass biolink:ExposureEvent .

biolink:MaterialSample a sh:NodeShape ;
    sh:closed true ;
    sh:description "A sample is a limited quantity of something (e.g. an individual or set of individuals from a population, or a portion of a substance) to be used for testing, analysis, inspection, investigation, demonstration, or trial use. [SIO]" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdfs:label ] ;
    sh:targetClass biolink:MaterialSample .

biolink:Pathway a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:iri ],
        [ sh:class biolink:NamedThing ;
            sh:description "holds between a process and a continuant, where the continuant is an output of the process" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:has_output ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 15 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ],
        [ sh:class biolink:NamedThing ;
            sh:description "holds between a process and a continuant, where the continuant is an input into the process" ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_input ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:id ],
        [ sh:class biolink:PhysicalEntity ;
            sh:description "holds between a process and a physical entity, where the physical entity executes the process" ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:enabled_by ] ;
    sh:targetClass biolink:Pathway .

biolink:LifeStage a sh:NodeShape ;
    sh:closed true ;
    sh:description "A stage of development or growth of an organism, including post-natal adult stages" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ] ;
    sh:targetClass biolink:LifeStage .

biolink:NucleicAcidEntity a sh:NodeShape ;
    sh:closed true ;
    sh:description "A nucleic acid entity is a molecular entity characterized by availability in gene databases of nucleotide-based sequence representations of its precise sequence; for convenience of representation, partial sequences of various kinds are included." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:boolean ;
            sh:description "indicates whether a molecular entity is a metabolite" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:is_metabolite ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:category ],
        [ sh:class biolink:ChemicalRole ;
            sh:description "A role is particular behaviour which a chemical entity may exhibit." ;
            sh:nodeKind sh:IRI ;
            sh:order 9 ;
            sh:path biolink:has_chemical_role ],
        [ sh:datatype xsd:string ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:trade_name ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:provided_by ],
        [ sh:description "" ;
            sh:in ( "over_the_counter" "prescription" ) ;
            sh:order 6 ;
            sh:path biolink:available_from ],
        [ sh:datatype xsd:boolean ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:is_toxic ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:max_tolerated_dose ],
        [ sh:datatype xsd:string ;
            sh:description "connects a genomic feature to its sequence" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:has_biological_sequence ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 20 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path rdf:type ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 19 ;
            sh:path biolink:has_attribute ] ;
    sh:targetClass biolink:NucleicAcidEntity .

biolink:MolecularActivity a sh:NodeShape ;
    sh:closed true ;
    sh:description "An execution of a molecular function carried out by a gene product or macromolecular complex." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:in_taxon ],
        [ sh:class biolink:MacromolecularMachineMixin ;
            sh:description "The gene product, gene, or complex that catalyzes the reaction" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 3 ;
            sh:path biolink:enabled_by ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:MolecularEntity ;
            sh:description "A chemical entity that is the input for the reaction" ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_input ],
        [ sh:class biolink:MolecularEntity ;
            sh:description "A chemical entity that is the output for the reaction" ;
            sh:nodeKind sh:IRI ;
            sh:order 2 ;
            sh:path biolink:has_output ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path dct:description ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 15 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:in_taxon_label ] ;
    sh:targetClass biolink:MolecularActivity .

biolink:PopulationOfIndividualOrganisms a sh:NodeShape ;
    sh:closed true ;
    sh:description "A collection of individuals from the same taxonomic class distinguished by one or more characteristics.  Characteristics can include, but are not limited to, shared geographic location, genetics, phenotypes." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ] ;
    sh:targetClass biolink:PopulationOfIndividualOrganisms .

biolink:MacromolecularMachineMixin a sh:NodeShape ;
    sh:closed false ;
    sh:description "A union of gene locus, gene product, and macromolecular complex. These are the basic units of function in a cell. They either carry out individual biological activities, or they encode molecules which do this." ;
    sh:ignoredProperties ( rdf:type biolink:xref biolink:synonym ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path rdfs:label ] ;
    sh:targetClass biolink:MacromolecularMachineMixin .

biolink:MolecularEntity a sh:NodeShape ;
    sh:closed true ;
    sh:description "A molecular entity is a chemical entity composed of individual or covalently bonded atoms." ;
    sh:ignoredProperties ( rdf:type biolink:in_taxon biolink:in_taxon_label biolink:has_biological_sequence ) ;
    sh:property [ sh:description "" ;
            sh:in ( "over_the_counter" "prescription" ) ;
            sh:order 2 ;
            sh:path biolink:available_from ],
        [ sh:datatype xsd:string ;
            sh:description "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:max_tolerated_dose ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:trade_name ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:boolean ;
            sh:description "indicates whether a molecular entity is a metabolite" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:is_metabolite ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:ChemicalRole ;
            sh:description "A role is particular behaviour which a chemical entity may exhibit." ;
            sh:nodeKind sh:IRI ;
            sh:order 5 ;
            sh:path biolink:has_chemical_role ],
        [ sh:datatype xsd:boolean ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:is_toxic ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:iri ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 16 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path biolink:deprecated ] ;
    sh:targetClass biolink:MolecularEntity .

biolink:PhysicalEntity a sh:NodeShape ;
    sh:closed true ;
    sh:description "An entity that has material reality (a.k.a. physical essence)." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_attribute ] ;
    sh:targetClass biolink:PhysicalEntity .

biolink:ChemicalEntityOrGeneOrGeneProduct a sh:NodeShape ;
    sh:closed false ;
    sh:description "A union of chemical entities and children, and gene or gene product. This mixin is helpful to use when searching across chemical entities that must include genes and their children as chemical entities." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass biolink:ChemicalEntityOrGeneOrGeneProduct .

biolink:Genotype a sh:NodeShape ;
    sh:closed true ;
    sh:description "An information content entity that describes a genome by specifying the total variation in genomic sequence and/or gene expression, relative to some established background" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "connects a genomic feature to its sequence" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:has_biological_sequence ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:xref ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:class biolink:Zygosity ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:has_zygosity ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ] ;
    sh:targetClass biolink:Genotype .

biolink:SequenceVariant a sh:NodeShape ;
    sh:closed true ;
    sh:description "A sequence_variant is a non exact copy of a sequence_feature or genome exhibiting one or more sequence_alteration." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:Gene ;
            sh:description "Each allele can be associated with any number of genes" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:has_gene ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The state of the sequence w.r.t a reference sequence" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:has_biological_sequence ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:in_taxon_label ] ;
    sh:targetClass biolink:SequenceVariant .

biolink:ChemicalEntity a sh:NodeShape ;
    sh:closed true ;
    sh:description "A chemical entity is a physical entity that pertains to chemistry or biochemistry." ;
    sh:ignoredProperties ( biolink:highest_FDA_approval_status biolink:routes_of_delivery biolink:drug_regulatory_status_world_wide biolink:is_supplement rdf:type biolink:is_metabolite biolink:has_biological_sequence biolink:in_taxon biolink:in_taxon_label ) ;
    sh:property [ sh:class biolink:ChemicalRole ;
            sh:description "A role is particular behaviour which a chemical entity may exhibit." ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:has_chemical_role ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:trade_name ],
        [ sh:datatype xsd:boolean ;
            sh:description "" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:is_toxic ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:deprecated ],
        [ sh:description "" ;
            sh:in ( "over_the_counter" "prescription" ) ;
            sh:order 1 ;
            sh:path biolink:available_from ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:max_tolerated_dose ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:id ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 15 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:synonym ] ;
    sh:targetClass biolink:ChemicalEntity .

biolink:Agent a sh:NodeShape ;
    sh:closed true ;
    sh:description "person, group, organization or project that provides a piece of information (i.e. a knowledge association)" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "a professional relationship between one provider (often a person) within another provider (often an organization). Target provider identity should be specified by a CURIE. Providers may have multiple affiliations." ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:affiliation ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "Different classes of agents have distinct preferred identifiers. For publishers, use the ISBN publisher code. See https://grp.isbn-international.org/ for publisher code lookups. For editors, authors and  individual providers, use the individual's ORCID if available; Otherwise, a ScopusID, ResearchID or Google Scholar ID ('GSID') may be used if the author ORCID is unknown. Institutional agents could be identified by an International Standard Name Identifier ('ISNI') code." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "it is recommended that an author's 'name' property be formatted as \"surname, firstname initial.\"" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "the particulars of the place where someone or an organization is situated.  For now, this slot is a simple text \"blob\" containing all relevant details of the given location for fitness of purpose. For the moment, this \"address\" can include other contact details such as email and phone number(?)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:address ] ;
    sh:targetClass biolink:Agent .

biolink:PhenotypicFeature a sh:NodeShape ;
    sh:closed true ;
    sh:description "A combination of entity and quality that makes up a phenotyping statement. An observable characteristic of an individual resulting from the interaction of its genotype with its molecular and physical environment." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ] ;
    sh:targetClass biolink:PhenotypicFeature .

biolink:ChemicalRole a sh:NodeShape ;
    sh:closed true ;
    sh:description "A role played by the molecular entity or part thereof within a chemical context." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_attribute_type ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:iri ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:id ] ;
    sh:targetClass biolink:ChemicalRole .

biolink:DiseaseOrPhenotypicFeature a sh:NodeShape ;
    sh:closed true ;
    sh:description "Either one of a disease or an individual phenotypic feature. Some knowledge resources such as Monarch treat these as distinct, others such as MESH conflate.  Please see definitions of phenotypic feature and disease in this model for their independent descriptions.  This class is helpful to enforce domains and ranges that may involve either a disease or a phenotypic feature." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ] ;
    sh:targetClass biolink:DiseaseOrPhenotypicFeature .

biolink:Gene a sh:NodeShape ;
    sh:closed true ;
    sh:description "A region (or regions) that includes all of the sequence elements necessary to encode a functional transcript. A gene locus may include regulatory regions, transcribed regions and/or other functional sequence regions." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Symbol for a particular thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:symbol ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 4 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "connects a genomic feature to its sequence" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:has_biological_sequence ],
        [ sh:datatype xsd:string ;
            sh:description "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ] ;
    sh:targetClass biolink:Gene .

biolink:BiologicalSex a sh:NodeShape ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:iri ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ] ;
    sh:targetClass biolink:BiologicalSex .

biolink:AnatomicalEntity a sh:NodeShape ;
    sh:closed true ;
    sh:description "A subcellular location, cell type or gross anatomical part" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:class biolink:Attribute ;
            sh:description "may often be an organism attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ] ;
    sh:targetClass biolink:AnatomicalEntity .

biolink:GeneOrGeneProduct a sh:NodeShape ;
    sh:closed false ;
    sh:description "A union of gene loci or gene products. Frequently an identifier for one will be used as proxy for another" ;
    sh:ignoredProperties ( rdf:type biolink:xref biolink:synonym ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path rdfs:label ] ;
    sh:targetClass biolink:GeneOrGeneProduct .

biolink:QuantityValue a sh:NodeShape ;
    sh:closed true ;
    sh:description "A value of an attribute that is quantitative and measurable, expressed as a combination of a unit and a numeric value" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:double ;
            sh:description "connects a quantity value to a number" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:has_numeric_value ],
        [ sh:datatype <http://purl.obolibrary.org/obo/UO_0000000> ;
            sh:description "connects a quantity value to a unit" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:has_unit ] ;
    sh:targetClass biolink:QuantityValue .

biolink:Disease a sh:NodeShape ;
    sh:closed true ;
    sh:description "A disorder of structure or function, especially one that produces specific signs, phenotypes or symptoms or that affects a specific location and is not simply a direct result of physical injury.  A disposition to undergo pathological processes that exists in an organism because of one or more disorders in that organism." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 12 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "The human readable scientific name for the taxon of the entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:in_taxon_label ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:OrganismTaxon ;
            sh:description "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'" ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:in_taxon ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:provided_by ] ;
    sh:targetClass biolink:Disease .

biolink:OrganismTaxon a sh:NodeShape ;
    sh:closed true ;
    sh:description "A classification of a set of organisms. Example instances: NCBITaxon:9606 (Homo sapiens), NCBITaxon:2 (Bacteria). Can also be used to represent strains or subspecies." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:class biolink:TaxonomicRank ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:has_taxonomic_rank ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path dct:description ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:iri ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 11 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:provided_by ] ;
    sh:targetClass biolink:OrganismTaxon .

biolink:NamedThing a sh:NodeShape ;
    sh:closed true ;
    sh:description "a databased entity or concept/class" ;
    sh:ignoredProperties ( biolink:summary biolink:longitude biolink:has_output biolink:has_chemical_role biolink:resource_role biolink:has_drug biolink:latitude biolink:has_attribute_type biolink:has_zygosity biolink:address biolink:affiliation biolink:published_in biolink:has_qualitative_value biolink:resource_id biolink:has_taxonomic_rank dct:type biolink:has_biological_sequence biolink:trade_name biolink:format schema1:logo biolink:drug_regulatory_status_world_wide biolink:timepoint biolink:creation_date biolink:volume biolink:available_from dct:distribution biolink:has_input biolink:has_dataset biolink:upstream_resource_ids biolink:has_quantitative_value biolink:max_tolerated_dose biolink:source_web_page rdf:type biolink:has_procedure biolink:has_gene_or_gene_product biolink:iso_abbreviation biolink:rights biolink:ingest_date biolink:is_toxic biolink:keywords biolink:has_device biolink:distribution_download_url biolink:authors biolink:in_taxon_label biolink:issue biolink:chapter biolink:highest_FDA_approval_status biolink:is_supplement biolink:is_metabolite biolink:license biolink:has_gene biolink:enabled_by biolink:routes_of_delivery biolink:symbol biolink:in_taxon biolink:pages biolink:mesh_terms ) ;
    sh:property [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:provided_by ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:description ] ;
    sh:targetClass biolink:NamedThing .

biolink:EvidenceType a sh:NodeShape ;
    sh:closed true ;
    sh:description "Class of evidence that supports an association" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:rights ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 14 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:format ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path dct:description ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:synonym ] ;
    sh:targetClass biolink:EvidenceType .

biolink:Publication a sh:NodeShape ;
    sh:closed true ;
    sh:description "Any ‘published’ piece of information. Publications are considered broadly to include any document or document part made available in print or on the web - which may include scientific journal issues, individual articles, and books - as well as things like pre-prints, white papers, patents, drug labels, web pages, protocol documents,  and even a part of a publication if of significant knowledge scope (e.g. a figure, figure legend, or section highlighted by NLP)." ;
    sh:ignoredProperties ( biolink:issue biolink:chapter biolink:published_in biolink:volume biolink:iso_abbreviation rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 19 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "executive  summary of a publication" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:summary ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case)." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 17 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:description "Different kinds of publication subtypes will have different preferred identifiers (curies when feasible). Precedence of identifiers for scientific articles is as follows: PMID if available; DOI if not; actual alternate CURIE otherwise. Enclosing publications (i.e. referenced by 'published in' node property) such as books and journals, should have industry-standard identifier such as from ISBN and ISSN." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:anyURI ;
            sh:description "mesh terms tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:mesh_terms ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass." ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path dct:type ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path biolink:category ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 20 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:format ],
        [ sh:class biolink:Agent ;
            sh:description "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication." ;
            sh:nodeKind sh:IRI ;
            sh:order 0 ;
            sh:path biolink:authors ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 21 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "keywords tagging a publication" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:keywords ],
        [ sh:datatype xsd:string ;
            sh:description "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:pages ] ;
    sh:targetClass biolink:Publication .

biolink:RetrievalSource a sh:NodeShape ;
    sh:closed true ;
    sh:description "Provides information about how a particular InformationResource served as a source from which knowledge expressed in an Edge, or data used to generate this knowledge, was retrieved." ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:anyURI ;
            sh:description "The InformationResource that served as a source for the knowledge expressed in an Edge, or data used to generate this knowledge." ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:resource_id ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:license ],
        [ sh:datatype xsd:anyURI ;
            sh:description "The InformationResources that served as a source for the InformationResource that served as a source for the knowledge expressed in an Edge, or data used to generate this knowledge." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:upstream_resource_ids ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:synonym ],
        [ sh:description "The role of the InformationResource in the retrieval of the knowledge expressed in an Edge, or data used to generate this knowledge." ;
            sh:in ( "primary_knowledge_source" "aggregator_knowledge_source" "supporting_data_source" ) ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:order 1 ;
            sh:path biolink:resource_role ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:rights ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 13 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 16 ;
            sh:path dct:description ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 17 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 18 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 15 ;
            sh:path rdfs:label ],
        [ sh:datatype xsd:date ;
            sh:description "date on which an entity was created. This can be applied to nodes or edges" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:creation_date ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path biolink:iri ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:format ] ;
    sh:targetClass biolink:RetrievalSource .

biolink:Study a sh:NodeShape ;
    sh:closed true ;
    sh:description "a detailed investigation and/or analysis" ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path biolink:deprecated ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 3 ;
            sh:path biolink:synonym ],
        [ sh:datatype xsd:string ;
            sh:description "A human-readable name for an attribute or entity." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path rdfs:label ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 10 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 2 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 1 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:iri ] ;
    sh:targetClass biolink:Study .

biolink:Attribute a sh:NodeShape ;
    sh:closed true ;
    sh:description "A property or characteristic of an entity. For example, an apple may have properties such as color, shape, age, crispiness. An environmental sample may have attributes such as depth, lat, long, material." ;
    sh:ignoredProperties ( biolink:timepoint rdf:type biolink:has_gene_or_gene_product biolink:has_biological_sequence biolink:in_taxon biolink:in_taxon_label ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "Alternate human-readable names for a thing" ;
            sh:nodeKind sh:Literal ;
            sh:order 9 ;
            sh:path biolink:synonym ],
        [ sh:class biolink:OntologyClass ;
            sh:description "connects an attribute to a class that describes it" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 1 ;
            sh:path biolink:has_attribute_type ],
        [ sh:datatype xsd:boolean ;
            sh:description "A boolean flag indicating that an entity is no longer considered current or valid." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 14 ;
            sh:path biolink:deprecated ],
        [ sh:class biolink:NamedThing ;
            sh:description "connects an attribute to a value" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
            sh:order 3 ;
            sh:path biolink:has_qualitative_value ],
        [ sh:datatype xsd:string ;
            sh:description "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph." ;
            sh:nodeKind sh:Literal ;
            sh:order 6 ;
            sh:path biolink:provided_by ],
        [ sh:datatype xsd:anyURI ;
            sh:description "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}" ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 10 ;
            sh:path biolink:category ],
        [ sh:datatype xsd:anyURI ;
            sh:description "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references." ;
            sh:nodeKind sh:Literal ;
            sh:order 7 ;
            sh:path biolink:xref ],
        [ sh:datatype xsd:string ;
            sh:description "a human-readable description of an entity" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 12 ;
            sh:path dct:description ],
        [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 5 ;
            sh:path biolink:id ],
        [ sh:datatype xsd:string ;
            sh:description "a long-form human readable name for a thing" ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 8 ;
            sh:path biolink:full_name ],
        [ sh:datatype xsd:string ;
            sh:description "An IRI for an entity. This is determined by the id using expansion rules." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 4 ;
            sh:path biolink:iri ],
        [ sh:class biolink:QuantityValue ;
            sh:description "connects an attribute to a value" ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:order 2 ;
            sh:path biolink:has_quantitative_value ],
        [ sh:class biolink:Attribute ;
            sh:description "connects any entity to an attribute" ;
            sh:nodeKind sh:IRI ;
            sh:order 13 ;
            sh:path biolink:has_attribute ],
        [ sh:datatype xsd:string ;
            sh:nodeKind sh:Literal ;
            sh:order 11 ;
            sh:path rdf:type ],
        [ sh:datatype xsd:string ;
            sh:description "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term." ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path rdfs:label ] ;
    sh:targetClass biolink:Attribute .

biolink:OntologyClass a sh:NodeShape ;
    sh:closed false ;
    sh:description "a concept or class in an ontology, vocabulary or thesaurus. Note that nodes in a biolink compatible KG can be considered both instances of biolink classes, and OWL classes in their own right. In general you should not need to use this class directly. Instead, use the appropriate biolink class. For example, for the GO concept of endocytosis (GO:0006897), use bl:BiologicalProcess as the type." ;
    sh:ignoredProperties ( biolink:timepoint rdf:type ) ;
    sh:property [ sh:datatype xsd:string ;
            sh:description "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:nodeKind sh:Literal ;
            sh:order 0 ;
            sh:path biolink:id ] ;
    sh:targetClass biolink:OntologyClass .

